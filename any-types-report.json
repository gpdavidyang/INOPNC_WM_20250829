{
  "totalFiles": 1006,
  "filesWithAny": 418,
  "totalAnyInstances": 1633,
  "byType": {
    "explicit": 1124,
    "implicit": 0,
    "assertion": 509
  },
  "byDirectory": {
    "types": 19,
    "lib": 216,
    "hooks": 13,
    "contexts": 8,
    "components": 697,
    "e2e": 5,
    "app": 675
  },
  "topFiles": [
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "count": 44
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "count": 43
    },
    {
      "file": "app/actions/equipment.ts",
      "count": 35
    },
    {
      "file": "app/actions/backup.ts",
      "count": 29
    },
    {
      "file": "app/actions/materials.ts",
      "count": 27
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "count": 21
    },
    {
      "file": "app/actions/admin/salary.ts",
      "count": 21
    },
    {
      "file": "app/api/photo-grid-reports/stats/route.ts",
      "count": 20
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile.tsx",
      "count": 17
    },
    {
      "file": "app/api/seed-data/route.ts",
      "count": 17
    },
    {
      "file": "app/api/admin/sites/[id]/integrated/route.ts",
      "count": 17
    },
    {
      "file": "lib/backup/backup-scheduler.ts",
      "count": 15
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile-new.tsx",
      "count": 15
    },
    {
      "file": "app/actions/attendance.ts",
      "count": 15
    },
    {
      "file": "lib/test-utils/pwa-setup.ts",
      "count": 14
    },
    {
      "file": "lib/supabase/client.ts",
      "count": 14
    },
    {
      "file": "app/api/analytics/trends/route.ts",
      "count": 14
    },
    {
      "file": "components/unified-documents/LegacyDocumentAdapter.tsx",
      "count": 13
    },
    {
      "file": "components/daily-reports/daily-report-list-new.tsx",
      "count": 13
    },
    {
      "file": "components/attendance/salary-info.tsx",
      "count": 13
    }
  ],
  "locations": [
    {
      "file": "types/supabase-extended.d.ts",
      "line": 11,
      "column": 23,
      "context": "from(table: string): any",
      "type": "explicit"
    },
    {
      "file": "types/supabase-extended.d.ts",
      "line": 21,
      "column": 22,
      "context": "backup_configs: any",
      "type": "explicit"
    },
    {
      "file": "types/supabase-extended.d.ts",
      "line": 22,
      "column": 19,
      "context": "backup_jobs: any",
      "type": "explicit"
    },
    {
      "file": "types/supabase-extended.d.ts",
      "line": 23,
      "column": 24,
      "context": "backup_schedules: any",
      "type": "explicit"
    },
    {
      "file": "types/supabase-extended.d.ts",
      "line": 26,
      "column": 22,
      "context": "site_addresses: any",
      "type": "explicit"
    },
    {
      "file": "types/supabase-extended.d.ts",
      "line": 27,
      "column": 31,
      "context": "accommodation_addresses: any",
      "type": "explicit"
    },
    {
      "file": "types/supabase-extended.d.ts",
      "line": 30,
      "column": 17,
      "context": "materials: any",
      "type": "explicit"
    },
    {
      "file": "types/supabase-extended.d.ts",
      "line": 31,
      "column": 23,
      "context": "material_stocks: any",
      "type": "explicit"
    },
    {
      "file": "types/supabase-extended.d.ts",
      "line": 32,
      "column": 29,
      "context": "material_transactions: any",
      "type": "explicit"
    },
    {
      "file": "types/supabase-extended.d.ts",
      "line": 33,
      "column": 25,
      "context": "material_requests: any",
      "type": "explicit"
    },
    {
      "file": "types/shared-documents.ts",
      "line": 88,
      "column": 10,
      "context": "details?: any;",
      "type": "explicit"
    },
    {
      "file": "types/jspdf.d.ts",
      "line": 17,
      "column": 64,
      "context": "text(text: string | string[], x: number, y: number, options?: any): jsPDF",
      "type": "explicit"
    },
    {
      "file": "types/index.ts",
      "line": 40,
      "column": 20,
      "context": "push_subscription?: any | null",
      "type": "explicit"
    },
    {
      "file": "types/index.ts",
      "line": 400,
      "column": 11,
      "context": "metadata?: any | null",
      "type": "explicit"
    },
    {
      "file": "types/index.ts",
      "line": 429,
      "column": 11,
      "context": "metadata?: any | null",
      "type": "explicit"
    },
    {
      "file": "types/index.ts",
      "line": 444,
      "column": 13,
      "context": "conditions?: any | null",
      "type": "explicit"
    },
    {
      "file": "types/index.ts",
      "line": 678,
      "column": 14,
      "context": "pdf_options?: any | null // PDF 생성 옵션 JSON",
      "type": "explicit"
    },
    {
      "file": "types/index.ts",
      "line": 731,
      "column": 15,
      "context": "markup_data: any[] // MarkupObject[] from markup types",
      "type": "explicit"
    },
    {
      "file": "types/index.ts",
      "line": 828,
      "column": 11,
      "context": "metadata?: any | null",
      "type": "explicit"
    },
    {
      "file": "lib/push-notifications.ts",
      "line": 8,
      "column": 7,
      "context": "data?: any",
      "type": "explicit"
    },
    {
      "file": "lib/pdf-generator.ts",
      "line": 99,
      "column": 43,
      "context": "const groupedByComponent: Record<string, any[]> = {}",
      "type": "explicit"
    },
    {
      "file": "lib/pdf-generator-canvas.ts",
      "line": 61,
      "column": 45,
      "context": "const groupedByComponent: Record<string, any[]> = {}",
      "type": "explicit"
    },
    {
      "file": "lib/pdf-generator-canvas.ts",
      "line": 135,
      "column": 43,
      "context": "const groupedByComponent: Record<string, any[]> = {}",
      "type": "explicit"
    },
    {
      "file": "lib/notification-config.ts",
      "line": 307,
      "column": 51,
      "context": "export function validateNotificationPayload(payload: any): { valid: boolean; errors: string[] } {",
      "type": "explicit"
    },
    {
      "file": "lib/notification-config.ts",
      "line": 323,
      "column": 35,
      "context": "payload.actions.forEach((action: any, index: number) => {",
      "type": "explicit"
    },
    {
      "file": "lib/notification-config.ts",
      "line": 340,
      "column": 59,
      "context": "export function getNotificationDeepLink(type: string, data?: any): string {",
      "type": "explicit"
    },
    {
      "file": "lib/logger.ts",
      "line": 55,
      "column": 30,
      "context": "debug(message: string, data?: any, module?: keyof LoggerConfig['modules']) {",
      "type": "explicit"
    },
    {
      "file": "lib/logger.ts",
      "line": 61,
      "column": 29,
      "context": "info(message: string, data?: any, module?: keyof LoggerConfig['modules']) {",
      "type": "explicit"
    },
    {
      "file": "lib/logger.ts",
      "line": 67,
      "column": 29,
      "context": "warn(message: string, data?: any, module?: keyof LoggerConfig['modules']) {",
      "type": "explicit"
    },
    {
      "file": "lib/logger.ts",
      "line": 73,
      "column": 31,
      "context": "error(message: string, error?: any, module?: keyof LoggerConfig['modules']) {",
      "type": "explicit"
    },
    {
      "file": "lib/logger.ts",
      "line": 80,
      "column": 35,
      "context": "production(message: string, data?: any) {",
      "type": "explicit"
    },
    {
      "file": "lib/haptic-feedback.ts",
      "line": 13,
      "column": 22,
      "context": "private vibrationAPI: any = null",
      "type": "explicit"
    },
    {
      "file": "lib/haptic-feedback.ts",
      "line": 19,
      "column": 36,
      "context": "(navigator as any).webkitVibrate ||",
      "type": "assertion"
    },
    {
      "file": "lib/haptic-feedback.ts",
      "line": 20,
      "column": 36,
      "context": "(navigator as any).mozVibrate ||",
      "type": "assertion"
    },
    {
      "file": "lib/haptic-feedback.ts",
      "line": 21,
      "column": 36,
      "context": "(navigator as any).msVibrate",
      "type": "assertion"
    },
    {
      "file": "lib/haptic-feedback.ts",
      "line": 107,
      "column": 29,
      "context": "const taptic = (window as any).Taptic",
      "type": "assertion"
    },
    {
      "file": "lib/haptic-feedback.ts",
      "line": 140,
      "column": 36,
      "context": "const effect = (navigator as any).createEffect(vibrationEffect)",
      "type": "assertion"
    },
    {
      "file": "lib/external-apps.ts",
      "line": 21,
      "column": 72,
      "context": "isIOS: () => /iPad|iPhone|iPod/.test(navigator.userAgent) && !(window as any).MSStream,",
      "type": "assertion"
    },
    {
      "file": "lib/external-apps.ts",
      "line": 29,
      "column": 47,
      "context": "if (typeof window !== 'undefined' && (window as any).gtag) {",
      "type": "assertion"
    },
    {
      "file": "lib/external-apps.ts",
      "line": 30,
      "column": 12,
      "context": "(window as any).gtag('event', 'external_app_launch', {",
      "type": "assertion"
    },
    {
      "file": "lib/error-handling.ts",
      "line": 20,
      "column": 19,
      "context": "public details?: any",
      "type": "explicit"
    },
    {
      "file": "lib/error-handling.ts",
      "line": 146,
      "column": 7,
      "context": "error: any",
      "type": "explicit"
    },
    {
      "file": "lib/env-validation.ts",
      "line": 26,
      "column": 15,
      "context": "const envVars: any = {}",
      "type": "explicit"
    },
    {
      "file": "lib/deep-linking.ts",
      "line": 179,
      "column": 46,
      "context": "private async logNotificationEngagement(data: any): Promise<void> {",
      "type": "explicit"
    },
    {
      "file": "lib/deep-linking.ts",
      "line": 196,
      "column": 43,
      "context": "handleForegroundNotification(notification: any): void {",
      "type": "explicit"
    },
    {
      "file": "hooks/useUser.ts",
      "line": 59,
      "column": 18,
      "context": "} catch (err: any) {",
      "type": "explicit"
    },
    {
      "file": "hooks/useUser.ts",
      "line": 87,
      "column": 16,
      "context": "} catch (err: any) {",
      "type": "explicit"
    },
    {
      "file": "hooks/useSalaryRealtime.ts",
      "line": 32,
      "column": 49,
      "context": "const handleSalaryUpdate = useCallback((payload: any) => {",
      "type": "explicit"
    },
    {
      "file": "hooks/useSalaryRealtime.ts",
      "line": 55,
      "column": 20,
      "context": "const channels: any[] = []",
      "type": "explicit"
    },
    {
      "file": "hooks/use-unified-documents.ts",
      "line": 34,
      "column": 16,
      "context": "markup_data?: any[]",
      "type": "explicit"
    },
    {
      "file": "hooks/use-unified-documents.ts",
      "line": 134,
      "column": 122,
      "context": "bulkAction: (action: 'delete' | 'archive' | 'restore' | 'update' | 'change_category', documentIds: string[], updateData?: any) => Promise<boolean>",
      "type": "explicit"
    },
    {
      "file": "hooks/use-unified-documents.ts",
      "line": 365,
      "column": 15,
      "context": "updateData?: any",
      "type": "explicit"
    },
    {
      "file": "hooks/use-profile.ts",
      "line": 92,
      "column": 82,
      "context": "updateData.notification_preferences = updateData.notification_preferences as any",
      "type": "assertion"
    },
    {
      "file": "hooks/use-deep-linking.ts",
      "line": 12,
      "column": 37,
      "context": "deepLinkHandler.setRouter(router as any)",
      "type": "assertion"
    },
    {
      "file": "hooks/use-auto-login.ts",
      "line": 9,
      "column": 6,
      "context": "user: any | null",
      "type": "explicit"
    },
    {
      "file": "hooks/use-auto-login.ts",
      "line": 199,
      "column": 50,
      "context": "export async function syncSessionAfterAuth(session: any) {",
      "type": "explicit"
    },
    {
      "file": "hooks/use-analytics-realtime.ts",
      "line": 13,
      "column": 12,
      "context": "event_data: any",
      "type": "explicit"
    },
    {
      "file": "hooks/use-analytics-realtime.ts",
      "line": 105,
      "column": 13,
      "context": "eventData: any,",
      "type": "explicit"
    },
    {
      "file": "contexts/auth-context.tsx",
      "line": 5,
      "column": 6,
      "context": "user: any | null",
      "type": "explicit"
    },
    {
      "file": "contexts/SiteContext.tsx",
      "line": 150,
      "column": 35,
      "context": "const site = assignment.site as any",
      "type": "assertion"
    },
    {
      "file": "contexts/SiteContext.tsx",
      "line": 155,
      "column": 18,
      "context": "(supabase as any)",
      "type": "assertion"
    },
    {
      "file": "contexts/SiteContext.tsx",
      "line": 162,
      "column": 18,
      "context": "(supabase as any)",
      "type": "assertion"
    },
    {
      "file": "contexts/SiteContext.tsx",
      "line": 185,
      "column": 35,
      "context": "member_name: (latestReport as any).member_name || '미정',",
      "type": "assertion"
    },
    {
      "file": "contexts/SiteContext.tsx",
      "line": 186,
      "column": 36,
      "context": "work_process: (latestReport as any).work_process || '미정',",
      "type": "assertion"
    },
    {
      "file": "contexts/SiteContext.tsx",
      "line": 187,
      "column": 36,
      "context": "work_section: (latestReport as any).work_section || '미정',",
      "type": "assertion"
    },
    {
      "file": "contexts/EnvironmentalContext.tsx",
      "line": 99,
      "column": 37,
      "context": "const sensor = new (window as any).AmbientLightSensor()",
      "type": "assertion"
    },
    {
      "file": "components/navbar.tsx",
      "line": 8,
      "column": 6,
      "context": "user: any",
      "type": "explicit"
    },
    {
      "file": "components/navbar.tsx",
      "line": 9,
      "column": 9,
      "context": "profile: any",
      "type": "explicit"
    },
    {
      "file": "components/navbar.tsx",
      "line": 39,
      "column": 35,
      "context": "{navigation.map((item: any) => (",
      "type": "explicit"
    },
    {
      "file": "lib/utils/logging.ts",
      "line": 11,
      "column": 12,
      "context": "oldValues?: any",
      "type": "explicit"
    },
    {
      "file": "lib/utils/logging.ts",
      "line": 12,
      "column": 12,
      "context": "newValues?: any",
      "type": "explicit"
    },
    {
      "file": "lib/utils/logging.ts",
      "line": 25,
      "column": 14,
      "context": "requestData?: any",
      "type": "explicit"
    },
    {
      "file": "lib/utils/logging.ts",
      "line": 162,
      "column": 25,
      "context": "return function (target: any, propertyName: string, descriptor: PropertyDescriptor) {",
      "type": "explicit"
    },
    {
      "file": "lib/utils/logging.ts",
      "line": 239,
      "column": 9,
      "context": "metrics: any",
      "type": "explicit"
    },
    {
      "file": "lib/utils/error-handling.ts",
      "line": 157,
      "column": 7,
      "context": "value: any,",
      "type": "explicit"
    },
    {
      "file": "lib/utils/error-handling.ts",
      "line": 251,
      "column": 15,
      "context": "let lastError: any",
      "type": "explicit"
    },
    {
      "file": "lib/utils/error-handling.ts",
      "line": 277,
      "column": 10,
      "context": "supabase: any,",
      "type": "explicit"
    },
    {
      "file": "lib/utils/error-handling.ts",
      "line": 278,
      "column": 20,
      "context": "operation: (client: any) => Promise<T>",
      "type": "explicit"
    },
    {
      "file": "lib/utils/document-utils.ts",
      "line": 504,
      "column": 57,
      "context": "!hasDocumentPermission(doc, userId, userRole, action as any)",
      "type": "assertion"
    },
    {
      "file": "lib/utils/document-utils.ts",
      "line": 518,
      "column": 49,
      "context": "export function validateDocumentMetadata(metadata: any, categoryType: string): { valid: boolean; error?: string } {",
      "type": "explicit"
    },
    {
      "file": "lib/utils/defensive-rendering.ts",
      "line": 153,
      "column": 16,
      "context": "return (obj as any)[key] ?? fallback;",
      "type": "assertion"
    },
    {
      "file": "lib/utils/auth.ts",
      "line": 9,
      "column": 6,
      "context": "user: any",
      "type": "explicit"
    },
    {
      "file": "lib/utils/auth.ts",
      "line": 10,
      "column": 9,
      "context": "profile: any",
      "type": "explicit"
    },
    {
      "file": "lib/validators/file.ts",
      "line": 119,
      "column": 68,
      "context": "if (!FILE_VALIDATION_CONFIG.ALLOWED_MIME_TYPES.includes(file.type as any)) {",
      "type": "assertion"
    },
    {
      "file": "lib/validators/file.ts",
      "line": 129,
      "column": 82,
      "context": "if (!extension || !FILE_VALIDATION_CONFIG.ALLOWED_EXTENSIONS.includes(extension as any)) {",
      "type": "assertion"
    },
    {
      "file": "lib/validators/file.ts",
      "line": 150,
      "column": 49,
      "context": "if (!rules.preferredTypes.includes(file.type as any)) {",
      "type": "assertion"
    },
    {
      "file": "lib/services/payslip-generator.ts",
      "line": 86,
      "column": 47,
      "context": "private addStandardHeader(doc: jsPDF, company: any, salary: MonthlySalary) {",
      "type": "explicit"
    },
    {
      "file": "lib/services/payslip-generator.ts",
      "line": 127,
      "column": 51,
      "context": "private addEmployeeBasicInfo(doc: jsPDF, employee: any, site: any, yPos: number) {",
      "type": "explicit"
    },
    {
      "file": "lib/services/payslip-generator.ts",
      "line": 127,
      "column": 62,
      "context": "private addEmployeeBasicInfo(doc: jsPDF, employee: any, site: any, yPos: number) {",
      "type": "explicit"
    },
    {
      "file": "lib/services/payslip-generator.ts",
      "line": 322,
      "column": 47,
      "context": "private addStandardFooter(doc: jsPDF, company: any) {",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/pwa-setup.ts",
      "line": 48,
      "column": 43,
      "context": "const mockNavigator = global.navigator as any",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/pwa-setup.ts",
      "line": 94,
      "column": 43,
      "context": "const mockNavigator = global.navigator as any",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/pwa-setup.ts",
      "line": 100,
      "column": 12,
      "context": "(global as any).Notification = createMockNotificationConstructor(notificationPermission)",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/pwa-setup.ts",
      "line": 108,
      "column": 26,
      "context": ";(global.Notification as any).requestPermission = jest.fn().mockResolvedValue(notificationPermission)",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/pwa-setup.ts",
      "line": 113,
      "column": 12,
      "context": "(global as any).caches = createMockCacheStorage()",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/pwa-setup.ts",
      "line": 147,
      "column": 23,
      "context": "(mockInstallPrompt as any).simulateUserAccept()",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/pwa-setup.ts",
      "line": 149,
      "column": 23,
      "context": "(mockInstallPrompt as any).simulateUserDismiss()",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/pwa-setup.ts",
      "line": 183,
      "column": 26,
      "context": ";(global.Notification as any).requestPermission = jest.fn().mockResolvedValue(permission)",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/pwa-setup.ts",
      "line": 237,
      "column": 7,
      "context": "data?: any",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/pwa-setup.ts",
      "line": 259,
      "column": 40,
      "context": "const pushEvent = new Event('push') as any",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/pwa-setup.ts",
      "line": 294,
      "column": 40,
      "context": "const syncEvent = new Event('sync') as any",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/pwa-setup.ts",
      "line": 311,
      "column": 41,
      "context": "const mockNavigator = global.navigator as any",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/pwa-setup.ts",
      "line": 318,
      "column": 25,
      "context": "(global.Notification as any).permission = 'default'",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/pwa-setup.ts",
      "line": 323,
      "column": 19,
      "context": "delete (global as any).caches",
      "type": "assertion"
    },
    {
      "file": "lib/search/types.ts",
      "line": 6,
      "column": 7,
      "context": "value: any",
      "type": "explicit"
    },
    {
      "file": "lib/search/types.ts",
      "line": 29,
      "column": 7,
      "context": "value: any",
      "type": "explicit"
    },
    {
      "file": "lib/search/types.ts",
      "line": 40,
      "column": 19,
      "context": "options?: { value: any; label: string }[] // For select fields",
      "type": "explicit"
    },
    {
      "file": "lib/security/security-headers.ts",
      "line": 295,
      "column": 47,
      "context": "if (typeof window !== 'undefined' && (window as any).Sentry) {",
      "type": "assertion"
    },
    {
      "file": "lib/security/security-headers.ts",
      "line": 296,
      "column": 12,
      "context": "(window as any).Sentry.captureMessage(",
      "type": "assertion"
    },
    {
      "file": "lib/security/rate-limiter.ts",
      "line": 124,
      "column": 15,
      "context": "private redis: any // Redis client would be injected",
      "type": "explicit"
    },
    {
      "file": "lib/security/rate-limiter.ts",
      "line": 126,
      "column": 26,
      "context": "constructor(redisClient?: any) {",
      "type": "explicit"
    },
    {
      "file": "lib/security/rate-limiter.ts",
      "line": 171,
      "column": 26,
      "context": "constructor(redisClient?: any) {",
      "type": "explicit"
    },
    {
      "file": "lib/security/rate-limiter.ts",
      "line": 307,
      "column": 43,
      "context": "export function getRateLimiter(redisClient?: any): RateLimiter {",
      "type": "explicit"
    },
    {
      "file": "lib/security/audit-logger.ts",
      "line": 139,
      "column": 42,
      "context": "environment: process.env.NODE_ENV as any || 'development',",
      "type": "assertion"
    },
    {
      "file": "lib/security/api-wrapper.ts",
      "line": 32,
      "column": 7,
      "context": "user?: any",
      "type": "explicit"
    },
    {
      "file": "lib/security/api-wrapper.ts",
      "line": 33,
      "column": 10,
      "context": "profile?: any",
      "type": "explicit"
    },
    {
      "file": "lib/security/api-wrapper.ts",
      "line": 44,
      "column": 10,
      "context": "details?: any",
      "type": "explicit"
    },
    {
      "file": "lib/security/api-wrapper.ts",
      "line": 298,
      "column": 10,
      "context": "details?: any",
      "type": "explicit"
    },
    {
      "file": "lib/security/api-wrapper.ts",
      "line": 381,
      "column": 36,
      "context": "export const sanitizeNumber = (input: any): number | null => {",
      "type": "explicit"
    },
    {
      "file": "lib/security/api-wrapper.ts",
      "line": 386,
      "column": 37,
      "context": "export const sanitizeBoolean = (input: any): boolean => {",
      "type": "explicit"
    },
    {
      "file": "lib/performance/metrics.ts",
      "line": 66,
      "column": 16,
      "context": "return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {",
      "type": "explicit"
    },
    {
      "file": "lib/performance/metrics.ts",
      "line": 127,
      "column": 18,
      "context": "if (!(entry as any).hadRecentInput) {",
      "type": "assertion"
    },
    {
      "file": "lib/performance/metrics.ts",
      "line": 128,
      "column": 27,
      "context": "clsValue += (entry as any).value",
      "type": "assertion"
    },
    {
      "file": "lib/performance/metrics.ts",
      "line": 139,
      "column": 66,
      "context": "performanceMetrics.recordMetric('first-input-delay', (entry as any).processingStart - entry.startTime)",
      "type": "assertion"
    },
    {
      "file": "lib/pwa/offline-storage.ts",
      "line": 17,
      "column": 6,
      "context": "data: any",
      "type": "explicit"
    },
    {
      "file": "lib/pwa/offline-storage.ts",
      "line": 32,
      "column": 67,
      "context": "async storePendingData(type: keyof typeof this.STORAGE_KEYS, data: any): Promise<string> {",
      "type": "explicit"
    },
    {
      "file": "lib/pwa/offline-storage.ts",
      "line": 126,
      "column": 29,
      "context": "cacheData(key: string, data: any, ttl?: number): void {",
      "type": "explicit"
    },
    {
      "file": "lib/pwa/offline-storage.ts",
      "line": 137,
      "column": 42,
      "context": "const filtered = cached.filter((item: any) => item.key !== key)",
      "type": "explicit"
    },
    {
      "file": "lib/pwa/offline-storage.ts",
      "line": 147,
      "column": 28,
      "context": "getCachedData(key: string): any | null {",
      "type": "explicit"
    },
    {
      "file": "lib/pwa/offline-storage.ts",
      "line": 150,
      "column": 36,
      "context": "const item = cached.find((item: any) => item.key === key)",
      "type": "explicit"
    },
    {
      "file": "lib/pwa/offline-storage.ts",
      "line": 171,
      "column": 42,
      "context": "const filtered = cached.filter((item: any) => item.key !== key)",
      "type": "explicit"
    },
    {
      "file": "lib/pwa/offline-storage.ts",
      "line": 206,
      "column": 39,
      "context": "const valid = cached.filter((item: any) => {",
      "type": "explicit"
    },
    {
      "file": "lib/pwa/offline-storage.ts",
      "line": 268,
      "column": 6,
      "context": "data: any,",
      "type": "explicit"
    },
    {
      "file": "lib/notifications/triggers.ts",
      "line": 18,
      "column": 53,
      "context": "const notifications = siteManagers.map((manager: any) => ({",
      "type": "explicit"
    },
    {
      "file": "lib/notifications/triggers.ts",
      "line": 132,
      "column": 53,
      "context": "const notifications = siteManagers.map((manager: any) => ({",
      "type": "explicit"
    },
    {
      "file": "lib/notifications/triggers.ts",
      "line": 177,
      "column": 43,
      "context": "const notifications = users.map((user: any) => ({",
      "type": "explicit"
    },
    {
      "file": "lib/notifications/triggers.ts",
      "line": 225,
      "column": 53,
      "context": "const notifications = siteManagers.map((manager: any) => ({",
      "type": "explicit"
    },
    {
      "file": "lib/supabase/storage.ts",
      "line": 224,
      "column": 11,
      "context": "): Promise<any[]> {",
      "type": "explicit"
    },
    {
      "file": "lib/supabase/session-bridge.ts",
      "line": 5,
      "column": 10,
      "context": "session?: any",
      "type": "explicit"
    },
    {
      "file": "lib/supabase/performance.ts",
      "line": 4,
      "column": 6,
      "context": "data: any",
      "type": "explicit"
    },
    {
      "file": "lib/supabase/performance.ts",
      "line": 16,
      "column": 18,
      "context": "get(key: string): any | null {",
      "type": "explicit"
    },
    {
      "file": "lib/supabase/performance.ts",
      "line": 29,
      "column": 23,
      "context": "set(key: string, data: any): void {",
      "type": "explicit"
    },
    {
      "file": "lib/supabase/daily-reports.ts",
      "line": 172,
      "column": 22,
      "context": "status: 'draft' as any",
      "type": "assertion"
    },
    {
      "file": "lib/supabase/daily-reports.ts",
      "line": 173,
      "column": 6,
      "context": "} as any)",
      "type": "assertion"
    },
    {
      "file": "lib/supabase/client.ts",
      "line": 79,
      "column": 41,
      "context": "const queryCache = new Map<string, { data: any; timestamp: number; ttl: number }>()",
      "type": "explicit"
    },
    {
      "file": "lib/supabase/client.ts",
      "line": 212,
      "column": 21,
      "context": "insert: (values: any) => this.wrapMutation(originalFrom.insert(values), table, 'insert'),",
      "type": "explicit"
    },
    {
      "file": "lib/supabase/client.ts",
      "line": 213,
      "column": 21,
      "context": "update: (values: any) => this.wrapMutation(originalFrom.update(values), table, 'update'),",
      "type": "explicit"
    },
    {
      "file": "lib/supabase/client.ts",
      "line": 215,
      "column": 21,
      "context": "upsert: (values: any) => this.wrapMutation(originalFrom.upsert(values), table, 'upsert')",
      "type": "explicit"
    },
    {
      "file": "lib/supabase/client.ts",
      "line": 220,
      "column": 32,
      "context": "private wrapQueryBuilder(query: any, table: string, operation: string, columns?: string) {",
      "type": "explicit"
    },
    {
      "file": "lib/supabase/client.ts",
      "line": 232,
      "column": 33,
      "context": "return async (...args: any[]) => {",
      "type": "explicit"
    },
    {
      "file": "lib/supabase/client.ts",
      "line": 303,
      "column": 27,
      "context": "return (...args: any[]) => {",
      "type": "explicit"
    },
    {
      "file": "lib/supabase/client.ts",
      "line": 319,
      "column": 28,
      "context": "private wrapMutation(query: any, table: string, operation: string) {",
      "type": "explicit"
    },
    {
      "file": "lib/supabase/client.ts",
      "line": 326,
      "column": 26,
      "context": "then: async (resolve: any, reject: any) => {",
      "type": "explicit"
    },
    {
      "file": "lib/supabase/client.ts",
      "line": 326,
      "column": 39,
      "context": "then: async (resolve: any, reject: any) => {",
      "type": "explicit"
    },
    {
      "file": "lib/supabase/client.ts",
      "line": 392,
      "column": 41,
      "context": "upload: async (path: string, file: any, options?: any) => {",
      "type": "explicit"
    },
    {
      "file": "lib/supabase/client.ts",
      "line": 392,
      "column": 56,
      "context": "upload: async (path: string, file: any, options?: any) => {",
      "type": "explicit"
    },
    {
      "file": "lib/supabase/client.ts",
      "line": 419,
      "column": 42,
      "context": "private setCachedQuery(key: string, data: any, ttl: number) {",
      "type": "explicit"
    },
    {
      "file": "lib/supabase/client.ts",
      "line": 549,
      "column": 18,
      "context": "return null as any",
      "type": "assertion"
    },
    {
      "file": "lib/supabase/client-simple.ts",
      "line": 51,
      "column": 48,
      "context": "set(name: string, value: string, options: any) {",
      "type": "explicit"
    },
    {
      "file": "lib/supabase/client-simple.ts",
      "line": 65,
      "column": 36,
      "context": "remove(name: string, options: any) {",
      "type": "explicit"
    },
    {
      "file": "lib/hooks/use-performance.ts",
      "line": 88,
      "column": 38,
      "context": "const memoryInfo = (performance as any).memory",
      "type": "assertion"
    },
    {
      "file": "lib/monitoring/web-vitals.ts",
      "line": 187,
      "column": 34,
      "context": "const layoutShift = entry as any",
      "type": "assertion"
    },
    {
      "file": "lib/monitoring/web-vitals.ts",
      "line": 195,
      "column": 55,
      "context": "sources: layoutShift.sources?.map((source: any) => ({",
      "type": "explicit"
    },
    {
      "file": "lib/monitoring/sentry.ts",
      "line": 168,
      "column": 35,
      "context": "export const setUserContext = (user: any) => {",
      "type": "explicit"
    },
    {
      "file": "lib/monitoring/rum.ts",
      "line": 183,
      "column": 26,
      "context": "const nav = navigator as any",
      "type": "assertion"
    },
    {
      "file": "lib/monitoring/rum.ts",
      "line": 229,
      "column": 36,
      "context": "const interaction = entry as any",
      "type": "assertion"
    },
    {
      "file": "lib/monitoring/rum.ts",
      "line": 346,
      "column": 49,
      "context": "private async sendEvent(eventType: string, data: any) {",
      "type": "explicit"
    },
    {
      "file": "lib/monitoring/performance-metrics.ts",
      "line": 152,
      "column": 14,
      "context": "let target: any = this.metrics",
      "type": "explicit"
    },
    {
      "file": "lib/monitoring/init.ts",
      "line": 105,
      "column": 44,
      "context": "const createMonitoringAlert = async (event: any) => {",
      "type": "explicit"
    },
    {
      "file": "lib/monitoring/init.ts",
      "line": 122,
      "column": 66,
      "context": "window.addEventListener('performance-budget-violation', (event: any) => {",
      "type": "explicit"
    },
    {
      "file": "lib/monitoring/init.ts",
      "line": 133,
      "column": 52,
      "context": "window.addEventListener('security-event', (event: any) => {",
      "type": "explicit"
    },
    {
      "file": "lib/export/pdf-exporter.ts",
      "line": 12,
      "column": 23,
      "context": "autoTable: (options: any) => jsPDF",
      "type": "explicit"
    },
    {
      "file": "lib/export/pdf-exporter.ts",
      "line": 153,
      "column": 44,
      "context": "const totalWorkers = reports.reduce((sum: any, r: any) => sum + (r.total_workers || 0), 0)",
      "type": "explicit"
    },
    {
      "file": "lib/export/pdf-exporter.ts",
      "line": 153,
      "column": 52,
      "context": "const totalWorkers = reports.reduce((sum: any, r: any) => sum + (r.total_workers || 0), 0)",
      "type": "explicit"
    },
    {
      "file": "lib/export/pdf-exporter.ts",
      "line": 154,
      "column": 48,
      "context": "const totalNPC1000Used = reports.reduce((sum: any, r: any) => sum + (r.npc1000_used || 0), 0)",
      "type": "explicit"
    },
    {
      "file": "lib/export/pdf-exporter.ts",
      "line": 154,
      "column": 56,
      "context": "const totalNPC1000Used = reports.reduce((sum: any, r: any) => sum + (r.npc1000_used || 0), 0)",
      "type": "explicit"
    },
    {
      "file": "lib/export/excel-exporter.ts",
      "line": 39,
      "column": 27,
      "context": "'제출일': (report as any).submitted_at ? format(new Date((report as any).submitted_at), 'yyyy-MM-dd HH:mm') : '-',",
      "type": "assertion"
    },
    {
      "file": "lib/export/excel-exporter.ts",
      "line": 39,
      "column": 74,
      "context": "'제출일': (report as any).submitted_at ? format(new Date((report as any).submitted_at), 'yyyy-MM-dd HH:mm') : '-',",
      "type": "assertion"
    },
    {
      "file": "lib/export/excel-exporter.ts",
      "line": 40,
      "column": 27,
      "context": "'승인일': (report as any).approved_at ? format(new Date((report as any).approved_at), 'yyyy-MM-dd HH:mm') : '-'",
      "type": "assertion"
    },
    {
      "file": "lib/export/excel-exporter.ts",
      "line": 40,
      "column": 73,
      "context": "'승인일': (report as any).approved_at ? format(new Date((report as any).approved_at), 'yyyy-MM-dd HH:mm') : '-'",
      "type": "assertion"
    },
    {
      "file": "lib/export/excel-exporter.ts",
      "line": 125,
      "column": 44,
      "context": "const totalWorkers = reports.reduce((sum: any, r: any) => sum + (r.total_workers || 0), 0)",
      "type": "explicit"
    },
    {
      "file": "lib/export/excel-exporter.ts",
      "line": 125,
      "column": 52,
      "context": "const totalWorkers = reports.reduce((sum: any, r: any) => sum + (r.total_workers || 0), 0)",
      "type": "explicit"
    },
    {
      "file": "lib/export/excel-exporter.ts",
      "line": 126,
      "column": 48,
      "context": "const totalNPC1000Used = reports.reduce((sum: any, r: any) => sum + (r.npc1000_used || 0), 0)",
      "type": "explicit"
    },
    {
      "file": "lib/export/excel-exporter.ts",
      "line": 126,
      "column": 56,
      "context": "const totalNPC1000Used = reports.reduce((sum: any, r: any) => sum + (r.npc1000_used || 0), 0)",
      "type": "explicit"
    },
    {
      "file": "lib/export/excel-exporter.ts",
      "line": 127,
      "column": 52,
      "context": "const totalNPC1000Incoming = reports.reduce((sum: any, r: any) => sum + (r.npc1000_incoming || 0), 0)",
      "type": "explicit"
    },
    {
      "file": "lib/export/excel-exporter.ts",
      "line": 127,
      "column": 60,
      "context": "const totalNPC1000Incoming = reports.reduce((sum: any, r: any) => sum + (r.npc1000_incoming || 0), 0)",
      "type": "explicit"
    },
    {
      "file": "lib/export/csv-exporter.ts",
      "line": 51,
      "column": 20,
      "context": "(report as any).submitted_at ? format(new Date((report as any).submitted_at), 'yyyy-MM-dd HH:mm') : '-',",
      "type": "assertion"
    },
    {
      "file": "lib/export/csv-exporter.ts",
      "line": 51,
      "column": 67,
      "context": "(report as any).submitted_at ? format(new Date((report as any).submitted_at), 'yyyy-MM-dd HH:mm') : '-',",
      "type": "assertion"
    },
    {
      "file": "lib/export/csv-exporter.ts",
      "line": 52,
      "column": 20,
      "context": "(report as any).approved_at ? format(new Date((report as any).approved_at), 'yyyy-MM-dd HH:mm') : '-'",
      "type": "assertion"
    },
    {
      "file": "lib/export/csv-exporter.ts",
      "line": 52,
      "column": 66,
      "context": "(report as any).approved_at ? format(new Date((report as any).approved_at), 'yyyy-MM-dd HH:mm') : '-'",
      "type": "assertion"
    },
    {
      "file": "lib/export/csv-exporter.ts",
      "line": 79,
      "column": 23,
      "context": "if ((navigator as any).msSaveBlob) {",
      "type": "assertion"
    },
    {
      "file": "lib/export/csv-exporter.ts",
      "line": 81,
      "column": 21,
      "context": "(navigator as any).msSaveBlob(blob, fileName)",
      "type": "assertion"
    },
    {
      "file": "lib/cache/performance-cache.ts",
      "line": 5,
      "column": 40,
      "context": "private cache = new Map<string, { data: any; timestamp: number; ttl: number }>()",
      "type": "explicit"
    },
    {
      "file": "lib/cache/performance-cache.ts",
      "line": 8,
      "column": 23,
      "context": "set(key: string, data: any, ttlMs: number = 5 * 60 * 1000) { // 기본 5분",
      "type": "explicit"
    },
    {
      "file": "lib/backup/database-backup.ts",
      "line": 243,
      "column": 53,
      "context": "const { data, error } = await (this.supabase as any)",
      "type": "assertion"
    },
    {
      "file": "lib/backup/database-backup.ts",
      "line": 270,
      "column": 53,
      "context": "const { data, error } = await (this.supabase as any)",
      "type": "assertion"
    },
    {
      "file": "lib/backup/backup-scheduler.ts",
      "line": 30,
      "column": 62,
      "context": "const { data: schedules, error } = await (this.supabase as any)",
      "type": "assertion"
    },
    {
      "file": "lib/backup/backup-scheduler.ts",
      "line": 54,
      "column": 43,
      "context": "private async createScheduledJob(schedule: any) {",
      "type": "explicit"
    },
    {
      "file": "lib/backup/backup-scheduler.ts",
      "line": 84,
      "column": 72,
      "context": "const { data: config, error: configError } = await (this.supabase as any)",
      "type": "assertion"
    },
    {
      "file": "lib/backup/backup-scheduler.ts",
      "line": 141,
      "column": 72,
      "context": "const { data: config, error: configError } = await (this.supabase as any)",
      "type": "assertion"
    },
    {
      "file": "lib/backup/backup-scheduler.ts",
      "line": 322,
      "column": 51,
      "context": "const { data, error } = await (this.supabase as any)",
      "type": "assertion"
    },
    {
      "file": "lib/backup/backup-scheduler.ts",
      "line": 354,
      "column": 19,
      "context": "const updates: any = {",
      "type": "explicit"
    },
    {
      "file": "lib/backup/backup-scheduler.ts",
      "line": 371,
      "column": 45,
      "context": "const { error } = await (this.supabase as any)",
      "type": "assertion"
    },
    {
      "file": "lib/backup/backup-scheduler.ts",
      "line": 386,
      "column": 51,
      "context": "const { data, error } = await (this.supabase as any)",
      "type": "assertion"
    },
    {
      "file": "lib/backup/backup-scheduler.ts",
      "line": 410,
      "column": 45,
      "context": "const { error } = await (this.supabase as any)",
      "type": "assertion"
    },
    {
      "file": "lib/backup/backup-scheduler.ts",
      "line": 448,
      "column": 45,
      "context": "const { error } = await (this.supabase as any)",
      "type": "assertion"
    },
    {
      "file": "lib/backup/backup-scheduler.ts",
      "line": 481,
      "column": 60,
      "context": "const { data: oldJobs, error } = await (this.supabase as any)",
      "type": "assertion"
    },
    {
      "file": "lib/backup/backup-scheduler.ts",
      "line": 503,
      "column": 31,
      "context": "await (this.supabase as any)",
      "type": "assertion"
    },
    {
      "file": "lib/backup/backup-scheduler.ts",
      "line": 520,
      "column": 51,
      "context": "const { data, error } = await (this.supabase as any)",
      "type": "assertion"
    },
    {
      "file": "lib/backup/backup-scheduler.ts",
      "line": 559,
      "column": 45,
      "context": "const { error } = await (this.supabase as any)",
      "type": "assertion"
    },
    {
      "file": "lib/backup/backup-scheduler.ts",
      "line": 596,
      "column": 45,
      "context": "const { error } = await (this.supabase as any)",
      "type": "assertion"
    },
    {
      "file": "lib/hoc/with-performance.tsx",
      "line": 286,
      "column": 15,
      "context": "[key: string]: any",
      "type": "explicit"
    },
    {
      "file": "lib/auth/profile-manager.ts",
      "line": 207,
      "column": 12,
      "context": "details?: any",
      "type": "explicit"
    },
    {
      "file": "lib/auth/admin.ts",
      "line": 11,
      "column": 56,
      "context": "export async function requireAdminAuth(): Promise<{ user: any; profile: Profile }> {",
      "type": "explicit"
    },
    {
      "file": "e2e/mobile/mobile-responsive.spec.ts",
      "line": 327,
      "column": 23,
      "context": "const resources: any[] = []",
      "type": "explicit"
    },
    {
      "file": "e2e/fixtures/auth.fixture.ts",
      "line": 5,
      "column": 19,
      "context": "authenticatedPage: any",
      "type": "explicit"
    },
    {
      "file": "e2e/fixtures/auth.fixture.ts",
      "line": 6,
      "column": 11,
      "context": "adminAuth: any",
      "type": "explicit"
    },
    {
      "file": "e2e/fixtures/auth.fixture.ts",
      "line": 7,
      "column": 12,
      "context": "workerAuth: any",
      "type": "explicit"
    },
    {
      "file": "e2e/fixtures/auth.fixture.ts",
      "line": 8,
      "column": 13,
      "context": "managerAuth: any",
      "type": "explicit"
    },
    {
      "file": "components/unified-documents/UnifiedDocumentManager.tsx",
      "line": 117,
      "column": 61,
      "context": "const handleBulkAction = async (action: string, updateData?: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/unified-documents/UnifiedDocumentManager.tsx",
      "line": 120,
      "column": 44,
      "context": "const success = await bulkAction(action as any, selectedDocuments, updateData)",
      "type": "assertion"
    },
    {
      "file": "components/unified-documents/UnifiedDocumentManager.tsx",
      "line": 279,
      "column": 52,
      "context": "handleFilterChange({ sortBy: sortBy as any, sortOrder: sortOrder as any })",
      "type": "assertion"
    },
    {
      "file": "components/unified-documents/UnifiedDocumentManager.tsx",
      "line": 279,
      "column": 81,
      "context": "handleFilterChange({ sortBy: sortBy as any, sortOrder: sortOrder as any })",
      "type": "assertion"
    },
    {
      "file": "components/unified-documents/LegacyDocumentAdapter.tsx",
      "line": 20,
      "column": 36,
      "context": "onUpload: (file: File, metadata?: any) => Promise<void>",
      "type": "explicit"
    },
    {
      "file": "components/unified-documents/LegacyDocumentAdapter.tsx",
      "line": 21,
      "column": 34,
      "context": "onUpdate: (id: string, updates: any) => Promise<void>",
      "type": "explicit"
    },
    {
      "file": "components/unified-documents/LegacyDocumentAdapter.tsx",
      "line": 66,
      "column": 56,
      "context": "const handleLegacyUpload = async (file: File, metadata: any = {}) => {",
      "type": "explicit"
    },
    {
      "file": "components/unified-documents/LegacyDocumentAdapter.tsx",
      "line": 84,
      "column": 55,
      "context": "const handleLegacyUpdate = async (id: string, updates: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/unified-documents/LegacyDocumentAdapter.tsx",
      "line": 126,
      "column": 81,
      "context": "function mapLegacyMetadata(legacyType?: string, legacyCategory?: string, metadata: any = {}) {",
      "type": "explicit"
    },
    {
      "file": "components/unified-documents/LegacyDocumentAdapter.tsx",
      "line": 175,
      "column": 33,
      "context": "function mapLegacyUpdates(updates: any) {",
      "type": "explicit"
    },
    {
      "file": "components/unified-documents/LegacyDocumentAdapter.tsx",
      "line": 176,
      "column": 14,
      "context": "const mapped: any = {}",
      "type": "explicit"
    },
    {
      "file": "components/unified-documents/LegacyDocumentAdapter.tsx",
      "line": 220,
      "column": 28,
      "context": "mapProps?: (unifiedProps: any) => Partial<T>",
      "type": "explicit"
    },
    {
      "file": "components/unified-documents/LegacyDocumentAdapter.tsx",
      "line": 253,
      "column": 8,
      "context": "(props: any) => <div>Legacy Shared Documents Component</div>,",
      "type": "explicit"
    },
    {
      "file": "components/unified-documents/LegacyDocumentAdapter.tsx",
      "line": 264,
      "column": 8,
      "context": "(props: any) => <div>Legacy Markup Documents Component</div>,",
      "type": "explicit"
    },
    {
      "file": "components/unified-documents/LegacyDocumentAdapter.tsx",
      "line": 275,
      "column": 8,
      "context": "(props: any) => <div>Legacy Required Documents Component</div>,",
      "type": "explicit"
    },
    {
      "file": "components/unified-documents/LegacyDocumentAdapter.tsx",
      "line": 286,
      "column": 8,
      "context": "(props: any) => <div>Legacy Invoice Documents Component</div>,",
      "type": "explicit"
    },
    {
      "file": "components/unified-documents/LegacyDocumentAdapter.tsx",
      "line": 297,
      "column": 8,
      "context": "(props: any) => <div>Legacy Photo Grid Documents Component</div>,",
      "type": "explicit"
    },
    {
      "file": "components/site-info/TodaySiteInfo.tsx",
      "line": 314,
      "column": 48,
      "context": "{siteInfo.managers.filter((manager: any) => manager?.role === 'construction_manager' && manager?.name && manager?.phone).map((manager: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/site-info/TodaySiteInfo.tsx",
      "line": 314,
      "column": 147,
      "context": "{siteInfo.managers.filter((manager: any) => manager?.role === 'construction_manager' && manager?.name && manager?.phone).map((manager: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/site-info/TodaySiteInfo.tsx",
      "line": 341,
      "column": 48,
      "context": "{siteInfo.managers.filter((manager: any) => manager?.role === 'assistant_manager' && manager?.name && manager?.phone).map((manager: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/site-info/TodaySiteInfo.tsx",
      "line": 341,
      "column": 144,
      "context": "{siteInfo.managers.filter((manager: any) => manager?.role === 'assistant_manager' && manager?.name && manager?.phone).map((manager: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/site-info/TodaySiteInfo.tsx",
      "line": 368,
      "column": 48,
      "context": "{siteInfo.managers.filter((manager: any) => manager?.role === 'safety_manager' && manager?.name && manager?.phone).map((manager: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/site-info/TodaySiteInfo.tsx",
      "line": 368,
      "column": 141,
      "context": "{siteInfo.managers.filter((manager: any) => manager?.role === 'safety_manager' && manager?.name && manager?.phone).map((manager: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/site-info/TodaySiteInfo.tsx",
      "line": 565,
      "column": 52,
      "context": "(window.navigator as any).standalone === true ||",
      "type": "assertion"
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "line": 69,
      "column": 46,
      "context": "const formattedSites = data?.map((site: any) => ({",
      "type": "explicit"
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "line": 70,
      "column": 20,
      "context": "id: (site as any).id,",
      "type": "assertion"
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "line": 71,
      "column": 22,
      "context": "name: (site as any).name,",
      "type": "assertion"
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "line": 72,
      "column": 25,
      "context": "address: (site as any).full_address?.[0]?.full_address || '주소 정보 없음',",
      "type": "assertion"
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "line": 74,
      "column": 39,
      "context": "start_date: new Date((site as any).construction_start_date),",
      "type": "assertion"
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "line": 75,
      "column": 37,
      "context": "end_date: new Date((site as any).construction_end_date)",
      "type": "assertion"
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "line": 78,
      "column": 18,
      "context": "(site as any).construction_start_date,",
      "type": "assertion"
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "line": 79,
      "column": 18,
      "context": "(site as any).construction_end_date",
      "type": "assertion"
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "line": 82,
      "column": 27,
      "context": "is_active: (site as any).is_active",
      "type": "assertion"
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "line": 87,
      "column": 46,
      "context": ".map(id => formattedSites.find((site: any) => site.id === id))",
      "type": "explicit"
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "line": 129,
      "column": 48,
      "context": "const formattedResults = data?.map((site: any) => ({",
      "type": "explicit"
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "line": 130,
      "column": 20,
      "context": "id: (site as any).id,",
      "type": "assertion"
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "line": 131,
      "column": 22,
      "context": "name: (site as any).name,",
      "type": "assertion"
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "line": 132,
      "column": 25,
      "context": "address: (site as any).full_address?.[0]?.full_address || '주소 정보 없음',",
      "type": "assertion"
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "line": 134,
      "column": 39,
      "context": "start_date: new Date((site as any).construction_start_date),",
      "type": "assertion"
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "line": 135,
      "column": 37,
      "context": "end_date: new Date((site as any).construction_end_date)",
      "type": "assertion"
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "line": 138,
      "column": 18,
      "context": "(site as any).construction_start_date,",
      "type": "assertion"
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "line": 139,
      "column": 18,
      "context": "(site as any).construction_end_date",
      "type": "assertion"
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "line": 142,
      "column": 27,
      "context": "is_active: (site as any).is_active",
      "type": "assertion"
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "line": 286,
      "column": 40,
      "context": "{recentSites.map((site: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/site-info/SiteSearchModal.tsx",
      "line": 307,
      "column": 42,
      "context": "{searchResults.map((site: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/site-info/SiteInfoTabs.tsx",
      "line": 33,
      "column": 13,
      "context": "currentUser: any",
      "type": "explicit"
    },
    {
      "file": "components/site-info/SiteInfoTabs.tsx",
      "line": 57,
      "column": 45,
      "context": "const [materials, setMaterials] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/site-info/SiteInfoTabs.tsx",
      "line": 58,
      "column": 47,
      "context": "const [categories, setCategories] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/site-info/SiteInfoTabs.tsx",
      "line": 59,
      "column": 45,
      "context": "const [inventory, setInventory] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/site-info/SiteInfoPageNew.tsx",
      "line": 55,
      "column": 45,
      "context": "const [materials, setMaterials] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/site-info/SiteInfoPageNew.tsx",
      "line": 56,
      "column": 47,
      "context": "const [categories, setCategories] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/site-info/SiteInfoPageNew.tsx",
      "line": 57,
      "column": 45,
      "context": "const [inventory, setInventory] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/site-info/MapAppSelector.tsx",
      "line": 79,
      "column": 56,
      "context": "{mapApps.filter(app => app.available).map((app: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/site-info/ManagerContacts.tsx",
      "line": 141,
      "column": 34,
      "context": "{managers.map((manager: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/search/SearchInterface.tsx",
      "line": 94,
      "column": 81,
      "context": "const handleRemoveAppliedFilter = async (field: string, operator: string, value: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/search/SearchBuilder.tsx",
      "line": 36,
      "column": 7,
      "context": "value: any",
      "type": "explicit"
    },
    {
      "file": "components/search/QuickFilterButtons.tsx",
      "line": 60,
      "column": 33,
      "context": "{quickFilters.map((filter: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/search/AppliedFiltersBar.tsx",
      "line": 11,
      "column": 57,
      "context": "onRemoveFilter: (field: string, operator: string, value: any) => void",
      "type": "explicit"
    },
    {
      "file": "components/providers/performance-monitoring-provider.tsx",
      "line": 24,
      "column": 7,
      "context": "user?: any",
      "type": "explicit"
    },
    {
      "file": "components/providers/performance-monitoring-provider.tsx",
      "line": 153,
      "column": 12,
      "context": "let span: any = null",
      "type": "explicit"
    },
    {
      "file": "components/providers/optimized-context-provider.tsx",
      "line": 45,
      "column": 62,
      "context": "touchMode: (localStorage.getItem('inopnc-touch-mode') as any) || 'normal',",
      "type": "assertion"
    },
    {
      "file": "components/pwa/service-worker-registration.tsx",
      "line": 370,
      "column": 31,
      "context": "const addToSync = async (data: any, type: string) => {",
      "type": "explicit"
    },
    {
      "file": "components/pwa/install-prompt.tsx",
      "line": 29,
      "column": 49,
      "context": "const isInStandaloneMode = (window.navigator as any).standalone",
      "type": "assertion"
    },
    {
      "file": "components/pwa/install-prompt.tsx",
      "line": 143,
      "column": 51,
      "context": "const isInStandaloneMode = (window.navigator as any).standalone",
      "type": "assertion"
    },
    {
      "file": "components/profile/ProfilePageClient.tsx",
      "line": 144,
      "column": 61,
      "context": "const handleNotificationSettingChange = (key: string, value: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/ui/voice-command-button.tsx",
      "line": 49,
      "column": 68,
      "context": "const SpeechRecognition = window.SpeechRecognition || (window as any).webkitSpeechRecognition",
      "type": "assertion"
    },
    {
      "file": "components/ui/voice-command-button.tsx",
      "line": 68,
      "column": 45,
      "context": "recognition.current.onresult = (event: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/ui/voice-command-button.tsx",
      "line": 85,
      "column": 44,
      "context": "recognition.current.onerror = (event: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/ui/use-toast.tsx",
      "line": 17,
      "column": 24,
      "context": "function dispatch(action: any) {",
      "type": "explicit"
    },
    {
      "file": "components/ui/use-toast.tsx",
      "line": 19,
      "column": 29,
      "context": "listeners.forEach((listener: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/ui/use-toast.tsx",
      "line": 41,
      "column": 38,
      "context": "toasts: state.toasts.filter((toast: any) => toast.id !== toastId),",
      "type": "explicit"
    },
    {
      "file": "components/ui/sortable-table.tsx",
      "line": 19,
      "column": 17,
      "context": "render?: (value: any, item: T, index: number) => React.ReactNode",
      "type": "explicit"
    },
    {
      "file": "components/ui/sortable-table.tsx",
      "line": 112,
      "column": 51,
      "context": "const getValue = (item: T, key: keyof T | string): any => {",
      "type": "explicit"
    },
    {
      "file": "components/ui/sortable-table.tsx",
      "line": 114,
      "column": 13,
      "context": "let value: any = item",
      "type": "explicit"
    },
    {
      "file": "components/ui/environment-detector.tsx",
      "line": 54,
      "column": 38,
      "context": "const connection = (navigator as any).connection",
      "type": "assertion"
    },
    {
      "file": "components/ui/environment-detector.tsx",
      "line": 78,
      "column": 37,
      "context": "const sensor = new (window as any).AmbientLightSensor()",
      "type": "assertion"
    },
    {
      "file": "components/ui/environment-detector.tsx",
      "line": 99,
      "column": 43,
      "context": "const battery = await (navigator as any).getBattery()",
      "type": "assertion"
    },
    {
      "file": "components/ui/dropdown.tsx",
      "line": 76,
      "column": 34,
      "context": "{options.map((option: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/ui/date-range-picker.tsx",
      "line": 49,
      "column": 29,
      "context": "const handleSelect = (range: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/photo-grid-tool/PhotoGridToolMain.tsx",
      "line": 21,
      "column": 30,
      "context": "const handleEdit = (document: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/photo-grid-tool/PhotoGridPreviewModal.tsx",
      "line": 19,
      "column": 11,
      "context": "photoGrid: any",
      "type": "explicit"
    },
    {
      "file": "components/photo-grid-tool/PhotoGridList.tsx",
      "line": 28,
      "column": 19,
      "context": "onEdit: (document: any) => void",
      "type": "explicit"
    },
    {
      "file": "components/photo-grid-tool/PhotoGridList.tsx",
      "line": 33,
      "column": 45,
      "context": "const [documents, setDocuments] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/photo-grid-tool/PhotoGridList.tsx",
      "line": 34,
      "column": 61,
      "context": "const [filteredDocuments, setFilteredDocuments] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/photo-grid-tool/PhotoGridList.tsx",
      "line": 37,
      "column": 37,
      "context": "const [sites, setSites] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/photo-grid-tool/PhotoGridList.tsx",
      "line": 167,
      "column": 28,
      "context": "const handlePreview = (doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/photo-grid-tool/PhotoGridCreator.tsx",
      "line": 23,
      "column": 11,
      "context": "document?: any",
      "type": "explicit"
    },
    {
      "file": "components/photo-grid-tool/PhotoGridCreator.tsx",
      "line": 38,
      "column": 37,
      "context": "const [sites, setSites] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/photo-grid-tool/PhotoGridCreator.tsx",
      "line": 114,
      "column": 47,
      "context": "const beforeImages = images.filter((img: any) => img.photo_type === 'before')",
      "type": "explicit"
    },
    {
      "file": "components/photo-grid-tool/PhotoGridCreator.tsx",
      "line": 115,
      "column": 18,
      "context": ".sort((a: any, b: any) => a.photo_order - b.photo_order)",
      "type": "explicit"
    },
    {
      "file": "components/photo-grid-tool/PhotoGridCreator.tsx",
      "line": 115,
      "column": 26,
      "context": ".sort((a: any, b: any) => a.photo_order - b.photo_order)",
      "type": "explicit"
    },
    {
      "file": "components/photo-grid-tool/PhotoGridCreator.tsx",
      "line": 116,
      "column": 46,
      "context": "const afterImages = images.filter((img: any) => img.photo_type === 'after')",
      "type": "explicit"
    },
    {
      "file": "components/photo-grid-tool/PhotoGridCreator.tsx",
      "line": 117,
      "column": 18,
      "context": ".sort((a: any, b: any) => a.photo_order - b.photo_order)",
      "type": "explicit"
    },
    {
      "file": "components/photo-grid-tool/PhotoGridCreator.tsx",
      "line": 117,
      "column": 26,
      "context": ".sort((a: any, b: any) => a.photo_order - b.photo_order)",
      "type": "explicit"
    },
    {
      "file": "components/photo-grid-tool/PhotoGridCreator.tsx",
      "line": 122,
      "column": 47,
      "context": "beforePreviews: beforeImages.map((img: any) => img.photo_url),",
      "type": "explicit"
    },
    {
      "file": "components/photo-grid-tool/PhotoGridCreator.tsx",
      "line": 123,
      "column": 45,
      "context": "afterPreviews: afterImages.map((img: any) => img.photo_url),",
      "type": "explicit"
    },
    {
      "file": "components/notifications/notification-settings.tsx",
      "line": 199,
      "column": 8,
      "context": "icon: any",
      "type": "explicit"
    },
    {
      "file": "components/monitoring/monitoring-dashboard.tsx",
      "line": 216,
      "column": 49,
      "context": "severity: alert.severity.toLowerCase() as any,",
      "type": "assertion"
    },
    {
      "file": "components/materials/npc1000-simplified.tsx",
      "line": 27,
      "column": 14,
      "context": "currentSite?: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000-simplified.tsx",
      "line": 28,
      "column": 14,
      "context": "currentUser?: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000-simplified.tsx",
      "line": 191,
      "column": 14,
      "context": "let aValue: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000-simplified.tsx",
      "line": 192,
      "column": 14,
      "context": "let bValue: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000-management.tsx",
      "line": 28,
      "column": 14,
      "context": "currentSite?: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000-management.tsx",
      "line": 29,
      "column": 14,
      "context": "currentUser?: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-transactions.tsx",
      "line": 44,
      "column": 13,
      "context": "currentUser: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-transactions.tsx",
      "line": 45,
      "column": 14,
      "context": "currentSite?: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-transactions.tsx",
      "line": 49,
      "column": 51,
      "context": "const [transactions, setTransactions] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-transactions.tsx",
      "line": 50,
      "column": 37,
      "context": "const [sites, setSites] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-transactions.tsx",
      "line": 85,
      "column": 19,
      "context": "const filters: any = {",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-transactions.tsx",
      "line": 150,
      "column": 8,
      "context": "} as any)",
      "type": "assertion"
    },
    {
      "file": "components/materials/material-transactions.tsx",
      "line": 189,
      "column": 42,
      "context": "const summary = transactions.reduce((acc: any, transaction: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-transactions.tsx",
      "line": 189,
      "column": 60,
      "context": "const summary = transactions.reduce((acc: any, transaction: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-transactions.tsx",
      "line": 388,
      "column": 107,
      "context": "onChange={(e) => setTransactionForm({ ...transactionForm, transaction_type: e.target.value as any })}",
      "type": "assertion"
    },
    {
      "file": "components/materials/material-requests.tsx",
      "line": 44,
      "column": 13,
      "context": "currentUser: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-requests.tsx",
      "line": 45,
      "column": 14,
      "context": "currentSite?: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-requests.tsx",
      "line": 49,
      "column": 43,
      "context": "const [requests, setRequests] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-requests.tsx",
      "line": 50,
      "column": 37,
      "context": "const [sites, setSites] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-requests.tsx",
      "line": 85,
      "column": 19,
      "context": "const filters: any = {}",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-requests.tsx",
      "line": 164,
      "column": 64,
      "context": "const updateRequestItem = (index: number, field: string, value: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-requests.tsx",
      "line": 211,
      "column": 64,
      "context": "const handleStatusUpdate = async (requestId: string, newStatus: any, notes?: string) => {",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-requests.tsx",
      "line": 360,
      "column": 47,
      "context": "{request.items?.map((item: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-requests.tsx",
      "line": 480,
      "column": 91,
      "context": "onChange={(e) => setRequestForm({ ...requestForm, priority: e.target.value as any })}",
      "type": "assertion"
    },
    {
      "file": "components/materials/material-management.tsx",
      "line": 29,
      "column": 13,
      "context": "currentUser: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-management.tsx",
      "line": 30,
      "column": 14,
      "context": "currentSite?: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-management-simplified.tsx",
      "line": 9,
      "column": 13,
      "context": "currentUser: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-management-simplified.tsx",
      "line": 10,
      "column": 14,
      "context": "currentSite?: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-inventory.tsx",
      "line": 39,
      "column": 13,
      "context": "currentUser: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-inventory.tsx",
      "line": 40,
      "column": 14,
      "context": "currentSite?: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-inventory.tsx",
      "line": 48,
      "column": 37,
      "context": "const [sites, setSites] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-inventory.tsx",
      "line": 49,
      "column": 45,
      "context": "const [inventory, setInventory] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-inventory.tsx",
      "line": 104,
      "column": 30,
      "context": "const getStockStatus = (item: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-inventory.tsx",
      "line": 136,
      "column": 10,
      "context": "} as any",
      "type": "assertion"
    },
    {
      "file": "components/materials/material-inventory.tsx",
      "line": 162,
      "column": 32,
      "context": "const openUpdateDialog = (item: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-catalog.tsx",
      "line": 127,
      "column": 38,
      "context": "render: (value: string, material: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-catalog.tsx",
      "line": 140,
      "column": 38,
      "context": "render: (value: string, material: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-catalog.tsx",
      "line": 169,
      "column": 38,
      "context": "render: (value: number, material: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-catalog.tsx",
      "line": 191,
      "column": 38,
      "context": "render: (value: number, material: any) =>",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-catalog.tsx",
      "line": 200,
      "column": 20,
      "context": "render: (value: any, material: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-catalog.tsx",
      "line": 200,
      "column": 35,
      "context": "render: (value: any, material: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-catalog.tsx",
      "line": 260,
      "column": 10,
      "context": "} as any)",
      "type": "assertion"
    },
    {
      "file": "components/materials/material-catalog.tsx",
      "line": 298,
      "column": 30,
      "context": "const handleEdit = (material: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-catalog.tsx",
      "line": 355,
      "column": 61,
      "context": "{rootCategory.children.map((subCategory: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/materials/material-catalog.tsx",
      "line": 565,
      "column": 98,
      "context": "Array.isArray(rootCategory.children) && rootCategory.children.map((subCategory: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/partner/WorkLogDetailModal.tsx",
      "line": 13,
      "column": 9,
      "context": "workLog: any",
      "type": "explicit"
    },
    {
      "file": "components/partner/PartnerSidebar.tsx",
      "line": 24,
      "column": 6,
      "context": "icon: any",
      "type": "explicit"
    },
    {
      "file": "components/partner/PartnerSidebar.tsx",
      "line": 154,
      "column": 1,
      "context": "}: any) {",
      "type": "explicit"
    },
    {
      "file": "components/partner/PartnerDashboardLayout.tsx",
      "line": 17,
      "column": 41,
      "context": "profile: Profile & { partner_companies?: any }",
      "type": "explicit"
    },
    {
      "file": "components/partner/PartnerDashboard.tsx",
      "line": 20,
      "column": 14,
      "context": "organization: any",
      "type": "explicit"
    },
    {
      "file": "components/markup/markup-editor.tsx",
      "line": 33,
      "column": 10,
      "context": "profile?: any",
      "type": "explicit"
    },
    {
      "file": "components/markup/markup-editor.tsx",
      "line": 219,
      "column": 45,
      "context": "const handleStampSettingsChange = (settings: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/markup/markup-editor.tsx",
      "line": 262,
      "column": 42,
      "context": "await fileManager.openDocument(fileId as any)",
      "type": "assertion"
    },
    {
      "file": "components/markup/markup-editor.tsx",
      "line": 270,
      "column": 61,
      "context": "const result = await fileManager.openDocument(document as any)",
      "type": "assertion"
    },
    {
      "file": "components/markup/markup-editor.tsx",
      "line": 306,
      "column": 40,
      "context": "const handleShare = async (permissions: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/markup/markup-editor.tsx",
      "line": 386,
      "column": 66,
      "context": "fileName={blueprintFileName || (editorState.currentFile as any)?.title || '새 마킹'}",
      "type": "assertion"
    },
    {
      "file": "components/export/export-dialog.tsx",
      "line": 57,
      "column": 53,
      "context": "const [exportFormats, setExportFormats] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/export/export-dialog.tsx",
      "line": 112,
      "column": 66,
      "context": "result = await ExcelExporter.exportDailyReports(reports as any, sitesData as any, {",
      "type": "assertion"
    },
    {
      "file": "components/export/export-dialog.tsx",
      "line": 112,
      "column": 84,
      "context": "result = await ExcelExporter.exportDailyReports(reports as any, sitesData as any, {",
      "type": "assertion"
    },
    {
      "file": "components/export/export-dialog.tsx",
      "line": 119,
      "column": 64,
      "context": "result = await PDFExporter.exportDailyReports(reports as any, sitesData as any, {",
      "type": "assertion"
    },
    {
      "file": "components/export/export-dialog.tsx",
      "line": 119,
      "column": 82,
      "context": "result = await PDFExporter.exportDailyReports(reports as any, sitesData as any, {",
      "type": "assertion"
    },
    {
      "file": "components/export/export-dialog.tsx",
      "line": 127,
      "column": 64,
      "context": "result = await CSVExporter.exportDailyReports(reports as any, sitesData as any, {",
      "type": "assertion"
    },
    {
      "file": "components/export/export-dialog.tsx",
      "line": 127,
      "column": 82,
      "context": "result = await CSVExporter.exportDailyReports(reports as any, sitesData as any, {",
      "type": "assertion"
    },
    {
      "file": "components/export/export-dialog.tsx",
      "line": 247,
      "column": 44,
      "context": "{exportFormats.map((formatInfo: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/export/export-dialog.tsx",
      "line": 344,
      "column": 30,
      "context": "{sites.map((site: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/export/export-dialog.tsx",
      "line": 391,
      "column": 27,
      "context": "].map((status: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/export/export-button.tsx",
      "line": 72,
      "column": 66,
      "context": "result = await ExcelExporter.exportDailyReports(reports as any, sitesData as any, {",
      "type": "assertion"
    },
    {
      "file": "components/export/export-button.tsx",
      "line": 72,
      "column": 84,
      "context": "result = await ExcelExporter.exportDailyReports(reports as any, sitesData as any, {",
      "type": "assertion"
    },
    {
      "file": "components/export/export-button.tsx",
      "line": 77,
      "column": 64,
      "context": "result = await PDFExporter.exportDailyReports(reports as any, sitesData as any, {",
      "type": "assertion"
    },
    {
      "file": "components/export/export-button.tsx",
      "line": 77,
      "column": 82,
      "context": "result = await PDFExporter.exportDailyReports(reports as any, sitesData as any, {",
      "type": "assertion"
    },
    {
      "file": "components/export/export-button.tsx",
      "line": 83,
      "column": 64,
      "context": "result = await CSVExporter.exportDailyReports(reports as any, sitesData as any, {",
      "type": "assertion"
    },
    {
      "file": "components/export/export-button.tsx",
      "line": 83,
      "column": 82,
      "context": "result = await CSVExporter.exportDailyReports(reports as any, sitesData as any, {",
      "type": "assertion"
    },
    {
      "file": "components/export/export-button.tsx",
      "line": 168,
      "column": 33,
      "context": "].map((format: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/debug/EnvironmentStatus.tsx",
      "line": 11,
      "column": 7,
      "context": "data?: any",
      "type": "explicit"
    },
    {
      "file": "components/debug/EnvironmentStatus.tsx",
      "line": 80,
      "column": 50,
      "context": "const failedChecks = data?.checks?.filter((check: any) => check.status === 'fail') || []",
      "type": "explicit"
    },
    {
      "file": "components/debug/EnvironmentStatus.tsx",
      "line": 81,
      "column": 48,
      "context": "const warnChecks = data?.checks?.filter((check: any) => check.status === 'warn') || []",
      "type": "explicit"
    },
    {
      "file": "components/debug/EnvironmentStatus.tsx",
      "line": 111,
      "column": 44,
      "context": "{failedChecks.map((check: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/debug/EnvironmentStatus.tsx",
      "line": 123,
      "column": 42,
      "context": "{warnChecks.map((check: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/documents/shared-documents.tsx",
      "line": 48,
      "column": 9,
      "context": "profile: any",
      "type": "explicit"
    },
    {
      "file": "components/documents/shared-documents.tsx",
      "line": 231,
      "column": 45,
      "context": "{accessibleCategories.map((category: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/documents/shared-documents.tsx",
      "line": 376,
      "column": 37,
      "context": "{filteredDocuments.map((doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/documents/shared-documents.tsx",
      "line": 437,
      "column": 37,
      "context": "{filteredDocuments.map((doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/documents/my-documents.tsx",
      "line": 29,
      "column": 9,
      "context": "profile: any",
      "type": "explicit"
    },
    {
      "file": "components/documents/my-documents.tsx",
      "line": 48,
      "column": 6,
      "context": "icon: any",
      "type": "explicit"
    },
    {
      "file": "components/documents/my-documents.tsx",
      "line": 96,
      "column": 47,
      "context": "const sorted = [...result.data].sort((a: any, b: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/documents/my-documents.tsx",
      "line": 96,
      "column": 55,
      "context": "const sorted = [...result.data].sort((a: any, b: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/documents/my-documents.tsx",
      "line": 166,
      "column": 35,
      "context": "const doc = documents.find((d: any) => d.id === docId)",
      "type": "explicit"
    },
    {
      "file": "components/documents/my-documents.tsx",
      "line": 325,
      "column": 49,
      "context": "const filteredDocuments = documents.filter((doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/documents/my-documents.tsx",
      "line": 362,
      "column": 46,
      "context": "setSelectedDocs(filteredDocuments.map((d: any) => d.id))",
      "type": "explicit"
    },
    {
      "file": "components/documents/my-documents.tsx",
      "line": 958,
      "column": 37,
      "context": "{filteredDocuments.map((doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/documents/my-documents.tsx",
      "line": 1083,
      "column": 37,
      "context": "{filteredDocuments.map((doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/documents/my-documents-improved.tsx",
      "line": 18,
      "column": 9,
      "context": "profile: any",
      "type": "explicit"
    },
    {
      "file": "components/documents/my-documents-improved.tsx",
      "line": 36,
      "column": 45,
      "context": "const [documents, setDocuments] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/documents/enhanced-document-filters.tsx",
      "line": 77,
      "column": 63,
      "context": "const handleFilterUpdate = (key: keyof DocumentFilters, value: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/documents/documents-page-with-tabs.tsx",
      "line": 24,
      "column": 9,
      "context": "profile: any",
      "type": "explicit"
    },
    {
      "file": "components/documents/documents-page-improved.tsx",
      "line": 16,
      "column": 9,
      "context": "profile: any",
      "type": "explicit"
    },
    {
      "file": "components/documents/documents-page-client.tsx",
      "line": 14,
      "column": 9,
      "context": "profile: any",
      "type": "explicit"
    },
    {
      "file": "components/documents/documents-list.tsx",
      "line": 140,
      "column": 57,
      "context": "onClick={() => window.open((document as any).file_path, '_blank')}",
      "type": "assertion"
    },
    {
      "file": "components/equipment/worker-assignment-dialog.tsx",
      "line": 19,
      "column": 8,
      "context": "worker: any",
      "type": "explicit"
    },
    {
      "file": "components/equipment/skill-management-dialog.tsx",
      "line": 19,
      "column": 8,
      "context": "worker: any",
      "type": "explicit"
    },
    {
      "file": "components/equipment/skill-management-dialog.tsx",
      "line": 319,
      "column": 41,
      "context": "onValueChange={(value: any) => setFormData({...formData, proficiency_level: value})}",
      "type": "explicit"
    },
    {
      "file": "components/equipment/resource-allocation.tsx",
      "line": 39,
      "column": 13,
      "context": "currentUser: any",
      "type": "explicit"
    },
    {
      "file": "components/equipment/resource-allocation.tsx",
      "line": 54,
      "column": 41,
      "context": "const [workers, setWorkers] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/equipment/resource-allocation.tsx",
      "line": 57,
      "column": 37,
      "context": "const [sites, setSites] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/equipment/resource-allocation.tsx",
      "line": 79,
      "column": 51,
      "context": "const skillsResult = await getWorkerSkills() as any",
      "type": "assertion"
    },
    {
      "file": "components/equipment/resource-allocation.tsx",
      "line": 80,
      "column": 71,
      "context": "const skillAssignmentsResult = await getWorkerSkillAssignments() as any",
      "type": "assertion"
    },
    {
      "file": "components/equipment/resource-allocation.tsx",
      "line": 84,
      "column": 73,
      "context": "if (workersResult.success) setWorkers(workersResult.data?.filter((p: any) => p.role === 'worker') || [])",
      "type": "explicit"
    },
    {
      "file": "components/equipment/resource-allocation.tsx",
      "line": 111,
      "column": 40,
      "context": "const handleWorkerAssignment = (worker: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/equipment/resource-allocation.tsx",
      "line": 116,
      "column": 39,
      "context": "const handleSkillManagement = (worker: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/equipment/equipment-return-dialog.tsx",
      "line": 146,
      "column": 87,
      "context": "onChange={(e) => setFormData({ ...formData, condition_in: e.target.value as any })}",
      "type": "assertion"
    },
    {
      "file": "components/equipment/equipment-management.tsx",
      "line": 38,
      "column": 13,
      "context": "currentUser: any",
      "type": "explicit"
    },
    {
      "file": "components/equipment/equipment-management.tsx",
      "line": 51,
      "column": 47,
      "context": "const [categories, setCategories] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/equipment/equipment-management.tsx",
      "line": 52,
      "column": 37,
      "context": "const [sites, setSites] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/equipment/equipment-management.tsx",
      "line": 83,
      "column": 76,
      "context": "if (categoriesResult.success) setCategories((categoriesResult.data as any[]) || [])",
      "type": "explicit"
    },
    {
      "file": "components/equipment/equipment-management.tsx",
      "line": 84,
      "column": 61,
      "context": "if (sitesResult.success) setSites((sitesResult.data as any[]) || [])",
      "type": "explicit"
    },
    {
      "file": "components/equipment/equipment-maintenance.tsx",
      "line": 31,
      "column": 13,
      "context": "currentUser: any",
      "type": "explicit"
    },
    {
      "file": "components/equipment/equipment-maintenance.tsx",
      "line": 43,
      "column": 47,
      "context": "const [categories, setCategories] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/equipment/equipment-maintenance.tsx",
      "line": 66,
      "column": 76,
      "context": "if (categoriesResult.success) setCategories((categoriesResult.data as any[]) || [])",
      "type": "explicit"
    },
    {
      "file": "components/equipment/equipment-maintenance-update-dialog.tsx",
      "line": 67,
      "column": 19,
      "context": "const updates: any = {",
      "type": "explicit"
    },
    {
      "file": "components/equipment/equipment-maintenance-update-dialog.tsx",
      "line": 170,
      "column": 81,
      "context": "onChange={(e) => setFormData({ ...formData, status: e.target.value as any })}",
      "type": "assertion"
    },
    {
      "file": "components/equipment/equipment-maintenance-dialog.tsx",
      "line": 176,
      "column": 93,
      "context": "onChange={(e) => setFormData({ ...formData, maintenance_type: e.target.value as any })}",
      "type": "assertion"
    },
    {
      "file": "components/equipment/equipment-list.tsx",
      "line": 229,
      "column": 81,
      "context": "onChange={(e) => setFilter({ ...filter, status: e.target.value as any })}",
      "type": "assertion"
    },
    {
      "file": "components/equipment/equipment-list.tsx",
      "line": 265,
      "column": 58,
      "context": "setFilter({ ...filter, sortBy: sortBy as any, sortOrder: sortOrder as any })",
      "type": "assertion"
    },
    {
      "file": "components/equipment/equipment-list.tsx",
      "line": 265,
      "column": 87,
      "context": "setFilter({ ...filter, sortBy: sortBy as any, sortOrder: sortOrder as any })",
      "type": "assertion"
    },
    {
      "file": "components/equipment/equipment-list.tsx",
      "line": 457,
      "column": 39,
      "context": "sortBy: config.key as any,",
      "type": "assertion"
    },
    {
      "file": "components/equipment/equipment-checkout-dialog.tsx",
      "line": 198,
      "column": 88,
      "context": "onChange={(e) => setFormData({ ...formData, condition_out: e.target.value as any })}",
      "type": "assertion"
    },
    {
      "file": "components/dashboard/sidebar.tsx",
      "line": 27,
      "column": 6,
      "context": "icon: any",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/sidebar.tsx",
      "line": 322,
      "column": 1,
      "context": "}: any) {",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/performance-budget-config.tsx",
      "line": 72,
      "column": 65,
      "context": "const handleBudgetChange = (index: number, field: string, value: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/dashboard-with-notifications.tsx",
      "line": 12,
      "column": 21,
      "context": "initialCurrentSite?: any",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/dashboard-layout.tsx",
      "line": 28,
      "column": 21,
      "context": "initialCurrentSite?: any",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-list.tsx",
      "line": 17,
      "column": 41,
      "context": "const [reports, setReports] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-list.tsx",
      "line": 37,
      "column": 32,
      "context": "data.map(async (report: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-list.tsx",
      "line": 169,
      "column": 30,
      "context": "{reports.map((report: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-list-new.tsx",
      "line": 251,
      "column": 31,
      "context": "{(report as any).site?.name || '현장 정보 없음'}",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-list-new.tsx",
      "line": 255,
      "column": 40,
      "context": "{new Date((report as any).report_date || report.work_date).toLocaleDateString('ko-KR')}",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-list-new.tsx",
      "line": 264,
      "column": 33,
      "context": "{(report as any).created_by_profile?.full_name || '-'}",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-list-new.tsx",
      "line": 267,
      "column": 29,
      "context": "{(report as any).weather && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-list-new.tsx",
      "line": 270,
      "column": 56,
      "context": "<span className=\"ml-1\">{(report as any).weather}</span>",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-list-new.tsx",
      "line": 273,
      "column": 30,
      "context": "{((report as any).temperature_high || (report as any).temperature_low) && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-list-new.tsx",
      "line": 273,
      "column": 66,
      "context": "{((report as any).temperature_high || (report as any).temperature_low) && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-list-new.tsx",
      "line": 277,
      "column": 35,
      "context": "{(report as any).temperature_high}°C ~ {(report as any).temperature_low}°C",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-list-new.tsx",
      "line": 277,
      "column": 74,
      "context": "{(report as any).temperature_high}°C ~ {(report as any).temperature_low}°C",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-list-new.tsx",
      "line": 281,
      "column": 29,
      "context": "{(report as any).approved_by_profile && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-list-new.tsx",
      "line": 285,
      "column": 35,
      "context": "{(report as any).approved_by_profile.full_name}",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-list-new.tsx",
      "line": 291,
      "column": 27,
      "context": "{(report as any).notes && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-list-new.tsx",
      "line": 293,
      "column": 31,
      "context": "{(report as any).notes}",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-form.tsx",
      "line": 63,
      "column": 9,
      "context": "site?: any",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-form.tsx",
      "line": 65,
      "column": 23,
      "context": "weather_conditions?: any",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-form.tsx",
      "line": 270,
      "column": 52,
      "context": "site_id: reportData.site_id || (currentUser as any).site_id || '',",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-form.tsx",
      "line": 288,
      "column": 28,
      "context": "site_id: (currentUser as any).site_id || '',",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-form.tsx",
      "line": 310,
      "column": 59,
      "context": "const [partnerCompanies, setPartnerCompanies] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-form.tsx",
      "line": 366,
      "column": 42,
      "context": "return reportData.work_logs.map((log: any) => ({",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-form.tsx",
      "line": 396,
      "column": 49,
      "context": "return reportData.worker_entries.map((entry: any) => ({",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-form.tsx",
      "line": 416,
      "column": 45,
      "context": "return reportData.receipts.map((receipt: any) => ({",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-form.tsx",
      "line": 454,
      "column": 52,
      "context": "return reportData.additional_photos.map((photo: any) => ({",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-detail.tsx",
      "line": 24,
      "column": 8,
      "context": "report: any",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-detail.tsx",
      "line": 168,
      "column": 58,
      "context": "{report.daily_report_workers.map((worker: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-detail.tsx",
      "line": 203,
      "column": 52,
      "context": "{report.before_photos.map((photo: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-detail.tsx",
      "line": 233,
      "column": 51,
      "context": "{report.after_photos.map((photo: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-detail.tsx",
      "line": 263,
      "column": 49,
      "context": "{report.receipts.map((receipt: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 35,
      "column": 9,
      "context": "site?: any",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 38,
      "column": 23,
      "context": "created_by_profile?: any",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 39,
      "column": 24,
      "context": "approved_by_profile?: any",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 56,
      "column": 49,
      "context": "const [attachments, setAttachments] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 75,
      "column": 22,
      "context": "const statusConfig: any = {",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 119,
      "column": 36,
      "context": "{new Date((report as any).report_date || report.work_date).toLocaleDateString('ko-KR', {",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 167,
      "column": 46,
      "context": "<span>{new Date((report as any).report_date || report.work_date).toLocaleDateString('ko-KR', {",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 261,
      "column": 29,
      "context": "{(report as any).component_name || (report as any).member_name || '해당 데이터 없음'}",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 261,
      "column": 63,
      "context": "{(report as any).component_name || (report as any).member_name || '해당 데이터 없음'}",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 267,
      "column": 29,
      "context": "{(report as any).work_process || (report as any).process_type || '해당 데이터 없음'}",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 267,
      "column": 61,
      "context": "{(report as any).work_process || (report as any).process_type || '해당 데이터 없음'}",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 273,
      "column": 29,
      "context": "{(report as any).work_section || '해당 데이터 없음'}",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 292,
      "column": 48,
      "context": "{report.work_records.map((record: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 316,
      "column": 21,
      "context": "{(report as any).additional_photos && (report as any).additional_photos.length > 0 ? (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 316,
      "column": 58,
      "context": "{(report as any).additional_photos && (report as any).additional_photos.length > 0 ? (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 318,
      "column": 61,
      "context": "{(report as any).additional_photos.map((photo: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 318,
      "column": 25,
      "context": "{(report as any).additional_photos.map((photo: any, index: number) => (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 343,
      "column": 21,
      "context": "{(report as any).before_photos && (report as any).before_photos.length > 0 ? (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 343,
      "column": 54,
      "context": "{(report as any).before_photos && (report as any).before_photos.length > 0 ? (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 345,
      "column": 57,
      "context": "{(report as any).before_photos.map((photo: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 345,
      "column": 25,
      "context": "{(report as any).before_photos.map((photo: any, index: number) => (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 370,
      "column": 21,
      "context": "{(report as any).after_photos && (report as any).after_photos.length > 0 ? (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 370,
      "column": 53,
      "context": "{(report as any).after_photos && (report as any).after_photos.length > 0 ? (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 372,
      "column": 56,
      "context": "{(report as any).after_photos.map((photo: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 372,
      "column": 25,
      "context": "{(report as any).after_photos.map((photo: any, index: number) => (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 397,
      "column": 21,
      "context": "{(report as any).receipts && (report as any).receipts.length > 0 ? (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 397,
      "column": 49,
      "context": "{(report as any).receipts && (report as any).receipts.length > 0 ? (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 399,
      "column": 54,
      "context": "{(report as any).receipts.map((receipt: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 399,
      "column": 25,
      "context": "{(report as any).receipts.map((receipt: any, index: number) => (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 433,
      "column": 21,
      "context": "{(report as any).headquarters_request ? (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 435,
      "column": 25,
      "context": "{(report as any).headquarters_request}",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 456,
      "column": 27,
      "context": "{(report as any).npc1000_incoming !== null && (report as any).npc1000_incoming !== undefined",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 456,
      "column": 72,
      "context": "{(report as any).npc1000_incoming !== null && (report as any).npc1000_incoming !== undefined",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 457,
      "column": 33,
      "context": "? `${(report as any).npc1000_incoming}개`",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 464,
      "column": 27,
      "context": "{(report as any).npc1000_used !== null && (report as any).npc1000_used !== undefined",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 464,
      "column": 68,
      "context": "{(report as any).npc1000_used !== null && (report as any).npc1000_used !== undefined",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 465,
      "column": 33,
      "context": "? `${(report as any).npc1000_used}개`",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 472,
      "column": 27,
      "context": "{(report as any).npc1000_remaining !== null && (report as any).npc1000_remaining !== undefined",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 472,
      "column": 73,
      "context": "{(report as any).npc1000_remaining !== null && (report as any).npc1000_remaining !== undefined",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 473,
      "column": 33,
      "context": "? `${(report as any).npc1000_remaining}개`",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 490,
      "column": 21,
      "context": "{(report as any).issues || (report as any).notes ? (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 490,
      "column": 47,
      "context": "{(report as any).issues || (report as any).notes ? (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 492,
      "column": 25,
      "context": "{(report as any).issues || (report as any).notes}",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/daily-report-detail-new.tsx",
      "line": 492,
      "column": 51,
      "context": "{(report as any).issues || (report as any).notes}",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportListMobile.tsx",
      "line": 69,
      "column": 19,
      "context": "const filters: any = {}",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportListMobile.tsx",
      "line": 353,
      "column": 38,
      "context": "{filteredReports.map((report: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportListMobile.tsx",
      "line": 354,
      "column": 33,
      "context": "const site = (report as any).site || sites?.find(s => s.id === report.site_id)",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportListEnhanced.tsx",
      "line": 189,
      "column": 19,
      "context": "const filters: any = {}",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportListEnhanced.tsx",
      "line": 219,
      "column": 48,
      "context": "const statsData = reportData.reduce((acc: any, report: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportListEnhanced.tsx",
      "line": 219,
      "column": 61,
      "context": "const statsData = reportData.reduce((acc: any, report: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportListEnhanced.tsx",
      "line": 287,
      "column": 55,
      "context": "const statsData = result.data.items.reduce((acc: any, report: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportListEnhanced.tsx",
      "line": 287,
      "column": 68,
      "context": "const statsData = result.data.items.reduce((acc: any, report: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportListEnhanced.tsx",
      "line": 333,
      "column": 55,
      "context": "const statsData = result.data.items.reduce((acc: any, report: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportListEnhanced.tsx",
      "line": 333,
      "column": 68,
      "context": "const statsData = result.data.items.reduce((acc: any, report: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportListEnhanced.tsx",
      "line": 403,
      "column": 33,
      "context": "const siteName = (report as any).site?.name || sites?.find(s => s.id === value)?.name || '미지정'",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportListEnhanced.tsx",
      "line": 470,
      "column": 20,
      "context": "render: (value: any, report: DailyReport) => {",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportListEnhanced.tsx",
      "line": 587,
      "column": 35,
      "context": "sites.map((site: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportListEnhanced.tsx",
      "line": 839,
      "column": 38,
      "context": "{sortedReports.map((report: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportListEnhanced.tsx",
      "line": 875,
      "column": 47,
      "context": "site={selectedReport ? (selectedReport as any).site || sites?.find(s => s.id === selectedReport.site_id) : undefined}",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 282,
      "column": 27,
      "context": "{(formData as any).workers && (formData as any).workers.length > 0 ? (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 282,
      "column": 56,
      "context": "{(formData as any).workers && (formData as any).workers.length > 0 ? (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 284,
      "column": 58,
      "context": "{(formData as any).workers.map((worker: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 284,
      "column": 31,
      "context": "{(formData as any).workers.map((worker: any, index: number) => (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 301,
      "column": 75,
      "context": "<span className=\"font-semibold\">총 작업인원: {(formData as any).workers.length}명</span>",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 303,
      "column": 82,
      "context": "총 {(formData as any).workers.reduce((sum: number, worker: any) => sum + (worker.hours || 8), 0)}시간",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 303,
      "column": 39,
      "context": "총 {(formData as any).workers.reduce((sum: number, worker: any) => sum + (worker.hours || 8), 0)}시간",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 335,
      "column": 25,
      "context": "{(formData as any).work_logs && (formData as any).work_logs.length > 0 && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 335,
      "column": 56,
      "context": "{(formData as any).work_logs && (formData as any).work_logs.length > 0 && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 349,
      "column": 61,
      "context": "{(formData as any).work_logs.map((log: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 349,
      "column": 35,
      "context": "{(formData as any).work_logs.map((log: any, index: number) => (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 364,
      "column": 25,
      "context": "{(formData as any).subcontractor_workers && (formData as any).subcontractor_workers.length > 0 && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 364,
      "column": 68,
      "context": "{(formData as any).subcontractor_workers && (formData as any).subcontractor_workers.length > 0 && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 371,
      "column": 69,
      "context": "{(formData as any).subcontractor_workers.map((sub: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 371,
      "column": 31,
      "context": "{(formData as any).subcontractor_workers.map((sub: any, index: number) => (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 392,
      "column": 25,
      "context": "{(formData as any).material_usage && (formData as any).material_usage.length > 0 && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 392,
      "column": 61,
      "context": "{(formData as any).material_usage && (formData as any).material_usage.length > 0 && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 409,
      "column": 71,
      "context": "{(formData as any).material_usage.map((material: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 409,
      "column": 35,
      "context": "{(formData as any).material_usage.map((material: any, index: number) => (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 424,
      "column": 25,
      "context": "{(formData as any).equipment_usage && (formData as any).equipment_usage.length > 0 && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 424,
      "column": 62,
      "context": "{(formData as any).equipment_usage && (formData as any).equipment_usage.length > 0 && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 441,
      "column": 73,
      "context": "{(formData as any).equipment_usage.map((equipment: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 441,
      "column": 35,
      "context": "{(formData as any).equipment_usage.map((equipment: any, index: number) => (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 461,
      "column": 25,
      "context": "{(formData as any).safety_incidents && (formData as any).safety_incidents.length > 0 && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 461,
      "column": 63,
      "context": "{(formData as any).safety_incidents && (formData as any).safety_incidents.length > 0 && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 468,
      "column": 69,
      "context": "{(formData as any).safety_incidents.map((incident: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 468,
      "column": 31,
      "context": "{(formData as any).safety_incidents.map((incident: any, index: number) => (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 495,
      "column": 25,
      "context": "{(formData as any).quality_inspections && (formData as any).quality_inspections.length > 0 && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 495,
      "column": 66,
      "context": "{(formData as any).quality_inspections && (formData as any).quality_inspections.length > 0 && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 502,
      "column": 74,
      "context": "{(formData as any).quality_inspections.map((inspection: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 502,
      "column": 31,
      "context": "{(formData as any).quality_inspections.map((inspection: any, index: number) => (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 537,
      "column": 27,
      "context": "{(formData as any).before_photos && (formData as any).before_photos.length > 0 ? (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 537,
      "column": 62,
      "context": "{(formData as any).before_photos && (formData as any).before_photos.length > 0 ? (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 539,
      "column": 63,
      "context": "{(formData as any).before_photos.map((photo: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 539,
      "column": 31,
      "context": "{(formData as any).before_photos.map((photo: any, index: number) => (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 570,
      "column": 27,
      "context": "{(formData as any).after_photos && (formData as any).after_photos.length > 0 ? (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 570,
      "column": 61,
      "context": "{(formData as any).after_photos && (formData as any).after_photos.length > 0 ? (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 572,
      "column": 62,
      "context": "{(formData as any).after_photos.map((photo: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 572,
      "column": 31,
      "context": "{(formData as any).after_photos.map((photo: any, index: number) => (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 603,
      "column": 27,
      "context": "{(formData as any).receipts && (formData as any).receipts.length > 0 ? (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 603,
      "column": 57,
      "context": "{(formData as any).receipts && (formData as any).receipts.length > 0 ? (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 605,
      "column": 60,
      "context": "{(formData as any).receipts.map((receipt: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailView.tsx",
      "line": 605,
      "column": 31,
      "context": "{(formData as any).receipts.map((receipt: any, index: number) => (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile.tsx",
      "line": 48,
      "column": 9,
      "context": "site?: any",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile.tsx",
      "line": 49,
      "column": 23,
      "context": "created_by_profile?: any",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile.tsx",
      "line": 50,
      "column": 24,
      "context": "approved_by_profile?: any",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile.tsx",
      "line": 101,
      "column": 36,
      "context": "const workDate = new Date((report as any).report_date || report.work_date)",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile.tsx",
      "line": 105,
      "column": 27,
      "context": "const formData = (report as any).formData || {} as DailyReportFormData",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile.tsx",
      "line": 108,
      "column": 56,
      "context": "const totalWorkerCount = report.work_logs?.reduce((sum: any, log: any) => sum + (log.worker_count || 0), 0) || 0",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile.tsx",
      "line": 108,
      "column": 66,
      "context": "const totalWorkerCount = report.work_logs?.reduce((sum: any, log: any) => sum + (log.worker_count || 0), 0) || 0",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile.tsx",
      "line": 127,
      "column": 34,
      "context": "{new Date((report as any).report_date || report.work_date).toLocaleDateString('ko-KR', {",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile.tsx",
      "line": 169,
      "column": 42,
      "context": "<span>{new Date((report as any).report_date || report.work_date).toLocaleDateString('ko-KR', {",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile.tsx",
      "line": 506,
      "column": 17,
      "context": "{(report as any).drawing_urls && Array.isArray((report as any).drawing_urls) && (report as any).drawing_urls.length > 0 && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile.tsx",
      "line": 506,
      "column": 63,
      "context": "{(report as any).drawing_urls && Array.isArray((report as any).drawing_urls) && (report as any).drawing_urls.length > 0 && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile.tsx",
      "line": 506,
      "column": 96,
      "context": "{(report as any).drawing_urls && Array.isArray((report as any).drawing_urls) && (report as any).drawing_urls.length > 0 && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile.tsx",
      "line": 516,
      "column": 25,
      "context": "{(report as any).drawing_urls.map((drawingUrl: string, index: number) => (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile.tsx",
      "line": 535,
      "column": 17,
      "context": "{(report as any).hq_request && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile.tsx",
      "line": 546,
      "column": 27,
      "context": "{(report as any).hq_request}",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile.tsx",
      "line": 604,
      "column": 21,
      "context": "{(report as any).notes && (",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile.tsx",
      "line": 607,
      "column": 27,
      "context": "{(report as any).notes}",
      "type": "assertion"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile-new.tsx",
      "line": 44,
      "column": 9,
      "context": "site?: any",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile-new.tsx",
      "line": 45,
      "column": 20,
      "context": "partner_company?: any",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile-new.tsx",
      "line": 46,
      "column": 23,
      "context": "created_by_profile?: any",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile-new.tsx",
      "line": 47,
      "column": 24,
      "context": "approved_by_profile?: any",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile-new.tsx",
      "line": 123,
      "column": 70,
      "context": "const renderSectionHeader = (sectionKey: string, title: string, icon: any, isExpanded: boolean, badge?: string) => {",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile-new.tsx",
      "line": 284,
      "column": 22,
      "context": "const statusConfig: any = {",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile-new.tsx",
      "line": 599,
      "column": 65,
      "context": "{report.workerAssignments.map((assignment: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile-new.tsx",
      "line": 654,
      "column": 51,
      "context": "{report.workers.map((worker: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile-new.tsx",
      "line": 677,
      "column": 67,
      "context": "{((report.workers?.reduce((sum: number, w: any) => sum + (w.work_hours || 0), 0) || 0) +",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile-new.tsx",
      "line": 678,
      "column": 76,
      "context": "(report.workerAssignments?.reduce((sum: number, a: any) => sum + ((a.labor_hours || 0) * 8), 0) || 0))}시간",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile-new.tsx",
      "line": 684,
      "column": 67,
      "context": "{((report.workers?.reduce((sum: number, w: any) => sum + (w.work_hours || 0), 0) || 0) / 8 +",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile-new.tsx",
      "line": 685,
      "column": 76,
      "context": "(report.workerAssignments?.reduce((sum: number, a: any) => sum + (a.labor_hours || 0), 0) || 0)).toFixed(2)} 공수",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile-new.tsx",
      "line": 708,
      "column": 49,
      "context": "{report.beforePhotos.map((photo: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile-new.tsx",
      "line": 748,
      "column": 48,
      "context": "{report.afterPhotos.map((photo: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailMobile-new.tsx",
      "line": 788,
      "column": 47,
      "context": "{report.receipts.map((receipt: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/daily-reports/DailyReportDetailDialog.tsx",
      "line": 47,
      "column": 22,
      "context": "const statusConfig: any = {",
      "type": "explicit"
    },
    {
      "file": "components/backup/BackupDashboard.tsx",
      "line": 264,
      "column": 32,
      "context": "{configs.map((config: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/backup/BackupDashboard.tsx",
      "line": 324,
      "column": 32,
      "context": "{recentJobs.map((job: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/attendance/salary-view.tsx",
      "line": 85,
      "column": 63,
      "context": "const [monthlyHistoryList, setMonthlyHistoryList] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/attendance/salary-view.tsx",
      "line": 273,
      "column": 36,
      "context": "const handleRowClick = (salaryItem: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/attendance/salary-view.tsx",
      "line": 278,
      "column": 39,
      "context": "const handleViewPayslip = (salaryItem: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/attendance/salary-info.tsx",
      "line": 27,
      "column": 9,
      "context": "profile: any",
      "type": "explicit"
    },
    {
      "file": "components/attendance/salary-info.tsx",
      "line": 53,
      "column": 37,
      "context": "const [sites, setSites] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/attendance/salary-info.tsx",
      "line": 55,
      "column": 43,
      "context": "const [payslips, setPayslips] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/attendance/salary-info.tsx",
      "line": 112,
      "column": 52,
      "context": "setSalaryData((result.data.details || []) as any)",
      "type": "assertion"
    },
    {
      "file": "components/attendance/salary-info.tsx",
      "line": 135,
      "column": 42,
      "context": "setSalaryData(salaryResult.data as any)",
      "type": "assertion"
    },
    {
      "file": "components/attendance/salary-info.tsx",
      "line": 173,
      "column": 44,
      "context": "const totalSalary = salaryData.reduce((sum: any, item: any) => sum + item.net_salary, 0)",
      "type": "explicit"
    },
    {
      "file": "components/attendance/salary-info.tsx",
      "line": 173,
      "column": 55,
      "context": "const totalSalary = salaryData.reduce((sum: any, item: any) => sum + item.net_salary, 0)",
      "type": "explicit"
    },
    {
      "file": "components/attendance/salary-info.tsx",
      "line": 174,
      "column": 42,
      "context": "const totalDays = salaryData.reduce((sum: any, item: any) => sum + item.total_days, 0)",
      "type": "explicit"
    },
    {
      "file": "components/attendance/salary-info.tsx",
      "line": 174,
      "column": 53,
      "context": "const totalDays = salaryData.reduce((sum: any, item: any) => sum + item.total_days, 0)",
      "type": "explicit"
    },
    {
      "file": "components/attendance/salary-info.tsx",
      "line": 175,
      "column": 43,
      "context": "const totalHours = salaryData.reduce((sum: any, item: any) => sum + item.total_hours, 0)",
      "type": "explicit"
    },
    {
      "file": "components/attendance/salary-info.tsx",
      "line": 175,
      "column": 54,
      "context": "const totalHours = salaryData.reduce((sum: any, item: any) => sum + item.total_hours, 0)",
      "type": "explicit"
    },
    {
      "file": "components/attendance/salary-info.tsx",
      "line": 352,
      "column": 60,
      "context": "<p className=\"font-medium\">{(item as any).worker_name}</p>",
      "type": "assertion"
    },
    {
      "file": "components/attendance/salary-info.tsx",
      "line": 407,
      "column": 34,
      "context": "{payslips.map((payslip: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/attendance/attendance-page-client.tsx",
      "line": 12,
      "column": 9,
      "context": "profile: any",
      "type": "explicit"
    },
    {
      "file": "components/attendance/attendance-check.tsx",
      "line": 57,
      "column": 42,
      "context": "setTodayAttendance(result.data[0] as any) // This should be filtered by current user",
      "type": "assertion"
    },
    {
      "file": "components/attendance/attendance-check.tsx",
      "line": 121,
      "column": 39,
      "context": "setTodayAttendance(result.data as any)",
      "type": "assertion"
    },
    {
      "file": "components/attendance/attendance-check.tsx",
      "line": 148,
      "column": 39,
      "context": "setTodayAttendance(result.data as any)",
      "type": "assertion"
    },
    {
      "file": "components/attendance/attendance-calendar.tsx",
      "line": 120,
      "column": 27,
      "context": "setSites(result.data as any)",
      "type": "assertion"
    },
    {
      "file": "components/attendance/attendance-calendar.tsx",
      "line": 165,
      "column": 56,
      "context": "setAttendanceData((result.data.records || []) as any)",
      "type": "assertion"
    },
    {
      "file": "components/attendance/attendance-calendar.tsx",
      "line": 176,
      "column": 44,
      "context": "site_id: selectedSite || (profile as any).site_id,",
      "type": "assertion"
    },
    {
      "file": "components/attendance/attendance-calendar.tsx",
      "line": 192,
      "column": 49,
      "context": "const records = result.data.map((record: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/attendance/attendance-calendar.tsx",
      "line": 212,
      "column": 45,
      "context": "const totalDays = records.filter((r: any) => r.status === 'present').length",
      "type": "explicit"
    },
    {
      "file": "components/attendance/attendance-calendar.tsx",
      "line": 213,
      "column": 59,
      "context": "const totalHours = records.reduce((sum: number, r: any) => sum + (r.work_hours || 0), 0)",
      "type": "explicit"
    },
    {
      "file": "components/attendance/attendance-calendar.tsx",
      "line": 585,
      "column": 33,
      "context": "{(selectedSiteInfo as any).code && (",
      "type": "assertion"
    },
    {
      "file": "components/attendance/attendance-calendar.tsx",
      "line": 586,
      "column": 120,
      "context": "<p className={`${getFullTypographyClass('body', 'sm', isLargeFont)} text-gray-500`}>({(selectedSiteInfo as any).code})</p>",
      "type": "assertion"
    },
    {
      "file": "components/attendance/attendance-calendar-page-client.tsx",
      "line": 12,
      "column": 9,
      "context": "profile: any",
      "type": "explicit"
    },
    {
      "file": "components/__tests__/protected-routes.test.tsx",
      "line": 58,
      "column": 39,
      "context": "MarkupEditor: ({ profile }: { profile: any }) => (",
      "type": "explicit"
    },
    {
      "file": "components/__tests__/protected-routes.test.tsx",
      "line": 68,
      "column": 47,
      "context": "default: ({ profile, onTabChange }: { profile: any; onTabChange: (tab: string) => void }) => (",
      "type": "explicit"
    },
    {
      "file": "components/__tests__/protected-routes.test.tsx",
      "line": 78,
      "column": 34,
      "context": "default: ({ profile }: { profile: any }) => (",
      "type": "explicit"
    },
    {
      "file": "components/__tests__/protected-routes.test.tsx",
      "line": 87,
      "column": 34,
      "context": "default: ({ profile }: { profile: any }) => (",
      "type": "explicit"
    },
    {
      "file": "components/__tests__/protected-routes.test.tsx",
      "line": 96,
      "column": 46,
      "context": "default: ({ profile, initialTab }: { profile: any; initialTab?: string }) => (",
      "type": "explicit"
    },
    {
      "file": "components/__tests__/protected-routes.test.tsx",
      "line": 105,
      "column": 64,
      "context": "default: ({ profile, activeTab, onTabChange, isOpen, onClose }: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/__tests__/protected-routes.test.tsx",
      "line": 122,
      "column": 36,
      "context": "default: ({ profile, onMenuClick }: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/__tests__/protected-routes.test.tsx",
      "line": 135,
      "column": 54,
      "context": "BottomNavigation: ({ items, onTabChange, activeTab }: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/__tests__/protected-routes.test.tsx",
      "line": 138,
      "column": 22,
      "context": "{items.map((item: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/__tests__/protected-routes.test.tsx",
      "line": 628,
      "column": 19,
      "context": "role: null as any,",
      "type": "assertion"
    },
    {
      "file": "components/__tests__/protected-routes.test.tsx",
      "line": 629,
      "column": 22,
      "context": "id: undefined as any,",
      "type": "assertion"
    },
    {
      "file": "components/__tests__/protected-routes-simple.test.tsx",
      "line": 19,
      "column": 60,
      "context": "const MockAdminPermissionValidator = ({ profile }: { profile: any }) => {",
      "type": "explicit"
    },
    {
      "file": "components/__tests__/protected-routes-simple.test.tsx",
      "line": 64,
      "column": 46,
      "context": "const MockProfileTab = ({ profile }: { profile: any }) => (",
      "type": "explicit"
    },
    {
      "file": "components/__tests__/protected-routes-simple.test.tsx",
      "line": 284,
      "column": 19,
      "context": "role: null as any,",
      "type": "assertion"
    },
    {
      "file": "components/__tests__/protected-routes-simple.test.tsx",
      "line": 285,
      "column": 22,
      "context": "id: undefined as any,",
      "type": "assertion"
    },
    {
      "file": "components/admin/notification-tester.tsx",
      "line": 277,
      "column": 83,
      "context": "onChange={(e) => setTest(prev => ({ ...prev, urgency: e.target.value as any }))}",
      "type": "assertion"
    },
    {
      "file": "components/admin/notification-tester.tsx",
      "line": 312,
      "column": 88,
      "context": "onChange={(e) => setTest(prev => ({ ...prev, targetType: e.target.value as any, targetIds: [] }))}",
      "type": "assertion"
    },
    {
      "file": "components/admin/notification-tester.tsx",
      "line": 324,
      "column": 88,
      "context": "onChange={(e) => setTest(prev => ({ ...prev, targetType: e.target.value as any, targetIds: [] }))}",
      "type": "assertion"
    },
    {
      "file": "components/admin/notification-tester.tsx",
      "line": 336,
      "column": 88,
      "context": "onChange={(e) => setTest(prev => ({ ...prev, targetType: e.target.value as any, targetIds: [] }))}",
      "type": "assertion"
    },
    {
      "file": "components/admin/WorkerSalarySettings.tsx",
      "line": 241,
      "column": 99,
      "context": "<CustomSelect value={employmentFilter} onValueChange={(value) => setEmploymentFilter(value as any)}>",
      "type": "assertion"
    },
    {
      "file": "components/admin/UserDetailModal.tsx",
      "line": 61,
      "column": 53,
      "context": "const [organizations, setOrganizations] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/admin/SystemManagement.tsx",
      "line": 199,
      "column": 80,
      "context": "const handleConfigurationUpdate = async (config: SystemConfiguration, newValue: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/admin/SystemManagement.tsx",
      "line": 279,
      "column": 20,
      "context": "render: (value: any, config: SystemConfiguration) => {",
      "type": "explicit"
    },
    {
      "file": "components/admin/SiteUnifiedManagement.tsx",
      "line": 398,
      "column": 32,
      "context": "status: formData.status as any,",
      "type": "assertion"
    },
    {
      "file": "components/admin/SiteManagementList.tsx",
      "line": 202,
      "column": 16,
      "context": "let aValue: any = a[sortField]",
      "type": "explicit"
    },
    {
      "file": "components/admin/SiteManagementList.tsx",
      "line": 203,
      "column": 16,
      "context": "let bValue: any = b[sortField]",
      "type": "explicit"
    },
    {
      "file": "components/admin/SiteManagementList.tsx",
      "line": 301,
      "column": 43,
      "context": "{filteredAndSortedSites.map((site: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/admin/SiteManagementList.tsx",
      "line": 506,
      "column": 45,
      "context": "{filteredAndSortedSites.map((site: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/admin/SiteManagementList.tsx",
      "line": 638,
      "column": 21,
      "context": "onSubmit: (formData: any) => void",
      "type": "explicit"
    },
    {
      "file": "components/admin/NotificationCenter.tsx",
      "line": 586,
      "column": 93,
      "context": "onChange={(e) => setSendForm({ ...sendForm, recipient_type: e.target.value as any })}",
      "type": "assertion"
    },
    {
      "file": "components/admin/MaterialsManagement.tsx",
      "line": 109,
      "column": 21,
      "context": "statusFilter as any",
      "type": "assertion"
    },
    {
      "file": "components/admin/MaterialsManagement.tsx",
      "line": 188,
      "column": 27,
      "context": "setStatusFilter(status as any)",
      "type": "assertion"
    },
    {
      "file": "components/admin/MaterialsManagement.tsx",
      "line": 401,
      "column": 34,
      "context": "render: (value: string, site: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/admin/MaterialsManagement.tsx",
      "line": 413,
      "column": 57,
      "context": "render: (value: 'normal' | 'low' | 'critical', site: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/admin/MaterialsManagement.tsx",
      "line": 649,
      "column": 34,
      "context": "data={getCurrentData() as any[]}",
      "type": "explicit"
    },
    {
      "file": "components/admin/MaterialsManagement.tsx",
      "line": 650,
      "column": 40,
      "context": "columns={getCurrentColumns() as any[]}",
      "type": "explicit"
    },
    {
      "file": "components/admin/MaterialsManagement.tsx",
      "line": 656,
      "column": 23,
      "context": "getRowId={(item: any) => item.id || item.site_id}",
      "type": "explicit"
    },
    {
      "file": "components/admin/GlobalSearchModal.tsx",
      "line": 18,
      "column": 7,
      "context": "icon?: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/GlobalSearchModal.tsx",
      "line": 21,
      "column": 11,
      "context": "metadata?: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/GlobalSearchModal.tsx",
      "line": 103,
      "column": 41,
      "context": "setRecentSearches(parsed.map((s: any) => ({",
      "type": "explicit"
    },
    {
      "file": "components/admin/GlobalSearch.tsx",
      "line": 29,
      "column": 11,
      "context": "metadata?: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/GlobalSearch.tsx",
      "line": 58,
      "column": 39,
      "context": "setRecentSearches(parsed.map((s: any) => ({",
      "type": "explicit"
    },
    {
      "file": "components/admin/EmailNotifications.tsx",
      "line": 30,
      "column": 45,
      "context": "const [templates, setTemplates] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/admin/EmailNotifications.tsx",
      "line": 31,
      "column": 41,
      "context": "const [history, setHistory] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/admin/EmailNotifications.tsx",
      "line": 167,
      "column": 31,
      "context": "const useTemplate = (template: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/admin/EmailNotifications.tsx",
      "line": 243,
      "column": 52,
      "context": "onClick={() => setActiveTab(tab.key as any)}",
      "type": "assertion"
    },
    {
      "file": "components/admin/EmailNotifications.tsx",
      "line": 499,
      "column": 67,
      "context": "onChange={(e) => setHistoryFilter(e.target.value as any)}",
      "type": "assertion"
    },
    {
      "file": "components/admin/DocumentManagement.tsx",
      "line": 462,
      "column": 146,
      "context": "{integratedDocuments.documents_by_category && Object.entries(integratedDocuments.documents_by_category).map(([category, docs]: [string, any[]]) => {",
      "type": "explicit"
    },
    {
      "file": "components/admin/BulkActionBar.tsx",
      "line": 9,
      "column": 6,
      "context": "icon: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/AuditLogs.tsx",
      "line": 36,
      "column": 10,
      "context": "changes?: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/AuditLogs.tsx",
      "line": 37,
      "column": 11,
      "context": "metadata?: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/AnalyticsDashboard.tsx",
      "line": 152,
      "column": 59,
      "context": "setProductivityData(productivityJson.data.map((site: any) => ({",
      "type": "explicit"
    },
    {
      "file": "components/admin/AnalyticsDashboard.tsx",
      "line": 163,
      "column": 44,
      "context": "setCostData(costJson.data.map((month: any) => ({",
      "type": "explicit"
    },
    {
      "file": "components/admin/AnalyticsDashboard.tsx",
      "line": 174,
      "column": 74,
      "context": "setWorkerPerformance(performanceJson.data.slice(0, 10).map((worker: any) => ({",
      "type": "explicit"
    },
    {
      "file": "components/admin/AdminDataTable.tsx",
      "line": 14,
      "column": 17,
      "context": "render?: (value: any, row: T) => React.ReactNode",
      "type": "explicit"
    },
    {
      "file": "components/admin/AdminDataTable.tsx",
      "line": 34,
      "column": 8,
      "context": "icon: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/AdminDashboardLayout.tsx",
      "line": 262,
      "column": 40,
      "context": "{allCategories.map((category: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/admin/AdminDashboardLayout.tsx",
      "line": 265,
      "column": 46,
      "context": "{category.items.filter((item: any) => !item.hidden).map((item: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/admin/AdminDashboardLayout.tsx",
      "line": 265,
      "column": 79,
      "context": "{category.items.filter((item: any) => !item.hidden).map((item: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/admin/AdminDashboardLayout.tsx",
      "line": 345,
      "column": 38,
      "context": "{allCategories.map((category: any, categoryIndex: number) => {",
      "type": "explicit"
    },
    {
      "file": "components/admin/AdminDashboardLayout.tsx",
      "line": 347,
      "column": 59,
      "context": "const hasActiveItem = category.items.some((item: any) => pathname === item.href)",
      "type": "explicit"
    },
    {
      "file": "components/admin/AdminDashboardLayout.tsx",
      "line": 375,
      "column": 48,
      "context": "{category.items.filter((item: any) => !item.hidden).map((item: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/admin/AdminDashboardLayout.tsx",
      "line": 375,
      "column": 81,
      "context": "{category.items.filter((item: any) => !item.hidden).map((item: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/test-session/page.tsx",
      "line": 10,
      "column": 49,
      "context": "const [testResults, setTestResults] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "app/team/team-list.tsx",
      "line": 9,
      "column": 13,
      "context": "currentUser: any",
      "type": "explicit"
    },
    {
      "file": "app/team/team-list.tsx",
      "line": 10,
      "column": 16,
      "context": "currentProfile: any",
      "type": "explicit"
    },
    {
      "file": "app/team/team-list.tsx",
      "line": 28,
      "column": 28,
      "context": "const handleEdit = (member: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/team/team-list.tsx",
      "line": 87,
      "column": 38,
      "context": "{teamMembers.map((member: any) => (",
      "type": "explicit"
    },
    {
      "file": "app/team/team-list.tsx",
      "line": 196,
      "column": 89,
      "context": "onChange={(e) => setFormData({ ...formData, role: e.target.value as any })}",
      "type": "assertion"
    },
    {
      "file": "app/tasks/task-list.tsx",
      "line": 10,
      "column": 13,
      "context": "currentUser: any",
      "type": "explicit"
    },
    {
      "file": "app/tasks/task-list.tsx",
      "line": 11,
      "column": 16,
      "context": "currentProfile: any",
      "type": "explicit"
    },
    {
      "file": "app/tasks/task-list.tsx",
      "line": 186,
      "column": 39,
      "context": "filteredTasks.map((task: any) => (",
      "type": "explicit"
    },
    {
      "file": "app/projects/project-list.tsx",
      "line": 10,
      "column": 13,
      "context": "currentUser: any",
      "type": "explicit"
    },
    {
      "file": "app/projects/project-list.tsx",
      "line": 11,
      "column": 16,
      "context": "currentProfile: any",
      "type": "explicit"
    },
    {
      "file": "app/projects/project-list.tsx",
      "line": 118,
      "column": 34,
      "context": "{projects.map((project: any) => (",
      "type": "explicit"
    },
    {
      "file": "app/pdf-viewer/page.tsx",
      "line": 97,
      "column": 38,
      "context": "(window.navigator as any).standalone === true",
      "type": "assertion"
    },
    {
      "file": "app/dashboard/dashboard-content.tsx",
      "line": 8,
      "column": 6,
      "context": "user: any",
      "type": "explicit"
    },
    {
      "file": "app/dashboard/dashboard-content.tsx",
      "line": 9,
      "column": 9,
      "context": "profile: any",
      "type": "explicit"
    },
    {
      "file": "app/api-test/page.tsx",
      "line": 8,
      "column": 41,
      "context": "const [results, setResults] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "app/api-test/page.tsx",
      "line": 11,
      "column": 41,
      "context": "const addResult = (test: string, result: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/auth/actions.ts",
      "line": 306,
      "column": 63,
      "context": "export async function updateNotificationPreferences(preferences: any) {",
      "type": "explicit"
    },
    {
      "file": "app/auth/actions.ts",
      "line": 539,
      "column": 31,
      "context": "siteNames = sites?.map((s: any) => s.name) || []",
      "type": "explicit"
    },
    {
      "file": "app/auth/actions.ts",
      "line": 544,
      "column": 21,
      "context": "const profileData: any = {",
      "type": "explicit"
    },
    {
      "file": "app/actions/workflows.ts",
      "line": 128,
      "column": 9,
      "context": "updates: any",
      "type": "explicit"
    },
    {
      "file": "app/actions/workflows.ts",
      "line": 306,
      "column": 8,
      "context": "data: any",
      "type": "explicit"
    },
    {
      "file": "app/actions/validation.ts",
      "line": 6,
      "column": 15,
      "context": "[key: string]: any",
      "type": "explicit"
    },
    {
      "file": "app/actions/site-info.ts",
      "line": 138,
      "column": 18,
      "context": "const siteData: any = {",
      "type": "explicit"
    },
    {
      "file": "app/actions/site-info.ts",
      "line": 185,
      "column": 48,
      "context": "const ptwDocument = documents?.find((doc: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/actions/site-info.ts",
      "line": 189,
      "column": 54,
      "context": "const blueprintDocument = documents?.find((doc: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/actions/site-info.ts",
      "line": 303,
      "column": 45,
      "context": "const historyData = data?.map((assignment: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/site-info-fallback.ts",
      "line": 160,
      "column": 39,
      "context": "const history = assignments?.map((a: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/site-info-direct.ts",
      "line": 178,
      "column": 39,
      "context": "const history = assignments?.map((a: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/site-info-deployment.ts",
      "line": 94,
      "column": 41,
      "context": "const authCookie = allCookies.find((c: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/actions/site-info-deployment.ts",
      "line": 262,
      "column": 28,
      "context": "function formatSiteData(site: any, assignment: any) {",
      "type": "explicit"
    },
    {
      "file": "app/actions/site-info-deployment.ts",
      "line": 262,
      "column": 45,
      "context": "function formatSiteData(site: any, assignment: any) {",
      "type": "explicit"
    },
    {
      "file": "app/actions/site-info-deployment.ts",
      "line": 342,
      "column": 36,
      "context": "data: data.map((assignment: any) => formatSiteData(assignment.sites, assignment))",
      "type": "explicit"
    },
    {
      "file": "app/actions/site-documents.ts",
      "line": 44,
      "column": 40,
      "context": "const siteDocuments = data?.map((doc: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/site-documents.ts",
      "line": 153,
      "column": 46,
      "context": "const blueprintDoc = documents.find((doc: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/actions/site-documents.ts",
      "line": 158,
      "column": 40,
      "context": "const ptwDoc = documents.find((doc: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/actions/search.ts",
      "line": 241,
      "column": 41,
      "context": "function formatValue(field: string, value: any): string {",
      "type": "explicit"
    },
    {
      "file": "app/actions/search.ts",
      "line": 254,
      "column": 45,
      "context": "function getDisplayValue(field: string, value: any): string {",
      "type": "explicit"
    },
    {
      "file": "app/actions/salary.ts",
      "line": 81,
      "column": 21,
      "context": "const calculation: any = {",
      "type": "explicit"
    },
    {
      "file": "app/actions/salary.ts",
      "line": 157,
      "column": 43,
      "context": "const totalAmount = details.reduce((sum: any, d: any) => sum + d.net_salary, 0)",
      "type": "explicit"
    },
    {
      "file": "app/actions/salary.ts",
      "line": 157,
      "column": 51,
      "context": "const totalAmount = details.reduce((sum: any, d: any) => sum + d.net_salary, 0)",
      "type": "explicit"
    },
    {
      "file": "app/actions/salary.ts",
      "line": 160,
      "column": 18,
      "context": ".reduce((sum: any, d: any) => sum + d.net_salary, 0)",
      "type": "explicit"
    },
    {
      "file": "app/actions/salary.ts",
      "line": 160,
      "column": 26,
      "context": ".reduce((sum: any, d: any) => sum + d.net_salary, 0)",
      "type": "explicit"
    },
    {
      "file": "app/actions/salary.ts",
      "line": 163,
      "column": 18,
      "context": ".reduce((sum: any, d: any) => sum + d.net_salary, 0)",
      "type": "explicit"
    },
    {
      "file": "app/actions/salary.ts",
      "line": 163,
      "column": 26,
      "context": ".reduce((sum: any, d: any) => sum + d.net_salary, 0)",
      "type": "explicit"
    },
    {
      "file": "app/actions/npc1000.ts",
      "line": 77,
      "column": 59,
      "context": "const records: NPC1000DailyRecord[] = data?.map((report: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/npc1000.ts",
      "line": 98,
      "column": 38,
      "context": "const totals = records.reduce((acc: any, record: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/npc1000.ts",
      "line": 98,
      "column": 51,
      "context": "const totals = records.reduce((acc: any, record: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/npc1000.ts",
      "line": 146,
      "column": 43,
      "context": "totalIncoming: allData?.reduce((sum: any, r: any) => sum + (r.npc1000_incoming || 0), 0) || 0,",
      "type": "explicit"
    },
    {
      "file": "app/actions/npc1000.ts",
      "line": 146,
      "column": 51,
      "context": "totalIncoming: allData?.reduce((sum: any, r: any) => sum + (r.npc1000_incoming || 0), 0) || 0,",
      "type": "explicit"
    },
    {
      "file": "app/actions/npc1000.ts",
      "line": 147,
      "column": 39,
      "context": "totalUsed: allData?.reduce((sum: any, r: any) => sum + (r.npc1000_used || 0), 0) || 0,",
      "type": "explicit"
    },
    {
      "file": "app/actions/npc1000.ts",
      "line": 147,
      "column": 47,
      "context": "totalUsed: allData?.reduce((sum: any, r: any) => sum + (r.npc1000_used || 0), 0) || 0,",
      "type": "explicit"
    },
    {
      "file": "app/actions/npc-materials.ts",
      "line": 110,
      "column": 36,
      "context": "const sites = userSites?.map((us: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/notifications.ts",
      "line": 113,
      "column": 41,
      "context": "const by_type = typeData?.reduce((acc: any, item: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/notifications.ts",
      "line": 113,
      "column": 52,
      "context": "const by_type = typeData?.reduce((acc: any, item: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/notifications.ts",
      "line": 114,
      "column": 16,
      "context": "acc[(item as any).type] = (acc[(item as any).type] || 0) + 1",
      "type": "assertion"
    },
    {
      "file": "app/actions/notifications.ts",
      "line": 114,
      "column": 43,
      "context": "acc[(item as any).type] = (acc[(item as any).type] || 0) + 1",
      "type": "assertion"
    },
    {
      "file": "app/actions/notifications.ts",
      "line": 254,
      "column": 44,
      "context": "const { data, error } = await (supabase as any).rpc('create_notification', {",
      "type": "assertion"
    },
    {
      "file": "app/actions/notifications.ts",
      "line": 289,
      "column": 30,
      "context": ".eq('user_id', user.id) as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/notifications.ts",
      "line": 327,
      "column": 8,
      "context": "} as any, {",
      "type": "assertion"
    },
    {
      "file": "app/actions/notifications.ts",
      "line": 331,
      "column": 16,
      "context": ".single() as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 25,
      "column": 21,
      "context": ".order('name') as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 47,
      "column": 21,
      "context": ".order('name') as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 78,
      "column": 27,
      "context": ".insert(materialData as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 80,
      "column": 16,
      "context": ".single() as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 108,
      "column": 22,
      "context": ".update(updates as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 111,
      "column": 16,
      "context": ".single() as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 134,
      "column": 28,
      "context": ".order('material_id') as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 154,
      "column": 16,
      "context": ".single() as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 167,
      "column": 38,
      "context": ".eq('material_id', (npcMaterial as any).id)) as any",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 167,
      "column": 51,
      "context": ".eq('material_id', (npcMaterial as any).id)) as any",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 202,
      "column": 16,
      "context": ".single() as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 204,
      "column": 43,
      "context": "const currentStock = (currentInventory as any)?.current_stock || 0",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 218,
      "column": 8,
      "context": "} as any) as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 218,
      "column": 16,
      "context": "} as any) as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 263,
      "column": 8,
      "context": "} as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 265,
      "column": 16,
      "context": ".single() as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 297,
      "column": 10,
      "context": "`)) as any",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 360,
      "column": 8,
      "context": "} as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 362,
      "column": 16,
      "context": ".single() as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 370,
      "column": 35,
      "context": "requestData.items.map((item: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 371,
      "column": 31,
      "context": "request_id: (request as any).id,",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 375,
      "column": 12,
      "context": "})) as any",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 376,
      "column": 8,
      "context": ") as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 408,
      "column": 10,
      "context": "`)) as any",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 447,
      "column": 17,
      "context": "const updates: any = {",
      "type": "explicit"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 461,
      "column": 22,
      "context": ".update(updates as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/materials.ts",
      "line": 464,
      "column": 16,
      "context": ".single() as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/force-site-refresh.ts",
      "line": 68,
      "column": 52,
      "context": "const activeAssignment = allAssignments?.find((a: any) => a.is_active) || null",
      "type": "explicit"
    },
    {
      "file": "app/actions/export.ts",
      "line": 35,
      "column": 17,
      "context": "const filters: any = {}",
      "type": "explicit"
    },
    {
      "file": "app/actions/export.ts",
      "line": 137,
      "column": 8,
      "context": "} as any) as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/export.ts",
      "line": 137,
      "column": 16,
      "context": "} as any) as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/export.ts",
      "line": 168,
      "column": 52,
      "context": "if (['admin', 'system_admin'].includes((profile as any).role)) {",
      "type": "assertion"
    },
    {
      "file": "app/actions/export.ts",
      "line": 173,
      "column": 17,
      "context": "if ((profile as any).role === 'site_manager') {",
      "type": "assertion"
    },
    {
      "file": "app/actions/export.ts",
      "line": 174,
      "column": 35,
      "context": "const userSiteIds = (profile as any).site_ids || []",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 29,
      "column": 30,
      "context": ".eq('is_active', true)) as any",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 63,
      "column": 21,
      "context": ".order('name') as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 96,
      "column": 16,
      "context": ".single() as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 103,
      "column": 36,
      "context": "const equipmentData = equipment as any",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 114,
      "column": 8,
      "context": "} as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 116,
      "column": 16,
      "context": ".single() as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 149,
      "column": 8,
      "context": "} as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 150,
      "column": 28,
      "context": ".eq('id', checkoutId) as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 182,
      "column": 10,
      "context": "`)) as any",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 229,
      "column": 30,
      "context": ".insert(maintenanceData as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 231,
      "column": 16,
      "context": ".single() as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 258,
      "column": 22,
      "context": ".update(updates as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 261,
      "column": 16,
      "context": ".single() as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 288,
      "column": 10,
      "context": "`)) as any",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 321,
      "column": 28,
      "context": ".from('worker_skills' as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 344,
      "column": 10,
      "context": "`)) as any",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 376,
      "column": 29,
      "context": ".upsert(assignmentData as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 378,
      "column": 16,
      "context": ".single() as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 411,
      "column": 22,
      "context": "let calculatedData: any = {",
      "type": "explicit"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 429,
      "column": 29,
      "context": ".insert(calculatedData as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 431,
      "column": 16,
      "context": ".single() as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 461,
      "column": 10,
      "context": "`)) as any",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 491,
      "column": 46,
      "context": "const workerAllocations = data.filter((a: any) => a.allocation_type === 'worker')",
      "type": "explicit"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 492,
      "column": 49,
      "context": "const equipmentAllocations = data.filter((a: any) => a.allocation_type === 'equipment')",
      "type": "explicit"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 496,
      "column": 69,
      "context": "const workerIds = Array.from(new Set(workerAllocations.map((a: any) => a.resource_id)))",
      "type": "explicit"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 498,
      "column": 27,
      "context": ".from('profiles' as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 502,
      "column": 50,
      "context": "const workersMap = new Map(workers?.map((w: any) => [w.id, w]))",
      "type": "explicit"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 503,
      "column": 36,
      "context": "workerAllocations.forEach((a: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 510,
      "column": 75,
      "context": "const equipmentIds = Array.from(new Set(equipmentAllocations.map((a: any) => a.resource_id)))",
      "type": "explicit"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 512,
      "column": 28,
      "context": ".from('equipment' as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 517,
      "column": 39,
      "context": "equipmentAllocations.forEach((a: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 534,
      "column": 85,
      "context": "let baseQuery = (supabase.from('equipment').select('status', { count: 'exact' }) as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 555,
      "column": 34,
      "context": ".from('equipment_checkouts' as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 568,
      "column": 34,
      "context": ".from('equipment_checkouts' as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/equipment.ts",
      "line": 583,
      "column": 36,
      "context": ".from('equipment_maintenance' as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/documents.ts",
      "line": 271,
      "column": 52,
      "context": "const transformedDocuments = documents?.map((doc: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/documents.ts",
      "line": 517,
      "column": 51,
      "context": "const permissionsToInsert = userIds.map((userId: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/documents.ts",
      "line": 647,
      "column": 34,
      "context": "...(sharedWithMe?.map((share: any) => share.document).filter(Boolean) || [])",
      "type": "explicit"
    },
    {
      "file": "app/actions/documents.ts",
      "line": 651,
      "column": 64,
      "context": "const uniqueDocs = Array.from(new Map(allSharedDocs.map((doc: any) => [doc.id, doc])).values())",
      "type": "explicit"
    },
    {
      "file": "app/actions/documents.ts",
      "line": 654,
      "column": 52,
      "context": "const transformedDocuments = uniqueDocs.map((doc: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/daily-reports.ts",
      "line": 32,
      "column": 10,
      "context": "supabase: any,",
      "type": "explicit"
    },
    {
      "file": "app/actions/daily-reports.ts",
      "line": 123,
      "column": 27,
      "context": ".filter((worker: any) => worker.worker_name && worker.labor_hours > 0)",
      "type": "explicit"
    },
    {
      "file": "app/actions/daily-reports.ts",
      "line": 124,
      "column": 24,
      "context": ".map((worker: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/daily-reports.ts",
      "line": 168,
      "column": 23,
      "context": ".filter((worker: any) => worker.worker_name && worker.labor_hours > 0)",
      "type": "explicit"
    },
    {
      "file": "app/actions/daily-reports.ts",
      "line": 169,
      "column": 20,
      "context": ".map((worker: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/daily-reports.ts",
      "line": 447,
      "column": 47,
      "context": "const beforePhotos = documents?.filter((doc: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/actions/daily-reports.ts",
      "line": 451,
      "column": 46,
      "context": "const afterPhotos = documents?.filter((doc: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/actions/daily-reports.ts",
      "line": 455,
      "column": 43,
      "context": "const receipts = documents?.filter((doc: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/actions/daily-reports.ts",
      "line": 940,
      "column": 26,
      "context": "photos?.forEach((photo: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 37,
      "column": 49,
      "context": ".order('created_at', { ascending: false }) as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 59,
      "column": 21,
      "context": ".insert(config as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 61,
      "column": 16,
      "context": ".single() as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 71,
      "column": 25,
      "context": "config_id: (data as any)?.id,",
      "type": "assertion"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 98,
      "column": 22,
      "context": ".update(updates as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 101,
      "column": 16,
      "context": ".single() as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 125,
      "column": 27,
      "context": ".eq('config_id', id) as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 130,
      "column": 49,
      "context": "await scheduler.removeSchedule((schedule as any).id)",
      "type": "assertion"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 138,
      "column": 20,
      "context": ".eq('id', id) as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 183,
      "column": 27,
      "context": ".from('backup_jobs') as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 227,
      "column": 16,
      "context": ".single() as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 269,
      "column": 61,
      "context": ".select('status, file_size, completed_at, started_at') as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 275,
      "column": 41,
      "context": "successful_backups: jobs?.filter((j: any) => j.status === 'completed').length || 0,",
      "type": "explicit"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 276,
      "column": 37,
      "context": "failed_backups: jobs?.filter((j: any) => j.status === 'failed').length || 0,",
      "type": "explicit"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 277,
      "column": 46,
      "context": "total_size: jobs?.reduce((sum: number, j: any) => sum + (j.file_size || 0), 0) || 0,",
      "type": "explicit"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 278,
      "column": 51,
      "context": "compressed_size: jobs?.reduce((sum: number, j: any) => sum + (j.file_size || 0), 0) || 0, // Simplified",
      "type": "explicit"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 283,
      "column": 41,
      "context": "const completedJobs = jobs?.filter((j: any) => j.status === 'completed' && j.started_at && j.completed_at) || []",
      "type": "explicit"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 285,
      "column": 64,
      "context": "const totalDuration = completedJobs.reduce((sum: number, j: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 296,
      "column": 18,
      "context": ".filter((j: any) => j.status === 'completed')",
      "type": "explicit"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 297,
      "column": 16,
      "context": ".sort((a: any, b: any) => new Date(b.completed_at).getTime() - new Date(a.completed_at).getTime())",
      "type": "explicit"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 297,
      "column": 24,
      "context": ".sort((a: any, b: any) => new Date(b.completed_at).getTime() - new Date(a.completed_at).getTime())",
      "type": "explicit"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 329,
      "column": 49,
      "context": ".order('created_at', { ascending: false }) as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 359,
      "column": 27,
      "context": ".eq('id', result.id) as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 438,
      "column": 8,
      "context": "} as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 440,
      "column": 16,
      "context": ".single() as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 453,
      "column": 8,
      "context": "} as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 454,
      "column": 22,
      "context": ".eq('id', (data as any)?.id) as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 454,
      "column": 35,
      "context": ".eq('id', (data as any)?.id) as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/backup.ts",
      "line": 458,
      "column": 41,
      "context": "return { success: true, jobId: (data as any)?.id }",
      "type": "assertion"
    },
    {
      "file": "app/actions/attendance.ts",
      "line": 98,
      "column": 45,
      "context": "const transformedData = data?.map((record: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/attendance.ts",
      "line": 152,
      "column": 49,
      "context": "const totalWorkers = Math.max(...dates.map((d: any) => d.totalWorkers))",
      "type": "explicit"
    },
    {
      "file": "app/actions/attendance.ts",
      "line": 153,
      "column": 40,
      "context": "const totalHours = dates.reduce((sum: any, d: any) => sum + d.totalHours, 0)",
      "type": "explicit"
    },
    {
      "file": "app/actions/attendance.ts",
      "line": 153,
      "column": 48,
      "context": "const totalHours = dates.reduce((sum: any, d: any) => sum + d.totalHours, 0)",
      "type": "explicit"
    },
    {
      "file": "app/actions/attendance.ts",
      "line": 459,
      "column": 36,
      "context": "total_hours: data?.reduce((sum: any, record: any) => sum + (record.work_hours || 0), 0) || 0,",
      "type": "explicit"
    },
    {
      "file": "app/actions/attendance.ts",
      "line": 459,
      "column": 49,
      "context": "total_hours: data?.reduce((sum: any, record: any) => sum + (record.work_hours || 0), 0) || 0,",
      "type": "explicit"
    },
    {
      "file": "app/actions/attendance.ts",
      "line": 460,
      "column": 39,
      "context": "total_overtime: data?.reduce((sum: any, record: any) => sum + (record.overtime_hours || 0), 0) || 0,",
      "type": "explicit"
    },
    {
      "file": "app/actions/attendance.ts",
      "line": 460,
      "column": 52,
      "context": "total_overtime: data?.reduce((sum: any, record: any) => sum + (record.overtime_hours || 0), 0) || 0,",
      "type": "explicit"
    },
    {
      "file": "app/actions/attendance.ts",
      "line": 461,
      "column": 35,
      "context": "days_present: data?.filter((r: any) => r.status === 'present').length || 0,",
      "type": "explicit"
    },
    {
      "file": "app/actions/attendance.ts",
      "line": 462,
      "column": 34,
      "context": "days_absent: data?.filter((r: any) => r.status === 'absent').length || 0,",
      "type": "explicit"
    },
    {
      "file": "app/actions/attendance.ts",
      "line": 463,
      "column": 35,
      "context": "days_holiday: data?.filter((r: any) => r.status === 'holiday').length || 0",
      "type": "explicit"
    },
    {
      "file": "app/actions/attendance.ts",
      "line": 528,
      "column": 43,
      "context": "const workRecords = workers.map((worker: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/attendance.ts",
      "line": 599,
      "column": 45,
      "context": "const transformedData = data?.map((record: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/attendance.ts",
      "line": 653,
      "column": 43,
      "context": "const workerSummary = data?.reduce((acc: any, record: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/attendance.ts",
      "line": 653,
      "column": 56,
      "context": "const workerSummary = data?.reduce((acc: any, record: any) => {",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/mocks/supabase.mock.ts",
      "line": 131,
      "column": 23,
      "context": ";(queryBuilder as any)[key].mockReturnValue(queryBuilder)",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/mocks/supabase.mock.ts",
      "line": 138,
      "column": 21,
      "context": ";(queryBuilder as any).__promise = Promise.resolve({ data: [], error: null })",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/mocks/supabase.mock.ts",
      "line": 145,
      "column": 21,
      "context": ";(queryBuilder as any)[method].mockImplementation(() => {",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/mocks/supabase.mock.ts",
      "line": 146,
      "column": 23,
      "context": ";(queryBuilder as any).__promise = Promise.resolve({ data: null, error: null })",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/mocks/supabase.mock.ts",
      "line": 152,
      "column": 54,
      "context": ";(queryBuilder as any).then = function(onFulfilled: any, onRejected: any) {",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/mocks/supabase.mock.ts",
      "line": 152,
      "column": 71,
      "context": ";(queryBuilder as any).then = function(onFulfilled: any, onRejected: any) {",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/mocks/supabase.mock.ts",
      "line": 152,
      "column": 19,
      "context": ";(queryBuilder as any).then = function(onFulfilled: any, onRejected: any) {",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/mocks/supabase.mock.ts",
      "line": 153,
      "column": 28,
      "context": "return ((queryBuilder as any).__promise || Promise.resolve({ data: null, error: null })).then(onFulfilled, onRejected)",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/mocks/supabase.mock.ts",
      "line": 155,
      "column": 54,
      "context": ";(queryBuilder as any).catch = function(onRejected: any) {",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/mocks/supabase.mock.ts",
      "line": 155,
      "column": 19,
      "context": ";(queryBuilder as any).catch = function(onRejected: any) {",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/mocks/supabase.mock.ts",
      "line": 156,
      "column": 28,
      "context": "return ((queryBuilder as any).__promise || Promise.resolve({ data: null, error: null })).catch(onRejected)",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/mocks/supabase.mock.ts",
      "line": 245,
      "column": 58,
      "context": "const onAuthStateChange = client.auth.onAuthStateChange as any",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/mocks/supabase.mock.ts",
      "line": 247,
      "column": 46,
      "context": "onAuthStateChange.mock.calls.forEach((call: any) => {",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/mocks/pwa.mock.ts",
      "line": 206,
      "column": 4,
      "context": "} as any",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/mocks/pwa.mock.ts",
      "line": 269,
      "column": 10,
      "context": ";(event as any).simulateUserAccept = () => {",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/mocks/pwa.mock.ts",
      "line": 274,
      "column": 10,
      "context": ";(event as any).simulateUserDismiss = () => {",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/mocks/auth.mock.ts",
      "line": 52,
      "column": 48,
      "context": "cookies: Map<string, { value: string; options?: any }>",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/mocks/auth.mock.ts",
      "line": 147,
      "column": 59,
      "context": "const cookies = new Map<string, { value: string; options?: any }>()",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/mocks/auth.mock.ts",
      "line": 162,
      "column": 76,
      "context": "set: jest.fn().mockImplementation((name: string, value: string, options?: any) => {",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/examples/pwa-testing.example.tsx",
      "line": 258,
      "column": 34,
      "context": "const submitForm = async (data: any) => {",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/examples/pwa-testing.example.tsx",
      "line": 449,
      "column": 35,
      "context": "async function saveToIndexedDB(data: any) {",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/examples/labor-hours-example.test.ts",
      "line": 111,
      "column": 20,
      "context": "(queryBuilder as any).__promise = Promise.resolve({",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/examples/helper-utilities.example.tsx",
      "line": 278,
      "column": 43,
      "context": "const [data, setData] = React.useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/examples/auth-example.test.ts",
      "line": 45,
      "column": 20,
      "context": "(queryBuilder as any).__promise = Promise.resolve({",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/examples/analytics-testing.example.tsx",
      "line": 27,
      "column": 41,
      "context": "const [events, setEvents] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/examples/analytics-testing.example.tsx",
      "line": 29,
      "column": 54,
      "context": "const trackEvent = (eventName: string, properties?: any) => {",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/examples/analytics-testing.example.tsx",
      "line": 63,
      "column": 47,
      "context": "const [pageViews, setPageViews] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/examples/analytics-testing.example.tsx",
      "line": 175,
      "column": 38,
      "context": "{data.topPages.map((page: any, idx: number) => (",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/examples/analytics-testing.example.tsx",
      "line": 353,
      "column": 47,
      "context": "const [chartData, setChartData] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/examples/analytics-testing.example.tsx",
      "line": 404,
      "column": 26,
      "context": "setPageMetrics((prev: any) => ({",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/helpers/async-helpers.ts",
      "line": 103,
      "column": 20,
      "context": "return null as any // Type assertion for consistent return type",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/helpers/async-helpers.ts",
      "line": 373,
      "column": 11,
      "context": "): Promise<any[]> {",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/helpers/async-helpers.ts",
      "line": 397,
      "column": 34,
      "context": "): Promise<{ index: number; result: any }> {",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/factories/documents.factory.ts",
      "line": 260,
      "column": 14,
      "context": "let document: any",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/factories/documents.factory.ts",
      "line": 416,
      "column": 33,
      "context": "export function isDailyReport(doc: any): doc is DailyReport {",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/factories/documents.factory.ts",
      "line": 420,
      "column": 38,
      "context": "export function isApprovalDocument(doc: any): doc is ApprovalDocument {",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/factories/documents.factory.ts",
      "line": 424,
      "column": 38,
      "context": "export function isMaterialDocument(doc: any): doc is MaterialManagementDocument {",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/factories/documents.factory.ts",
      "line": 428,
      "column": 36,
      "context": "export function isMarkupDocument(doc: any): doc is MarkupDocument {",
      "type": "explicit"
    },
    {
      "file": "lib/supabase/__tests__/server.test.ts",
      "line": 44,
      "column": 18,
      "context": "let capturedConfig: any = null",
      "type": "explicit"
    },
    {
      "file": "components/ui/design-system/typography.ts",
      "line": 116,
      "column": 33,
      "context": "return isLargeFont ? (fontSize as any).large[size] : fontSize[size]",
      "type": "assertion"
    },
    {
      "file": "components/ui/design-system/typography.ts",
      "line": 125,
      "column": 21,
      "context": "return (typography as any)[category][preset][isLargeFont ? 'large' : 'normal']",
      "type": "assertion"
    },
    {
      "file": "components/ui/design-system/spacing.ts",
      "line": 174,
      "column": 29,
      "context": "return (padding[component] as any)[sizeKey] || (padding[component] as any)['normal']",
      "type": "assertion"
    },
    {
      "file": "components/ui/design-system/spacing.ts",
      "line": 174,
      "column": 69,
      "context": "return (padding[component] as any)[sizeKey] || (padding[component] as any)['normal']",
      "type": "assertion"
    },
    {
      "file": "components/mobile/compact/CompactMaterialWidget.tsx",
      "line": 63,
      "column": 42,
      "context": "{materials.slice(0, 4).map((material: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000TransactionHistory.tsx",
      "line": 288,
      "column": 54,
      "context": "{filteredTransactions.map((transaction: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000RequestForm.tsx",
      "line": 24,
      "column": 13,
      "context": "currentUser: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000InventoryManagement.tsx",
      "line": 46,
      "column": 13,
      "context": "currentUser: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000InventoryManagement.tsx",
      "line": 211,
      "column": 37,
      "context": "filteredInventory.map((item: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000InventoryDashboard.tsx",
      "line": 31,
      "column": 13,
      "context": "currentUser: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000InventoryDashboard.tsx",
      "line": 40,
      "column": 45,
      "context": "const [inventory, setInventory] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000InventoryDashboard.tsx",
      "line": 41,
      "column": 63,
      "context": "const [recentTransactions, setRecentTransactions] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000InventoryDashboard.tsx",
      "line": 78,
      "column": 43,
      "context": "material_id: (inventoryResult.data as any)?.[0]?.material_id,",
      "type": "assertion"
    },
    {
      "file": "components/materials/npc1000/NPC1000InventoryDashboard.tsx",
      "line": 151,
      "column": 28,
      "context": "{sites.map((site: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000InventoryDashboard.tsx",
      "line": 349,
      "column": 38,
      "context": "{inventory.map((item: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000InventoryDashboard.tsx",
      "line": 418,
      "column": 48,
      "context": "{recentTransactions.map((transaction: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000Dashboard.tsx",
      "line": 33,
      "column": 13,
      "context": "currentUser: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000Dashboard.tsx",
      "line": 106,
      "column": 28,
      "context": "{sites.map((site: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000DailyDashboard.tsx",
      "line": 138,
      "column": 66,
      "context": "const totalInventory = inventory.reduce((sum: number, item: any) => sum + (item.current_stock || 0), 0)",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000DailyDashboard.tsx",
      "line": 141,
      "column": 56,
      "context": "const todayTransactions = transactions.filter((t: any) =>",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000DailyDashboard.tsx",
      "line": 146,
      "column": 20,
      "context": ".filter((t: any) => t.transaction_type === 'in')",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000DailyDashboard.tsx",
      "line": 147,
      "column": 33,
      "context": ".reduce((sum: number, t: any) => sum + (t.quantity || 0), 0)",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000DailyDashboard.tsx",
      "line": 150,
      "column": 20,
      "context": ".filter((t: any) => t.transaction_type === 'out')",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000DailyDashboard.tsx",
      "line": 151,
      "column": 33,
      "context": ".reduce((sum: number, t: any) => sum + (t.quantity || 0), 0)",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000DailyDashboard.tsx",
      "line": 160,
      "column": 50,
      "context": "const allIncoming = transactions.filter((t: any) => t.transaction_type === 'in')",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000DailyDashboard.tsx",
      "line": 161,
      "column": 33,
      "context": ".reduce((sum: number, t: any) => sum + (t.quantity || 0), 0)",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000DailyDashboard.tsx",
      "line": 163,
      "column": 46,
      "context": "const allUsed = transactions.filter((t: any) => t.transaction_type === 'out')",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000DailyDashboard.tsx",
      "line": 164,
      "column": 33,
      "context": ".reduce((sum: number, t: any) => sum + (t.quantity || 0), 0)",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000DailyDashboard.tsx",
      "line": 175,
      "column": 31,
      "context": "transactions.forEach((t: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000DailyDashboard.tsx",
      "line": 247,
      "column": 14,
      "context": "let valueA: any, valueB: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000DailyDashboard.tsx",
      "line": 247,
      "column": 27,
      "context": "let valueA: any, valueB: any",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000Analytics.tsx",
      "line": 143,
      "column": 42,
      "context": "const totalUsage = usage.reduce((sum: any, day: any) => sum + day.usage, 0)",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000Analytics.tsx",
      "line": 143,
      "column": 52,
      "context": "const totalUsage = usage.reduce((sum: any, day: any) => sum + day.usage, 0)",
      "type": "explicit"
    },
    {
      "file": "components/materials/npc1000/NPC1000Analytics.tsx",
      "line": 298,
      "column": 36,
      "context": "{siteUsageData.map((site: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/partner/tabs/PartnerHomeTab.tsx",
      "line": 18,
      "column": 14,
      "context": "organization: any",
      "type": "explicit"
    },
    {
      "file": "components/partner/tabs/PartnerHomeTab.tsx",
      "line": 53,
      "column": 47,
      "context": "const [laborSites, setLaborSites] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/partner/tabs/PartnerHomeTab.tsx",
      "line": 479,
      "column": 30,
      "context": ".map((item: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/partner/tabs/PartnerDocumentsTab.tsx",
      "line": 56,
      "column": 45,
      "context": "const [userSites, setUserSites] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/partner/tabs/PartnerDocumentsTab.tsx",
      "line": 493,
      "column": 29,
      "context": "target: { files: files as any }",
      "type": "assertion"
    },
    {
      "file": "components/markup/dialogs/share-dialog.tsx",
      "line": 15,
      "column": 23,
      "context": "onShare: (permissions: any) => void",
      "type": "explicit"
    },
    {
      "file": "components/markup/dialogs/share-dialog.tsx",
      "line": 16,
      "column": 21,
      "context": "currentPermissions?: any",
      "type": "explicit"
    },
    {
      "file": "components/markup/dialogs/open-dialog.tsx",
      "line": 87,
      "column": 32,
      "context": "documents.map((doc: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/markup/canvas/markup-canvas.tsx",
      "line": 410,
      "column": 26,
      "context": "const stamp = obj as any // StampMarkup",
      "type": "assertion"
    },
    {
      "file": "components/markup/canvas/markup-canvas.tsx",
      "line": 628,
      "column": 92,
      "context": "if (activeTool === 'select' && editorState.selectedObjects.length > 0 && (editorState as any).dragStart) {",
      "type": "assertion"
    },
    {
      "file": "components/markup/canvas/markup-canvas.tsx",
      "line": 629,
      "column": 47,
      "context": "const deltaX = coords.x - (editorState as any).dragStart.x",
      "type": "assertion"
    },
    {
      "file": "components/markup/canvas/markup-canvas.tsx",
      "line": 630,
      "column": 47,
      "context": "const deltaY = coords.y - (editorState as any).dragStart.y",
      "type": "assertion"
    },
    {
      "file": "components/markup/canvas/markup-canvas.tsx",
      "line": 811,
      "column": 28,
      "context": "const stamp = obj as any",
      "type": "assertion"
    },
    {
      "file": "components/markup/canvas/markup-canvas.tsx",
      "line": 936,
      "column": 12,
      "context": "} as any",
      "type": "assertion"
    },
    {
      "file": "components/markup/canvas/markup-canvas.tsx",
      "line": 1016,
      "column": 12,
      "context": "} as any",
      "type": "assertion"
    },
    {
      "file": "components/markup/list/markup-document-list.tsx",
      "line": 88,
      "column": 34,
      "context": "...result.data.map((site: any) => ({",
      "type": "explicit"
    },
    {
      "file": "components/markup/list/markup-document-list.tsx",
      "line": 508,
      "column": 33,
      "context": "{documents.map((doc: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/markup/list/markup-document-list.tsx",
      "line": 603,
      "column": 35,
      "context": "{documents.map((doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/documents/common/FileUploadComponent.tsx",
      "line": 36,
      "column": 7,
      "context": "data?: any",
      "type": "explicit"
    },
    {
      "file": "components/documents/common/FileUploadComponent.tsx",
      "line": 45,
      "column": 15,
      "context": "uploadedData?: any",
      "type": "explicit"
    },
    {
      "file": "components/documents/common/DocumentFilters.tsx",
      "line": 22,
      "column": 54,
      "context": "categories: Array<{ id: string; label: string; icon?: any }>",
      "type": "explicit"
    },
    {
      "file": "components/documents/UnifiedDocumentViewer/index.tsx",
      "line": 184,
      "column": 39,
      "context": "formData.append(key, (metadata as any)[key])",
      "type": "assertion"
    },
    {
      "file": "components/documents/UnifiedDocumentViewer/DocumentUploadModal.tsx",
      "line": 59,
      "column": 37,
      "context": "const [sites, setSites] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/documents/UnifiedDocumentViewer/DocumentFilters.tsx",
      "line": 6,
      "column": 9,
      "context": "filters: any",
      "type": "explicit"
    },
    {
      "file": "components/documents/UnifiedDocumentViewer/DocumentFilters.tsx",
      "line": 7,
      "column": 27,
      "context": "onFiltersChange: (filters: any) => void",
      "type": "explicit"
    },
    {
      "file": "components/documents/UnifiedDocumentViewer/AdminView.tsx",
      "line": 41,
      "column": 65,
      "context": "onDocumentAction: (action: string, documentIds: string[], data?: any) => void",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/work-logs-tab.tsx",
      "line": 489,
      "column": 38,
      "context": "...sites.map((site: any) => ({",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/work-logs-tab.tsx",
      "line": 571,
      "column": 33,
      "context": "{paginatedLogs.map((log: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/work-logs-tab.tsx",
      "line": 719,
      "column": 37,
      "context": "{paginatedLogs.map((log: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/shared-documents-tab-updated.tsx",
      "line": 434,
      "column": 55,
      "context": "{filteredAndSortedDocuments.map((document: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/shared-documents-tab-updated.tsx",
      "line": 453,
      "column": 55,
      "context": "{filteredAndSortedDocuments.map((document: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/photo-grid-documents-tab.tsx",
      "line": 31,
      "column": 45,
      "context": "const [documents, setDocuments] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/photo-grid-documents-tab.tsx",
      "line": 32,
      "column": 61,
      "context": "const [filteredDocuments, setFilteredDocuments] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/photo-grid-documents-tab.tsx",
      "line": 35,
      "column": 37,
      "context": "const [sites, setSites] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/photo-grid-documents-tab.tsx",
      "line": 106,
      "column": 35,
      "context": "const handleDownload = async (doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/photo-grid-documents-tab.tsx",
      "line": 130,
      "column": 28,
      "context": "const handlePreview = (doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/home-tab.tsx",
      "line": 27,
      "column": 21,
      "context": "initialCurrentSite?: any",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/home-tab.tsx",
      "line": 154,
      "column": 53,
      "context": "const handleAnnouncementClick = async (notification: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/home-tab-simple.tsx",
      "line": 24,
      "column": 21,
      "context": "initialCurrentSite?: any",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/documents-tab.tsx",
      "line": 117,
      "column": 59,
      "context": "const [submissionStatus, setSubmissionStatus] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/documents-tab.tsx",
      "line": 209,
      "column": 66,
      "context": "const transformedDocs = result.required_documents.map((req: any) => ({",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/documents-tab.tsx",
      "line": 239,
      "column": 50,
      "context": "const submission = result.data.find((s: any) => s.requirement_id === doc.id)",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/documents-tab.tsx",
      "line": 270,
      "column": 38,
      "context": "markupResult.data.forEach((doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/documents-tab.tsx",
      "line": 292,
      "column": 43,
      "context": "apiDocuments = result.data.map((doc: any) => ({",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/documents-tab.tsx",
      "line": 1280,
      "column": 102,
      "context": "{Array.isArray(filteredAndSortedDocuments) && filteredAndSortedDocuments.map((document: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/documents-tab.tsx",
      "line": 1300,
      "column": 102,
      "context": "{Array.isArray(filteredAndSortedDocuments) && filteredAndSortedDocuments.map((document: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/attendance-tab.tsx",
      "line": 542,
      "column": 16,
      "context": "let aValue: any, bValue: any",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/attendance-tab.tsx",
      "line": 542,
      "column": 29,
      "context": "let aValue: any, bValue: any",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/attendance-tab.tsx",
      "line": 733,
      "column": 34,
      "context": "{sites.map((site: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/attendance-tab.tsx",
      "line": 831,
      "column": 63,
      "context": "{['일', '월', '화', '수', '목', '금', '토'].map((day: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/dashboard/tabs/attendance-tab.tsx",
      "line": 1043,
      "column": 55,
      "context": "{filteredSalaryInfo.map((salary: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/admin/sites/SiteDocumentsTab.tsx",
      "line": 331,
      "column": 56,
      "context": "onChange={(e) => setFilter(e.target.value as any)}",
      "type": "assertion"
    },
    {
      "file": "components/admin/sites/SiteDetail.tsx",
      "line": 357,
      "column": 52,
      "context": "onClick={() => setActiveTab(tab.key as any)}",
      "type": "assertion"
    },
    {
      "file": "components/admin/sites/SiteDailyReportsTab.tsx",
      "line": 255,
      "column": 56,
      "context": "onChange={(e) => setFilter(e.target.value as any)}",
      "type": "assertion"
    },
    {
      "file": "components/admin/sites/CreateSiteModal.tsx",
      "line": 111,
      "column": 87,
      "context": "onChange={(e) => setFormData({ ...formData, status: e.target.value as any })}",
      "type": "assertion"
    },
    {
      "file": "components/admin/salary/SalaryStatsDashboard.tsx",
      "line": 29,
      "column": 6,
      "context": "icon: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/salary/SalaryChart.tsx",
      "line": 67,
      "column": 30,
      "context": "const formatTooltip = (value: any, name: string, props: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/admin/salary/SalaryChart.tsx",
      "line": 67,
      "column": 56,
      "context": "const formatTooltip = (value: any, name: string, props: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/admin/partners/PartnerForm.tsx",
      "line": 116,
      "column": 49,
      "context": "const handleInputChange = (field: string, value: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/admin/partners/PartnerDetail.tsx",
      "line": 239,
      "column": 53,
      "context": "onClick={() => setActiveTab(tab.id as any)}",
      "type": "assertion"
    },
    {
      "file": "components/admin/organizations/OrganizationList.tsx",
      "line": 158,
      "column": 14,
      "context": "let aValue: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/organizations/OrganizationList.tsx",
      "line": 159,
      "column": 14,
      "context": "let bValue: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/notifications/NotificationCreateModal.tsx",
      "line": 55,
      "column": 19,
      "context": "const payload: any = {",
      "type": "explicit"
    },
    {
      "file": "components/admin/notifications/NotificationCenter.tsx",
      "line": 33,
      "column": 11,
      "context": "metadata?: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/notifications/NotificationCenter.tsx",
      "line": 141,
      "column": 90,
      "context": "const transformedNotifications: SystemNotification[] = result.data.map((notification: any) => ({",
      "type": "explicit"
    },
    {
      "file": "components/admin/materials/NPCMaterialManagement.tsx",
      "line": 105,
      "column": 54,
      "context": "onClick={() => setActiveTab(tab.key as any)}",
      "type": "assertion"
    },
    {
      "file": "components/admin/materials/IntegratedInventoryStatus.tsx",
      "line": 105,
      "column": 28,
      "context": "location: (item as any).sites?.name || 'Unknown',",
      "type": "assertion"
    },
    {
      "file": "components/admin/materials/IntegratedInventoryStatus.tsx",
      "line": 114,
      "column": 29,
      "context": "site_name: (item as any).sites?.name || 'Unknown',",
      "type": "assertion"
    },
    {
      "file": "components/admin/materials/IntegratedInventoryStatus.tsx",
      "line": 115,
      "column": 33,
      "context": "material_name: (item as any).materials?.name || 'NPC-1000'",
      "type": "assertion"
    },
    {
      "file": "components/admin/integrated/UnifiedUserView.tsx",
      "line": 53,
      "column": 28,
      "context": "documents: Record<string, any[]>",
      "type": "explicit"
    },
    {
      "file": "components/admin/integrated/UnifiedSiteView.tsx",
      "line": 32,
      "column": 6,
      "context": "site: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/integrated/UnifiedSiteView.tsx",
      "line": 34,
      "column": 18,
      "context": "primary_customer: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/integrated/UnifiedSiteView.tsx",
      "line": 36,
      "column": 28,
      "context": "documents: Record<string, any[]>",
      "type": "explicit"
    },
    {
      "file": "components/admin/integrated/UnifiedSiteView.tsx",
      "line": 37,
      "column": 40,
      "context": "documents_by_category: Record<string, any[]>",
      "type": "explicit"
    },
    {
      "file": "components/admin/integrated/UnifiedSiteView.tsx",
      "line": 38,
      "column": 12,
      "context": "statistics: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/integrated/UnifiedSiteView.tsx",
      "line": 95,
      "column": 64,
      "context": "const StatCard = ({ title, value, icon: Icon, color = 'blue' }: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/admin/integrated/UnifiedDailyReportView.tsx",
      "line": 36,
      "column": 14,
      "context": "daily_report: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/integrated/UnifiedDailyReportView.tsx",
      "line": 37,
      "column": 6,
      "context": "site: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/integrated/UnifiedDailyReportView.tsx",
      "line": 38,
      "column": 18,
      "context": "primary_customer: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/integrated/UnifiedDailyReportView.tsx",
      "line": 41,
      "column": 19,
      "context": "worker_statistics: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/integrated/UnifiedDailyReportView.tsx",
      "line": 42,
      "column": 28,
      "context": "documents: Record<string, any[]>",
      "type": "explicit"
    },
    {
      "file": "components/admin/integrated/UnifiedDailyReportView.tsx",
      "line": 44,
      "column": 16,
      "context": "material_usage: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/integrated/UnifiedDailyReportView.tsx",
      "line": 46,
      "column": 15,
      "context": "report_author: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/integrated/IntegratedDashboard.tsx",
      "line": 29,
      "column": 37,
      "context": "const [sites, setSites] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/admin/integrated/IntegratedDashboard.tsx",
      "line": 99,
      "column": 64,
      "context": "const StatCard = ({ title, value, icon: Icon, color, onClick }: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/admin/integrated/IntegratedDashboard.tsx",
      "line": 141,
      "column": 39,
      "context": "setActiveView(tab.id as any)",
      "type": "assertion"
    },
    {
      "file": "components/admin/integrated/EnhancedSiteView.tsx",
      "line": 73,
      "column": 47,
      "context": "const siteReports = reports.filter((r: any) => r.site_id === site.id)",
      "type": "explicit"
    },
    {
      "file": "components/admin/integrated/EnhancedSiteView.tsx",
      "line": 74,
      "column": 51,
      "context": "const siteDocs = docsData.data?.filter((d: any) => d.site_id === site.id) || []",
      "type": "explicit"
    },
    {
      "file": "components/admin/documents/RequiredDocumentsManagement.tsx",
      "line": 19,
      "column": 11,
      "context": "metadata?: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/documents/RequiredDocumentsManagement.tsx",
      "line": 128,
      "column": 46,
      "context": "const mappedData = (data || []).map((doc: any) => ({",
      "type": "explicit"
    },
    {
      "file": "components/admin/documents/RequiredDocumentDetailModal.tsx",
      "line": 154,
      "column": 22,
      "context": "const updateData: any = {",
      "type": "explicit"
    },
    {
      "file": "components/admin/documents/PhotoGridDocumentsManagement.tsx",
      "line": 70,
      "column": 43,
      "context": "const formattedDocs = data.map((doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/admin/documents/PhotoGridDocumentsManagement.tsx",
      "line": 103,
      "column": 26,
      "context": "const metadata = (doc as any).metadata || {}",
      "type": "assertion"
    },
    {
      "file": "components/admin/documents/PhotoGridDocumentsManagement.tsx",
      "line": 113,
      "column": 28,
      "context": "const metadata = (doc as any).metadata || {}",
      "type": "assertion"
    },
    {
      "file": "components/admin/documents/EnhancedDocumentManagement.tsx",
      "line": 137,
      "column": 37,
      "context": "const [sites, setSites] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/admin/documents/EnhancedDocumentManagement.tsx",
      "line": 138,
      "column": 37,
      "context": "const [users, setUsers] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/admin/documents/EnhancedDocumentManagement.tsx",
      "line": 139,
      "column": 43,
      "context": "const [partners, setPartners] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/admin/documents/DocumentPermissionManager.tsx",
      "line": 60,
      "column": 41,
      "context": "if (document.owner_id && (document as any).profiles) {",
      "type": "assertion"
    },
    {
      "file": "components/admin/documents/DocumentPermissionManager.tsx",
      "line": 65,
      "column": 31,
      "context": "user_name: (document as any).profiles?.name || '문서 소유자'",
      "type": "assertion"
    },
    {
      "file": "components/admin/documents/DocumentPermissionManager.tsx",
      "line": 70,
      "column": 20,
      "context": "if ((document as any).is_public && document.site_id && (document as any).sites) {",
      "type": "assertion"
    },
    {
      "file": "components/admin/documents/DocumentPermissionManager.tsx",
      "line": 70,
      "column": 71,
      "context": "if ((document as any).is_public && document.site_id && (document as any).sites) {",
      "type": "assertion"
    },
    {
      "file": "components/admin/documents/DocumentPermissionManager.tsx",
      "line": 75,
      "column": 31,
      "context": "site_name: (document as any).sites?.name || '현장 전체'",
      "type": "assertion"
    },
    {
      "file": "components/admin/documents/DocumentPermissionManager.tsx",
      "line": 310,
      "column": 55,
      "context": "onClick={() => setPermissionType(key as any)}",
      "type": "assertion"
    },
    {
      "file": "components/admin/documents/DocumentPermissionManager.tsx",
      "line": 392,
      "column": 103,
      "context": "onChange={(e) => setNewPermission({ ...newPermission, permission_level: e.target.value as any })}",
      "type": "assertion"
    },
    {
      "file": "components/admin/documents/DocumentOverviewManagement.tsx",
      "line": 89,
      "column": 73,
      "context": "Object.values(data.documents_by_category).forEach((categoryDocs: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/admin/documents/DocumentNavigation.tsx",
      "line": 41,
      "column": 76,
      "context": "const accessibleCategories = getAccessibleDocumentCategories(profile.role as any)",
      "type": "assertion"
    },
    {
      "file": "components/admin/documents/DocumentList.tsx",
      "line": 167,
      "column": 31,
      "context": "{(document as any).profiles?.name || '알 수 없음'}",
      "type": "assertion"
    },
    {
      "file": "components/admin/documents/DocumentList.tsx",
      "line": 170,
      "column": 29,
      "context": "{(document as any).sites?.name && (",
      "type": "assertion"
    },
    {
      "file": "components/admin/documents/DocumentList.tsx",
      "line": 173,
      "column": 33,
      "context": "{(document as any).sites.name}",
      "type": "assertion"
    },
    {
      "file": "components/admin/documents/DocumentList.tsx",
      "line": 177,
      "column": 29,
      "context": "{(document as any).document_folders?.name && (",
      "type": "assertion"
    },
    {
      "file": "components/admin/documents/DocumentList.tsx",
      "line": 180,
      "column": 33,
      "context": "{(document as any).document_folders.name}",
      "type": "assertion"
    },
    {
      "file": "components/admin/daily-reports/MarkupTab.tsx",
      "line": 31,
      "column": 11,
      "context": "metadata?: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/daily-reports/MarkupTab.tsx",
      "line": 38,
      "column": 13,
      "context": "reportData?: any // Daily report data for auto-population",
      "type": "explicit"
    },
    {
      "file": "components/admin/daily-reports/DailyReportsManagement.tsx",
      "line": 685,
      "column": 36,
      "context": "{reports.map((report: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/admin/daily-reports/DailyReportDetailModal.tsx",
      "line": 732,
      "column": 102,
      "context": "onChange={(e) => setEditData(prev => ({ ...prev, status: e.target.value as any }))}",
      "type": "assertion"
    },
    {
      "file": "components/admin/daily-reports/DailyReportCreateModal.tsx",
      "line": 115,
      "column": 59,
      "context": "const filteredWorkers = allWorkers.filter((worker: any) =>",
      "type": "explicit"
    },
    {
      "file": "components/admin/communication/CommunicationManagement.tsx",
      "line": 63,
      "column": 54,
      "context": "onClick={() => setActiveTab(tab.key as any)}",
      "type": "assertion"
    },
    {
      "file": "components/admin/audit/AuditLogSystem.tsx",
      "line": 31,
      "column": 10,
      "context": "details?: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/audit/AuditLogSystem.tsx",
      "line": 32,
      "column": 10,
      "context": "changes?: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/assignment/UserAssignmentMatrix.tsx",
      "line": 607,
      "column": 39,
      "context": "onValueChange={(value: any) => setAssignmentData(prev => ({ ...prev, assignment_type: value }))}",
      "type": "explicit"
    },
    {
      "file": "components/admin/assignment/UserAssignmentMatrix.tsx",
      "line": 624,
      "column": 39,
      "context": "onValueChange={(value: any) => setAssignmentData(prev => ({ ...prev, role: value }))}",
      "type": "explicit"
    },
    {
      "file": "components/admin/assignment/UserAssignmentMatrix.tsx",
      "line": 719,
      "column": 39,
      "context": "onValueChange={(value: any) => setBulkAssignmentData(prev => ({ ...prev, assignment_type: value }))}",
      "type": "explicit"
    },
    {
      "file": "components/admin/assignment/UserAssignmentMatrix.tsx",
      "line": 736,
      "column": 39,
      "context": "onValueChange={(value: any) => setBulkAssignmentData(prev => ({ ...prev, role: value }))}",
      "type": "explicit"
    },
    {
      "file": "components/admin/assignment/PartnerSiteMapping.tsx",
      "line": 73,
      "column": 54,
      "context": "const [partners, setPartners] = useState<PartnerCompany[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/admin/assignment/AssignmentHistory.tsx",
      "line": 358,
      "column": 33,
      "context": "sortBy: sortBy as any,",
      "type": "assertion"
    },
    {
      "file": "components/admin/analytics/AnalyticsDashboard.tsx",
      "line": 166,
      "column": 63,
      "context": "const StatCard = ({ title, value, change, icon: Icon, color }: any) => (",
      "type": "explicit"
    },
    {
      "file": "components/admin/tools/PhotoGridToolManagement.tsx",
      "line": 53,
      "column": 55,
      "context": "const [recentActivity, setRecentActivity] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/admin/tools/PhotoGridToolManagement.tsx",
      "line": 154,
      "column": 49,
      "context": "const handleSettingChange = (key: string, value: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/admin/tools/MarkupToolManagement.tsx",
      "line": 58,
      "column": 37,
      "context": "const [users, setUsers] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/admin/tools/MarkupToolManagement.tsx",
      "line": 59,
      "column": 37,
      "context": "const [sites, setSites] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/admin/tools/MarkupToolManagement.tsx",
      "line": 234,
      "column": 64,
      "context": "onChange={(e) => setFilterLocation(e.target.value as any)}",
      "type": "assertion"
    },
    {
      "file": "components/admin/tools/AdminMarkupEditor.tsx",
      "line": 21,
      "column": 37,
      "context": "const [users, setUsers] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/admin/users/UserWorkLogsTab.tsx",
      "line": 226,
      "column": 66,
      "context": "onChange={(e) => setStatusFilter(e.target.value as any)}",
      "type": "assertion"
    },
    {
      "file": "components/admin/users/UserDocumentsTab.tsx",
      "line": 302,
      "column": 62,
      "context": "onChange={(e) => setStatusFilter(e.target.value as any)}",
      "type": "assertion"
    },
    {
      "file": "components/admin/users/UserBasicInfoTab.tsx",
      "line": 8,
      "column": 6,
      "context": "user: any",
      "type": "explicit"
    },
    {
      "file": "components/admin/users/UserBasicInfoTab.tsx",
      "line": 274,
      "column": 54,
      "context": "{user.site_assignments.map((assignment: any, index: number) => (",
      "type": "explicit"
    },
    {
      "file": "app/test/mobile-integration/page.tsx",
      "line": 17,
      "column": 4,
      "context": "} as any",
      "type": "assertion"
    },
    {
      "file": "app/test/mobile-integration/page.tsx",
      "line": 45,
      "column": 57,
      "context": "onChange={(e) => setCurrentRole(e.target.value as any)}",
      "type": "assertion"
    },
    {
      "file": "app/tasks/new/task-form.tsx",
      "line": 9,
      "column": 13,
      "context": "currentUser: any",
      "type": "explicit"
    },
    {
      "file": "app/tasks/new/task-form.tsx",
      "line": 10,
      "column": 16,
      "context": "currentProfile: any",
      "type": "explicit"
    },
    {
      "file": "app/tasks/[id]/task-detail.tsx",
      "line": 10,
      "column": 13,
      "context": "currentUser: any",
      "type": "explicit"
    },
    {
      "file": "app/tasks/[id]/task-detail.tsx",
      "line": 11,
      "column": 16,
      "context": "currentProfile: any",
      "type": "explicit"
    },
    {
      "file": "app/tasks/[id]/task-detail.tsx",
      "line": 12,
      "column": 6,
      "context": "task: any",
      "type": "explicit"
    },
    {
      "file": "app/tasks/[id]/task-detail.tsx",
      "line": 397,
      "column": 69,
      "context": "{Array.isArray(comments) && comments.map((comment: any) => (",
      "type": "explicit"
    },
    {
      "file": "app/partner/workers/partner-workers-client.tsx",
      "line": 14,
      "column": 41,
      "context": "profile: Profile & { partner_companies?: any }",
      "type": "explicit"
    },
    {
      "file": "app/partner/workers/partner-workers-client.tsx",
      "line": 61,
      "column": 35,
      "context": "w.site_assignments?.some((a: any) => a.is_active)",
      "type": "explicit"
    },
    {
      "file": "app/partner/workers/partner-workers-client.tsx",
      "line": 65,
      "column": 36,
      "context": "!w.site_assignments?.some((a: any) => a.is_active)",
      "type": "explicit"
    },
    {
      "file": "app/partner/workers/partner-workers-client.tsx",
      "line": 77,
      "column": 31,
      "context": "w.site_assignments?.some((a: any) => a.is_active)",
      "type": "explicit"
    },
    {
      "file": "app/partner/workers/partner-workers-client.tsx",
      "line": 211,
      "column": 58,
      "context": "onChange={(e) => setRoleFilter(e.target.value as any)}",
      "type": "assertion"
    },
    {
      "file": "app/partner/workers/partner-workers-client.tsx",
      "line": 224,
      "column": 60,
      "context": "onChange={(e) => setStatusFilter(e.target.value as any)}",
      "type": "assertion"
    },
    {
      "file": "app/partner/workers/partner-workers-client.tsx",
      "line": 243,
      "column": 65,
      "context": "const activeSite = worker.site_assignments?.find((a: any) => a.is_active)",
      "type": "explicit"
    },
    {
      "file": "app/partner/sites/partner-sites-client.tsx",
      "line": 13,
      "column": 41,
      "context": "profile: Profile & { partner_companies?: any }",
      "type": "explicit"
    },
    {
      "file": "app/partner/sites/partner-sites-client.tsx",
      "line": 137,
      "column": 62,
      "context": "onChange={(e) => setStatusFilter(e.target.value as any)}",
      "type": "assertion"
    },
    {
      "file": "app/partner/dashboard/partner-dashboard-client.tsx",
      "line": 9,
      "column": 41,
      "context": "profile: Profile & { partner_companies?: any }",
      "type": "explicit"
    },
    {
      "file": "app/dashboard/test-site-info/test-client.tsx",
      "line": 7,
      "column": 20,
      "context": "initialCurrentSite: any",
      "type": "explicit"
    },
    {
      "file": "app/dashboard/test-site-info/test-client.tsx",
      "line": 8,
      "column": 16,
      "context": "initialHistory: any",
      "type": "explicit"
    },
    {
      "file": "app/dashboard/test-permissions/page.tsx",
      "line": 107,
      "column": 33,
      "context": "async function testQuery(supabase: any, table: string, operation: string, data?: any, filter?: any) {",
      "type": "explicit"
    },
    {
      "file": "app/dashboard/test-permissions/page.tsx",
      "line": 107,
      "column": 79,
      "context": "async function testQuery(supabase: any, table: string, operation: string, data?: any, filter?: any) {",
      "type": "explicit"
    },
    {
      "file": "app/dashboard/test-permissions/page.tsx",
      "line": 107,
      "column": 93,
      "context": "async function testQuery(supabase: any, table: string, operation: string, data?: any, filter?: any) {",
      "type": "explicit"
    },
    {
      "file": "app/dashboard/test-db/page.tsx",
      "line": 27,
      "column": 35,
      "context": ".rpc('get_current_user_site' as any, { user_uuid: user.id })",
      "type": "assertion"
    },
    {
      "file": "app/dashboard/markup/page.tsx",
      "line": 51,
      "column": 27,
      "context": "setProfile(profile as any)",
      "type": "assertion"
    },
    {
      "file": "app/dashboard/admin/admin-dashboard-content.tsx",
      "line": 106,
      "column": 57,
      "context": "const unreadCount = data.notifications?.filter((n: any) => !n.is_read).length || 0",
      "type": "explicit"
    },
    {
      "file": "app/debug/auth-test/page.tsx",
      "line": 11,
      "column": 10,
      "context": "details?: any",
      "type": "explicit"
    },
    {
      "file": "app/debug/auth-test/page.tsx",
      "line": 27,
      "column": 105,
      "context": "const updateResult = (name: string, status: 'pending' | 'success' | 'error', message?: string, details?: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/user-document-submissions/route.ts",
      "line": 145,
      "column": 20,
      "context": "const updateData: any = {",
      "type": "explicit"
    },
    {
      "file": "app/api/unified-documents/route.ts",
      "line": 142,
      "column": 88,
      "context": "const statisticsByCategory = categoryStats?.reduce((acc: Record<string, number>, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/unified-documents/route.ts",
      "line": 161,
      "column": 84,
      "context": "const statisticsByStatus = statusStats?.reduce((acc: Record<string, number>, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/unified-documents/route.ts",
      "line": 168,
      "column": 82,
      "context": "const documentsByCategory = documents?.reduce((acc: Record<string, any[]>, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/unified-documents/route.ts",
      "line": 168,
      "column": 71,
      "context": "const documentsByCategory = documents?.reduce((acc: Record<string, any[]>, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/unified-documents/route.ts",
      "line": 173,
      "column": 28,
      "context": "}, {} as Record<string, any[]>) || {}",
      "type": "explicit"
    },
    {
      "file": "app/api/unified-documents/route.ts",
      "line": 244,
      "column": 12,
      "context": "let body: any",
      "type": "explicit"
    },
    {
      "file": "app/api/test-required-docs/route.ts",
      "line": 53,
      "column": 52,
      "context": "const transformedDocuments = documents?.map((doc: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/test-production-login/route.ts",
      "line": 31,
      "column": 26,
      "context": "users: users?.map((u: any) => ({ email: u.email, role: u.role })),",
      "type": "explicit"
    },
    {
      "file": "app/api/test-production-login/route.ts",
      "line": 43,
      "column": 32,
      "context": "sampleUsers: users?.map((u: any) => u.email) || [],",
      "type": "explicit"
    },
    {
      "file": "app/api/sites/route.ts",
      "line": 39,
      "column": 50,
      "context": "const formattedSites = (sites || []).map((site: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/seed-realistic/route.ts",
      "line": 55,
      "column": 46,
      "context": "const workers = existingProfiles.filter((p: any) => p.role === 'worker')",
      "type": "explicit"
    },
    {
      "file": "app/api/seed-realistic/route.ts",
      "line": 56,
      "column": 47,
      "context": "const managers = existingProfiles.filter((p: any) => p.role === 'site_manager')",
      "type": "explicit"
    },
    {
      "file": "app/api/seed-realistic/route.ts",
      "line": 63,
      "column": 49,
      "context": "const mapping = WORKER_NAME_MAPPING.find((m: any, idx: number) => idx >= mappingIndex && m.role === 'worker')",
      "type": "explicit"
    },
    {
      "file": "app/api/seed-realistic/route.ts",
      "line": 87,
      "column": 49,
      "context": "const mapping = WORKER_NAME_MAPPING.find((m: any, idx: number) => idx >= mappingIndex && m.role === 'site_manager')",
      "type": "explicit"
    },
    {
      "file": "app/api/seed-realistic/route.ts",
      "line": 119,
      "column": 63,
      "context": "console.log(`🏗️ ${sites.length}개 활성 사이트 발견: ${sites.map((s: any) => s.name).join(', ')}`)",
      "type": "explicit"
    },
    {
      "file": "app/api/seed-realistic/route.ts",
      "line": 251,
      "column": 108,
      "context": "const managerId = siteManagers && siteManagers.length > 0 ? siteManagers[0].user_id : allUsers.find((u: any) => u.role === 'site_manager')?.id",
      "type": "explicit"
    },
    {
      "file": "app/api/seed-realistic/route.ts",
      "line": 349,
      "column": 44,
      "context": "target_names: WORKER_NAME_MAPPING.map((m: any) => `${m.newName} (${m.role})`)",
      "type": "explicit"
    },
    {
      "file": "app/api/seed-data/route.ts",
      "line": 64,
      "column": 10,
      "context": "} as any, {",
      "type": "assertion"
    },
    {
      "file": "app/api/seed-data/route.ts",
      "line": 115,
      "column": 35,
      "context": "const site = allSites.find((s: any) => s.name === targetName)",
      "type": "explicit"
    },
    {
      "file": "app/api/seed-data/route.ts",
      "line": 135,
      "column": 32,
      "context": "const site = sites.find((s: any) => s.name === assignment.targetName) || sites[i] // 매칭되는 사이트가 없으면 인덱스로 선택",
      "type": "explicit"
    },
    {
      "file": "app/api/seed-data/route.ts",
      "line": 149,
      "column": 12,
      "context": "} as any, {",
      "type": "assertion"
    },
    {
      "file": "app/api/seed-data/route.ts",
      "line": 171,
      "column": 10,
      "context": "} as any, {",
      "type": "assertion"
    },
    {
      "file": "app/api/seed-data/route.ts",
      "line": 185,
      "column": 32,
      "context": "const site = sites.find((s: any) => s.name === assignment.targetName) || sites[i]",
      "type": "explicit"
    },
    {
      "file": "app/api/seed-data/route.ts",
      "line": 249,
      "column": 32,
      "context": "const site = sites.find((s: any) => s.name === assignment.targetName) || sites[i]",
      "type": "explicit"
    },
    {
      "file": "app/api/seed-data/route.ts",
      "line": 303,
      "column": 42,
      "context": "for (const worker of WORKERS.filter((w: any) => w.role === 'worker')) {",
      "type": "explicit"
    },
    {
      "file": "app/api/seed-data/route.ts",
      "line": 315,
      "column": 43,
      "context": "for (const manager of WORKERS.filter((w: any) => w.role === 'site_manager')) {",
      "type": "explicit"
    },
    {
      "file": "app/api/seed-data/route.ts",
      "line": 343,
      "column": 34,
      "context": "workers: WORKERS.filter((w: any) => w.role === 'worker').map((w: any) => w.full_name),",
      "type": "explicit"
    },
    {
      "file": "app/api/seed-data/route.ts",
      "line": 343,
      "column": 71,
      "context": "workers: WORKERS.filter((w: any) => w.role === 'worker').map((w: any) => w.full_name),",
      "type": "explicit"
    },
    {
      "file": "app/api/seed-data/route.ts",
      "line": 344,
      "column": 35,
      "context": "managers: WORKERS.filter((w: any) => w.role === 'site_manager').map((w: any) => w.full_name),",
      "type": "explicit"
    },
    {
      "file": "app/api/seed-data/route.ts",
      "line": 344,
      "column": 78,
      "context": "managers: WORKERS.filter((w: any) => w.role === 'site_manager').map((w: any) => w.full_name),",
      "type": "explicit"
    },
    {
      "file": "app/api/seed-data/route.ts",
      "line": 345,
      "column": 27,
      "context": "sites: sites.map((s: any) => s.name)",
      "type": "explicit"
    },
    {
      "file": "app/api/seed-data/route.ts",
      "line": 361,
      "column": 27,
      "context": "workers: WORKERS.map((w: any) => ({ name: w.full_name, role: w.role })),",
      "type": "explicit"
    },
    {
      "file": "app/api/seed-data/route.ts",
      "line": 362,
      "column": 34,
      "context": "sites: SITE_ASSIGNMENTS.map((s: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/seed-data/route.ts",
      "line": 365,
      "column": 30,
      "context": "manager: WORKERS.find((w: any) => w.id === s.managerId)?.full_name",
      "type": "explicit"
    },
    {
      "file": "app/api/required-documents/route.ts",
      "line": 110,
      "column": 50,
      "context": "const transformedData = requirements?.map((req: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/required-document-types/route.ts",
      "line": 42,
      "column": 59,
      "context": "const transformedDocuments = (documents || []).map((doc: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grids/route.ts",
      "line": 256,
      "column": 32,
      "context": "photoGrids.map(async (grid: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/route.ts",
      "line": 72,
      "column": 44,
      "context": "unread: allNotifications.filter((n: any) => !n.is_read).length,",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/route.ts",
      "line": 73,
      "column": 46,
      "context": "byType: allNotifications.reduce((acc: any, n: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/route.ts",
      "line": 73,
      "column": 54,
      "context": "byType: allNotifications.reduce((acc: any, n: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/route.ts",
      "line": 77,
      "column": 44,
      "context": "recent: allNotifications.filter((n: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/route.ts",
      "line": 161,
      "column": 37,
      "context": "targetUsers = roleUsers?.map((u: any) => ({ user_id: u.id })) || []",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/route.ts",
      "line": 168,
      "column": 49,
      "context": "const notifications = targetUsers.map((target: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/markup-documents/route.ts",
      "line": 99,
      "column": 50,
      "context": "const formattedDocuments = documents?.map((doc: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/markup-documents/route.ts",
      "line": 198,
      "column": 26,
      "context": "site_id: (profile as any).site_id,",
      "type": "assertion"
    },
    {
      "file": "app/api/markup-documents/route.ts",
      "line": 201,
      "column": 8,
      "context": "} as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/markup-documents/route.ts",
      "line": 203,
      "column": 16,
      "context": ".single() as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/markup-documents/route.ts",
      "line": 223,
      "column": 28,
      "context": "site_id: (profile as any).site_id,",
      "type": "assertion"
    },
    {
      "file": "app/api/documents/route.ts",
      "line": 270,
      "column": 33,
      "context": "statusCode: (uploadError as any).statusCode,",
      "type": "assertion"
    },
    {
      "file": "app/api/diag-supabase/route.ts",
      "line": 10,
      "column": 15,
      "context": "const payload: any = {",
      "type": "explicit"
    },
    {
      "file": "app/api/announcements/route.ts",
      "line": 83,
      "column": 53,
      "context": "const notifications = targetWorkers.map((worker: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/announcements/route.ts",
      "line": 101,
      "column": 30,
      "context": "targetWorkers.map((w: any) => w.id),",
      "type": "explicit"
    },
    {
      "file": "app/api/announcements/route.ts",
      "line": 209,
      "column": 17,
      "context": "?.filter((a: any) => !a.read_status?.length)",
      "type": "explicit"
    },
    {
      "file": "app/api/announcements/route.ts",
      "line": 210,
      "column": 13,
      "context": ".map((a: any) => a.id) || []",
      "type": "explicit"
    },
    {
      "file": "app/api/announcements/route.ts",
      "line": 216,
      "column": 39,
      "context": "unreadIds.map((announcementId: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/auth/__tests__/actions.test.ts",
      "line": 20,
      "column": 22,
      "context": "let mockSupabaseClient: any",
      "type": "explicit"
    },
    {
      "file": "app/auth/__tests__/actions.comprehensive.test.ts",
      "line": 19,
      "column": 24,
      "context": "let mockSupabaseClient: any",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/worker-salary-settings.ts",
      "line": 394,
      "column": 41,
      "context": "const summary = records.reduce((acc: any, record: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/worker-salary-settings.ts",
      "line": 394,
      "column": 54,
      "context": "const summary = records.reduce((acc: any, record: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/worker-salary-settings.ts",
      "line": 459,
      "column": 52,
      "context": "const formatted_workers = workers?.map((worker: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/worker-salary-settings.ts",
      "line": 460,
      "column": 62,
      "context": "const active_setting = worker.salary_settings?.find((s: any) => s.is_active)",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/users.ts",
      "line": 100,
      "column": 37,
      "context": "(users || []).map(async (user: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/users.ts",
      "line": 134,
      "column": 43,
      "context": "const doc = userDocs?.find((d: any) => d.document_type === docType)",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/users.ts",
      "line": 180,
      "column": 58,
      "context": "site_assignments: assignments?.map((assignment: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/users.ts",
      "line": 284,
      "column": 37,
      "context": "const doc = userDocs?.find((d: any) => d.document_type === docType)",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/users.ts",
      "line": 304,
      "column": 52,
      "context": "const thisMonthReports = workLogs?.filter((log: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/users.ts",
      "line": 311,
      "column": 45,
      "context": "site_assignments: assignments?.map((a: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/users.ts",
      "line": 313,
      "column": 30,
      "context": "site_name: (a.sites as any)?.name || 'Unknown',",
      "type": "assertion"
    },
    {
      "file": "app/actions/admin/users.ts",
      "line": 318,
      "column": 45,
      "context": "required_documents: documents?.map((d: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/users.ts",
      "line": 521,
      "column": 54,
      "context": "const protectedAdmins = adminUsers?.filter((user: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/system.ts",
      "line": 9,
      "column": 15,
      "context": "setting_value: any",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/system.ts",
      "line": 40,
      "column": 13,
      "context": "old_values?: any",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/system.ts",
      "line": 41,
      "column": 13,
      "context": "new_values?: any",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/system.ts",
      "line": 101,
      "column": 15,
      "context": "setting_value: any,",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/system.ts",
      "line": 158,
      "column": 46,
      "context": "const activeUsers = userStats?.filter((u: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/system.ts",
      "line": 171,
      "column": 46,
      "context": "const activeSites = siteStats?.filter((s: any) => s.is_active).length || 0",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/system.ts",
      "line": 179,
      "column": 65,
      "context": "const storageUsed = documentStats?.reduce((sum: number, doc: any) => sum + (doc.file_size || 0), 0) || 0",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/system.ts",
      "line": 457,
      "column": 68,
      "context": "const uniqueCategories = Array.from(new Set(categories?.map((c: any) => c.category) || [])) as string[]",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/sites.ts",
      "line": 204,
      "column": 12,
      "context": "}, {} as any)",
      "type": "assertion"
    },
    {
      "file": "app/actions/admin/sites.ts",
      "line": 360,
      "column": 84,
      "context": "export async function getSiteAssignments(siteId: string): Promise<AdminActionResult<any[]>> {",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/signup-approvals.ts",
      "line": 73,
      "column": 29,
      "context": "pending: stats?.filter((s: any) => s.status === 'pending').length || 0,",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/signup-approvals.ts",
      "line": 74,
      "column": 30,
      "context": "approved: stats?.filter((s: any) => s.status === 'approved').length || 0,",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/signup-approvals.ts",
      "line": 75,
      "column": 30,
      "context": "rejected: stats?.filter((s: any) => s.status === 'rejected').length || 0",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/shipments.ts",
      "line": 129,
      "column": 20,
      "context": "const updateData: any = {",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/shipments.ts",
      "line": 199,
      "column": 20,
      "context": "const updateData: any = { updated_at: new Date().toISOString() }",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/shipments.ts",
      "line": 381,
      "column": 55,
      "context": "const urgentRequests = pendingRequests?.filter((req: any) => req.urgency === 'emergency') || []",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/shipments.ts",
      "line": 382,
      "column": 61,
      "context": "const highPriorityRequests = pendingRequests?.filter((req: any) => req.urgency === 'urgent') || []",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/shipments.ts",
      "line": 383,
      "column": 55,
      "context": "const normalRequests = pendingRequests?.filter((req: any) => req.urgency === 'normal') || []",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/salary.ts",
      "line": 11,
      "column": 13,
      "context": "conditions?: any",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/salary.ts",
      "line": 269,
      "column": 14,
      "context": "} as any,",
      "type": "assertion"
    },
    {
      "file": "app/actions/admin/salary.ts",
      "line": 389,
      "column": 34,
      "context": "const site = sites.find((s: any) => s.id === report.site_id)",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/salary.ts",
      "line": 392,
      "column": 41,
      "context": "const worker = profiles.find((p: any) => p.full_name === workerEntry.worker_name)",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/salary.ts",
      "line": 538,
      "column": 40,
      "context": "const worker = workers.find((w: any) => w.full_name === workerEntry.worker_name)",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/salary.ts",
      "line": 568,
      "column": 42,
      "context": "const hourlyRule = rules.find((r: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/salary.ts",
      "line": 574,
      "column": 41,
      "context": "const dailyRule = rules.find((r: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/salary.ts",
      "line": 580,
      "column": 44,
      "context": "const overtimeRule = rules.find((r: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/salary.ts",
      "line": 802,
      "column": 50,
      "context": "const totalWorkers = new Set(records?.map((r: any) => r.worker_id)).size",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/salary.ts",
      "line": 803,
      "column": 52,
      "context": "const pendingCalculations = records?.filter((r: any) => r.status === 'calculated').length || 0",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/salary.ts",
      "line": 804,
      "column": 49,
      "context": "const approvedPayments = records?.filter((r: any) => r.status === 'approved').length || 0",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/salary.ts",
      "line": 805,
      "column": 58,
      "context": "const totalPayroll = records?.reduce((sum: number, r: any) => sum + (r.total_pay || 0), 0) || 0",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/salary.ts",
      "line": 807,
      "column": 56,
      "context": "const totalHours = records?.reduce((sum: number, r: any) => sum + (r.regular_hours || 0) + (r.overtime_hours || 0), 0) || 0",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/salary.ts",
      "line": 808,
      "column": 59,
      "context": "const overtimeHours = records?.reduce((sum: number, r: any) => sum + (r.overtime_hours || 0), 0) || 0",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/salary.ts",
      "line": 916,
      "column": 60,
      "context": "const transformedWorkers = (workers || []).map((worker: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/salary.ts",
      "line": 1014,
      "column": 14,
      "context": "worker: any",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/salary.ts",
      "line": 1015,
      "column": 12,
      "context": "site: any",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/salary.ts",
      "line": 1029,
      "column": 34,
      "context": "const site = sites.find((s: any) => s.id === report.site_id)",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/salary.ts",
      "line": 1033,
      "column": 40,
      "context": "const worker = workers.find((w: any) => w.full_name === workerEntry.worker_name)",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/salary.ts",
      "line": 1083,
      "column": 78,
      "context": "const outputData: OutputSummary[] = Object.values(workSummary).map((item: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/salary.ts",
      "line": 1181,
      "column": 34,
      "context": "const site = sites.find((s: any) => s.id === report.site_id)",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/production.ts",
      "line": 147,
      "column": 20,
      "context": "const updateData: any = { updated_at: new Date().toISOString() }",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/production.ts",
      "line": 364,
      "column": 70,
      "context": "const totalProduced = dailyProduction?.reduce((sum: number, record: any) => sum + Number(record.quantity_produced), 0) || 0",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/production.ts",
      "line": 365,
      "column": 66,
      "context": "const totalCost = dailyProduction?.reduce((sum: number, record: any) => sum + Number(record.total_cost || 0), 0) || 0",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/materials.ts",
      "line": 121,
      "column": 59,
      "context": "const transformedMaterials = materials?.map((material: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/materials.ts",
      "line": 214,
      "column": 56,
      "context": "const transformedRequests = requests?.map((request: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/materials.ts",
      "line": 311,
      "column": 28,
      "context": "npcData?.forEach((item: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/materials.ts",
      "line": 379,
      "column": 48,
      "context": "filteredData = filteredData.filter((item: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/materials.ts",
      "line": 385,
      "column": 52,
      "context": "const transformedData = filteredData.map((item: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/materials.ts",
      "line": 767,
      "column": 22,
      "context": "const updateData: any = {",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/materials.ts",
      "line": 813,
      "column": 22,
      "context": "const updateData: any = {",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/markup.ts",
      "line": 86,
      "column": 54,
      "context": "const transformedDocuments = documents?.map((doc: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/markup.ts",
      "line": 294,
      "column": 61,
      "context": "const storageUsed = documents?.reduce((sum: number, doc: any) => sum + (doc.file_size || 0), 0) || 0",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/markup.ts",
      "line": 295,
      "column": 51,
      "context": "const activeUsers = new Set(documents?.map((d: any) => d.created_by)).size || 0",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/email-notifications.ts",
      "line": 15,
      "column": 11,
      "context": "metadata?: any",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/email-notifications.ts",
      "line": 112,
      "column": 38,
      "context": "recipients = users.map((user: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/email-notifications.ts",
      "line": 131,
      "column": 48,
      "context": "recipients = siteUsers.map((assignment: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/email-notifications.ts",
      "line": 147,
      "column": 53,
      "context": "const notifications = recipients.map((recipient: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/email-notifications.ts",
      "line": 395,
      "column": 45,
      "context": "async function simulateEmailSend(notification: any): Promise<void> {",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/documents.ts",
      "line": 91,
      "column": 54,
      "context": "const transformedDocuments = documents?.map((doc: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/documents.ts",
      "line": 277,
      "column": 41,
      "context": "pending: approvalStats?.filter((a: any) => a.status === 'pending').length || 0,",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/documents.ts",
      "line": 278,
      "column": 42,
      "context": "approved: approvalStats?.filter((a: any) => a.status === 'approved').length || 0,",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/documents.ts",
      "line": 279,
      "column": 42,
      "context": "rejected: approvalStats?.filter((a: any) => a.status === 'rejected').length || 0,",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/dashboard-stats.ts",
      "line": 69,
      "column": 37,
      "context": "recentReports.forEach((report: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/dashboard-stats.ts",
      "line": 70,
      "column": 42,
      "context": "const profile = report.profiles as any",
      "type": "assertion"
    },
    {
      "file": "app/actions/admin/dashboard-stats.ts",
      "line": 71,
      "column": 36,
      "context": "const site = report.sites as any",
      "type": "assertion"
    },
    {
      "file": "app/actions/admin/dashboard-stats.ts",
      "line": 92,
      "column": 33,
      "context": "recentUsers.forEach((user: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/dashboard-stats.ts",
      "line": 120,
      "column": 35,
      "context": "recentPhotos.forEach((photo: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/dashboard-stats.ts",
      "line": 121,
      "column": 41,
      "context": "const profile = photo.profiles as any",
      "type": "assertion"
    },
    {
      "file": "app/actions/admin/daily-reports.ts",
      "line": 146,
      "column": 36,
      "context": "(data || []).map(async (report: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/daily-reports.ts",
      "line": 168,
      "column": 54,
      "context": "? workerAssignments.reduce((sum: number, w: any) => sum + (Number(w.labor_hours) || 0), 0)",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/daily-reports.ts",
      "line": 274,
      "column": 50,
      "context": "export async function createDailyReport(reportData: any) {",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/daily-reports.ts",
      "line": 315,
      "column": 59,
      "context": "export async function updateDailyReport(id: string, updates: any) {",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/common.ts",
      "line": 19,
      "column": 19,
      "context": "action: (supabase: any, profile: any) => Promise<AdminActionResult<T>>",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/common.ts",
      "line": 19,
      "column": 33,
      "context": "action: (supabase: any, profile: any) => Promise<AdminActionResult<T>>",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/common.ts",
      "line": 65,
      "column": 10,
      "context": "supabase: any,",
      "type": "explicit"
    },
    {
      "file": "app/actions/admin/common.ts",
      "line": 106,
      "column": 38,
      "context": "export const validateRequired = (value: any, fieldName: string): string | null => {",
      "type": "explicit"
    },
    {
      "file": "app/actions/__tests__/workflows.test.ts",
      "line": 20,
      "column": 18,
      "context": "let mockSupabase: any",
      "type": "explicit"
    },
    {
      "file": "app/actions/__tests__/materials.test.ts",
      "line": 29,
      "column": 24,
      "context": "let mockSupabaseClient: any",
      "type": "explicit"
    },
    {
      "file": "app/actions/__tests__/daily-reports.comprehensive.test.ts",
      "line": 35,
      "column": 24,
      "context": "let mockSupabaseClient: any",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/mocks/__tests__/pwa.mock.test.ts",
      "line": 185,
      "column": 13,
      "context": "(event as any).simulateUserAccept()",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/mocks/__tests__/pwa.mock.test.ts",
      "line": 197,
      "column": 13,
      "context": "(event as any).simulateUserDismiss()",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/mocks/__tests__/pwa.mock.test.ts",
      "line": 233,
      "column": 14,
      "context": "(prompt as any).simulateUserAccept()",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/mocks/__tests__/pwa.mock.test.ts",
      "line": 248,
      "column": 14,
      "context": "(prompt as any).simulateUserDismiss()",
      "type": "assertion"
    },
    {
      "file": "lib/test-utils/factories/__tests__/documents.factory.test.ts",
      "line": 141,
      "column": 45,
      "context": "approval.attached_files.forEach((file: any) => {",
      "type": "explicit"
    },
    {
      "file": "lib/test-utils/factories/__tests__/documents.factory.test.ts",
      "line": 197,
      "column": 38,
      "context": "markup.markup_data.forEach((item: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/admin/materials/tabs/ShipmentRequestsTab.tsx",
      "line": 118,
      "column": 37,
      "context": "const hasNPCItem = (item as any).material_request_items?.some(",
      "type": "assertion"
    },
    {
      "file": "components/admin/materials/tabs/ShipmentRequestsTab.tsx",
      "line": 119,
      "column": 18,
      "context": "(mri: any) => mri.materials?.code?.includes('NPC-1000')",
      "type": "explicit"
    },
    {
      "file": "components/admin/materials/tabs/ShipmentRequestsTab.tsx",
      "line": 124,
      "column": 34,
      "context": "const npcItem = (item as any).material_request_items?.find(",
      "type": "assertion"
    },
    {
      "file": "components/admin/materials/tabs/ShipmentRequestsTab.tsx",
      "line": 125,
      "column": 18,
      "context": "(mri: any) => mri.materials?.code?.includes('NPC-1000')",
      "type": "explicit"
    },
    {
      "file": "components/admin/materials/tabs/ShipmentRequestsTab.tsx",
      "line": 132,
      "column": 31,
      "context": "site_name: (item as any).sites?.name || '알 수 없음',",
      "type": "assertion"
    },
    {
      "file": "components/admin/materials/tabs/ShipmentRequestsTab.tsx",
      "line": 134,
      "column": 36,
      "context": "requester_name: (item as any).profiles?.full_name || '알 수 없음',",
      "type": "assertion"
    },
    {
      "file": "components/admin/materials/tabs/ShipmentRequestsTab.tsx",
      "line": 135,
      "column": 36,
      "context": "requester_role: (item as any).profiles?.role || 'worker',",
      "type": "assertion"
    },
    {
      "file": "components/admin/materials/tabs/ShipmentRequestsTab.tsx",
      "line": 198,
      "column": 22,
      "context": "const updateData: any = {",
      "type": "explicit"
    },
    {
      "file": "components/admin/materials/tabs/ShipmentRequestsTab.tsx",
      "line": 290,
      "column": 14,
      "context": "let aValue: any = a[sortField]",
      "type": "explicit"
    },
    {
      "file": "components/admin/materials/tabs/ShipmentRequestsTab.tsx",
      "line": 291,
      "column": 14,
      "context": "let bValue: any = b[sortField]",
      "type": "explicit"
    },
    {
      "file": "components/admin/materials/tabs/ShipmentRequestsTab.tsx",
      "line": 637,
      "column": 99,
      "context": "onChange={(e) => setResponseForm({ ...responseForm, status: e.target.value as any })}",
      "type": "assertion"
    },
    {
      "file": "components/admin/materials/tabs/ShipmentManagementTab.tsx",
      "line": 85,
      "column": 18,
      "context": "urgent: [] as any[],",
      "type": "explicit"
    },
    {
      "file": "components/admin/materials/tabs/ShipmentManagementTab.tsx",
      "line": 86,
      "column": 25,
      "context": "high_priority: [] as any[],",
      "type": "explicit"
    },
    {
      "file": "components/admin/materials/tabs/ShipmentManagementTab.tsx",
      "line": 87,
      "column": 18,
      "context": "normal: [] as any[],",
      "type": "explicit"
    },
    {
      "file": "components/admin/materials/tabs/ShipmentManagementTab.tsx",
      "line": 102,
      "column": 19,
      "context": "const filters: any = {}",
      "type": "explicit"
    },
    {
      "file": "components/admin/materials/tabs/ShipmentManagementTab.tsx",
      "line": 321,
      "column": 12,
      "context": "let aVal: any = a[sortField as keyof ExtendedShipmentRecord]",
      "type": "explicit"
    },
    {
      "file": "components/admin/materials/tabs/ShipmentManagementTab.tsx",
      "line": 322,
      "column": 12,
      "context": "let bVal: any = b[sortField as keyof ExtendedShipmentRecord]",
      "type": "explicit"
    },
    {
      "file": "components/admin/materials/tabs/ProductionManagementTab.tsx",
      "line": 63,
      "column": 19,
      "context": "const filters: any = {}",
      "type": "explicit"
    },
    {
      "file": "components/admin/materials/tabs/InventoryUsageTab.tsx",
      "line": 134,
      "column": 32,
      "context": "site_name: (trans as any).sites?.name || '알 수 없음',",
      "type": "assertion"
    },
    {
      "file": "components/admin/materials/tabs/InventoryUsageTab.tsx",
      "line": 238,
      "column": 14,
      "context": "let aValue: any = a[sortField]",
      "type": "explicit"
    },
    {
      "file": "components/admin/materials/tabs/InventoryUsageTab.tsx",
      "line": 239,
      "column": 14,
      "context": "let bValue: any = b[sortField]",
      "type": "explicit"
    },
    {
      "file": "components/admin/documents/shared/DocumentUploadModal.tsx",
      "line": 48,
      "column": 37,
      "context": "const [sites, setSites] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/admin/documents/shared/DocumentUploadModal.tsx",
      "line": 49,
      "column": 53,
      "context": "const [organizations, setOrganizations] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/admin/documents/shared/DocumentPermissionsModal.tsx",
      "line": 78,
      "column": 49,
      "context": "const [shareTokens, setShareTokens] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/admin/documents/shared/DocumentFilters.tsx",
      "line": 19,
      "column": 37,
      "context": "const [sites, setSites] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/admin/documents/shared/DocumentFilters.tsx",
      "line": 20,
      "column": 37,
      "context": "const [users, setUsers] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/admin/documents/shared/DocumentFilters.tsx",
      "line": 21,
      "column": 53,
      "context": "const [organizations, setOrganizations] = useState<any[]>([])",
      "type": "explicit"
    },
    {
      "file": "components/admin/documents/shared/DocumentFilters.tsx",
      "line": 64,
      "column": 63,
      "context": "const handleFilterChange = (key: keyof DocumentFilters, value: any) => {",
      "type": "explicit"
    },
    {
      "file": "components/admin/communication/tabs/RequestsTab.tsx",
      "line": 91,
      "column": 32,
      "context": "requester_name: (item as any).profiles?.full_name || '알 수 없음',",
      "type": "assertion"
    },
    {
      "file": "components/admin/communication/tabs/RequestsTab.tsx",
      "line": 92,
      "column": 33,
      "context": "requester_email: (item as any).profiles?.email || '',",
      "type": "assertion"
    },
    {
      "file": "components/admin/communication/tabs/RequestsTab.tsx",
      "line": 93,
      "column": 32,
      "context": "requester_role: (item as any).profiles?.role || 'worker',",
      "type": "assertion"
    },
    {
      "file": "components/admin/communication/tabs/RequestsTab.tsx",
      "line": 94,
      "column": 27,
      "context": "site_name: (item as any).sites?.name || '',",
      "type": "assertion"
    },
    {
      "file": "components/admin/communication/tabs/RequestsTab.tsx",
      "line": 95,
      "column": 34,
      "context": "assigned_to_name: (item as any).assigned_profile?.full_name || ''",
      "type": "assertion"
    },
    {
      "file": "components/admin/communication/tabs/RequestsTab.tsx",
      "line": 119,
      "column": 22,
      "context": "const updateData: any = {",
      "type": "explicit"
    },
    {
      "file": "components/admin/communication/tabs/RequestsTab.tsx",
      "line": 508,
      "column": 101,
      "context": "onChange={(e) => setResponseForm({ ...responseForm, status: e.target.value as any })}",
      "type": "assertion"
    },
    {
      "file": "components/admin/communication/tabs/AnnouncementsTab.tsx",
      "line": 284,
      "column": 85,
      "context": "onChange={(e) => setFormData({ ...formData, priority: e.target.value as any })}",
      "type": "assertion"
    },
    {
      "file": "app/dashboard/daily-reports/new/page.tsx",
      "line": 115,
      "column": 25,
      "context": "workers={workers as any || []}",
      "type": "assertion"
    },
    {
      "file": "app/dashboard/daily-reports/new/dev-page.tsx",
      "line": 75,
      "column": 25,
      "context": "workers={workers as any || []}",
      "type": "assertion"
    },
    {
      "file": "app/dashboard/admin/signup-requests/signup-requests-client.tsx",
      "line": 41,
      "column": 13,
      "context": "currentUser: any",
      "type": "explicit"
    },
    {
      "file": "app/dashboard/admin/signup-requests/signup-requests-client.tsx",
      "line": 83,
      "column": 36,
      "context": "setApprovalRequest(modalRequest as any)",
      "type": "assertion"
    },
    {
      "file": "app/dashboard/admin/signup-requests/signup-requests-client.tsx",
      "line": 202,
      "column": 47,
      "context": "onClick={() => setFilter(tab.key as any)}",
      "type": "assertion"
    },
    {
      "file": "app/dashboard/admin/documents/unified-document-management.tsx",
      "line": 163,
      "column": 26,
      "context": "email: (doc.owner as any)?.email || ''",
      "type": "assertion"
    },
    {
      "file": "app/dashboard/admin/documents/unified-document-management.tsx",
      "line": 173,
      "column": 22,
      "context": "viewCount: (doc as any).view_count || 0,",
      "type": "assertion"
    },
    {
      "file": "app/dashboard/admin/documents/unified-document-management.tsx",
      "line": 174,
      "column": 26,
      "context": "downloadCount: (doc as any).download_count || 0,",
      "type": "assertion"
    },
    {
      "file": "app/dashboard/admin/documents/unified-document-management.tsx",
      "line": 175,
      "column": 17,
      "context": "tags: (doc as any).tags,",
      "type": "assertion"
    },
    {
      "file": "app/api/unified-documents/categories/route.ts",
      "line": 48,
      "column": 101,
      "context": "categoryStats = statsData.reduce((acc: Record<string, { total: number; active: number }>, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/unified-documents/categories/route.ts",
      "line": 65,
      "column": 57,
      "context": "const categoriesWithStats = categories?.map((category: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/unified-documents/bulk/route.ts",
      "line": 55,
      "column": 37,
      "context": "const foundIds = documents.map((d: any) => d.id)",
      "type": "explicit"
    },
    {
      "file": "app/api/unified-documents/bulk/route.ts",
      "line": 56,
      "column": 45,
      "context": "const missingIds = documentIds.filter((id: any) => !foundIds.includes(id))",
      "type": "explicit"
    },
    {
      "file": "app/api/sites/switch/route.ts",
      "line": 109,
      "column": 37,
      "context": "let recentSites = (preferences as any)?.recent_site_ids || []",
      "type": "assertion"
    },
    {
      "file": "app/api/sites/switch/route.ts",
      "line": 122,
      "column": 12,
      "context": "} as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/sites/switch/route.ts",
      "line": 131,
      "column": 12,
      "context": "} as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/sites/search/route.ts",
      "line": 89,
      "column": 63,
      "context": "const results: SiteSearchResult[] = (sites || []).map((site: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/sites/current/route.ts",
      "line": 65,
      "column": 33,
      "context": "const site = assignment.site as any",
      "type": "assertion"
    },
    {
      "file": "app/api/sites/current/route.ts",
      "line": 78,
      "column": 33,
      "context": "member_name: (latestReport as any).member_name || '미정',",
      "type": "assertion"
    },
    {
      "file": "app/api/sites/current/route.ts",
      "line": 79,
      "column": 34,
      "context": "work_process: (latestReport as any).work_process || '미정',",
      "type": "assertion"
    },
    {
      "file": "app/api/sites/current/route.ts",
      "line": 80,
      "column": 34,
      "context": "work_section: (latestReport as any).work_section || '미정',",
      "type": "assertion"
    },
    {
      "file": "app/api/sites/by-partner/route.ts",
      "line": 46,
      "column": 39,
      "context": "const cleanSites = sites?.map((site: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/shared-documents/[id]/route.ts",
      "line": 67,
      "column": 6,
      "context": "} as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/shared-documents/[id]/route.ts",
      "line": 73,
      "column": 20,
      "context": "const updateData: any = {}",
      "type": "explicit"
    },
    {
      "file": "app/api/shared-documents/[id]/route.ts",
      "line": 131,
      "column": 6,
      "context": "} as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/safety/alerts/route.ts",
      "line": 72,
      "column": 51,
      "context": "const notifications = siteWorkers.map((worker: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grids/[id]/route.ts",
      "line": 193,
      "column": 47,
      "context": "existingBefore.find((p: any) => p.order === 0)?.url || null,",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grids/[id]/route.ts",
      "line": 195,
      "column": 45,
      "context": "existingAfter.find((p: any) => p.order === 0)?.url || null,",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grids/[id]/route.ts",
      "line": 215,
      "column": 30,
      "context": "...existingBefore.map((p: any) => ({ type: 'before' as const, url: p.url, order: p.order })),",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grids/[id]/route.ts",
      "line": 216,
      "column": 29,
      "context": "...existingAfter.map((p: any) => ({ type: 'after' as const, url: p.url, order: p.order }))",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/stats/route.ts",
      "line": 71,
      "column": 53,
      "context": "total_file_size: reports.reduce((sum: number, r: any) => sum + (r.file_size || 0), 0),",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/stats/route.ts",
      "line": 72,
      "column": 53,
      "context": "total_downloads: reports.reduce((sum: number, r: any) => sum + (r.download_count || 0), 0),",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/stats/route.ts",
      "line": 73,
      "column": 56,
      "context": "total_photo_groups: reports.reduce((sum: number, r: any) => sum + (r.total_photo_groups || 0), 0),",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/stats/route.ts",
      "line": 74,
      "column": 57,
      "context": "total_before_photos: reports.reduce((sum: number, r: any) => sum + (r.total_before_photos || 0), 0),",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/stats/route.ts",
      "line": 75,
      "column": 56,
      "context": "total_after_photos: reports.reduce((sum: number, r: any) => sum + (r.total_after_photos || 0), 0),",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/stats/route.ts",
      "line": 78,
      "column": 44,
      "context": "reports_by_status: reports.reduce((acc: any, r: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/stats/route.ts",
      "line": 78,
      "column": 52,
      "context": "reports_by_status: reports.reduce((acc: any, r: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/stats/route.ts",
      "line": 84,
      "column": 44,
      "context": "reports_by_method: reports.reduce((acc: any, r: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/stats/route.ts",
      "line": 84,
      "column": 52,
      "context": "reports_by_method: reports.reduce((acc: any, r: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/stats/route.ts",
      "line": 92,
      "column": 51,
      "context": "? Math.round(reports.reduce((sum: number, r: any) => sum + (r.file_size || 0), 0) / reports.length)",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/stats/route.ts",
      "line": 97,
      "column": 29,
      "context": "? reports.reduce((max: any, r: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/stats/route.ts",
      "line": 97,
      "column": 37,
      "context": "? reports.reduce((max: any, r: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/stats/route.ts",
      "line": 104,
      "column": 16,
      "context": ".sort((a: any, b: any) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime())",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/stats/route.ts",
      "line": 104,
      "column": 24,
      "context": ".sort((a: any, b: any) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime())",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/stats/route.ts",
      "line": 108,
      "column": 42,
      "context": "reports_by_site: reports.reduce((acc: any, r: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/stats/route.ts",
      "line": 108,
      "column": 50,
      "context": "reports_by_site: reports.reduce((acc: any, r: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/stats/route.ts",
      "line": 115,
      "column": 45,
      "context": "reports_by_creator: reports.reduce((acc: any, r: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/stats/route.ts",
      "line": 115,
      "column": 53,
      "context": "reports_by_creator: reports.reduce((acc: any, r: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/stats/route.ts",
      "line": 122,
      "column": 43,
      "context": "reports_by_month: reports.reduce((acc: any, r: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/stats/route.ts",
      "line": 122,
      "column": 51,
      "context": "reports_by_month: reports.reduce((acc: any, r: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/bulk/route.ts",
      "line": 46,
      "column": 35,
      "context": "results = reportIds.map((id: any) => ({ id, action: 'deleted', success: true }))",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/bulk/route.ts",
      "line": 67,
      "column": 35,
      "context": "results = reportIds.map((id: any) => ({ id, action: 'archived', success: true }))",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/bulk/route.ts",
      "line": 89,
      "column": 35,
      "context": "results = reportIds.map((id: any) => ({ id, action: 'restored', success: true }))",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/bulk/route.ts",
      "line": 121,
      "column": 40,
      "context": "const filePaths = reports.map((r: any) => `photo-grid-reports/${r.file_name}`)",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/bulk/route.ts",
      "line": 145,
      "column": 35,
      "context": "results = reportIds.map((id: any) => ({ id, action: 'permanently_deleted', success: true }))",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/bulk/route.ts",
      "line": 159,
      "column": 22,
      "context": ".filter((key: any) => allowedFields.includes(key))",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/bulk/route.ts",
      "line": 160,
      "column": 22,
      "context": ".reduce((obj: any, key: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/bulk/route.ts",
      "line": 160,
      "column": 32,
      "context": ".reduce((obj: any, key: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/bulk/route.ts",
      "line": 163,
      "column": 16,
      "context": "}, {} as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/photo-grid-reports/bulk/route.ts",
      "line": 187,
      "column": 35,
      "context": "results = reportIds.map((id: any) => ({ id, action: 'updated', success: true, updates }))",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/bulk/route.ts",
      "line": 201,
      "column": 35,
      "context": "successful: results.filter((r: any) => r.success).length",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grid-reports/[id]/route.ts",
      "line": 84,
      "column": 12,
      "context": "}, {} as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/partner/sites/route.ts",
      "line": 161,
      "column": 67,
      "context": "const transformedParticipations = (participations || []).map((p: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/partner/sites/route.ts",
      "line": 189,
      "column": 59,
      "context": "const activeSites = transformedParticipations.filter((p: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/api/partner/sites/route.ts",
      "line": 192,
      "column": 62,
      "context": "const completedSites = transformedParticipations.filter((p: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/push/route.ts",
      "line": 23,
      "column": 7,
      "context": "data?: any",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/push/route.ts",
      "line": 143,
      "column": 39,
      "context": ".in('user_id', targetUsers.map((u: any) => u.id))",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/push/route.ts",
      "line": 147,
      "column": 37,
      "context": "recentNotifications?.forEach((log: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/push/route.ts",
      "line": 152,
      "column": 50,
      "context": "const eligibleUsers = targetUsers.filter((user: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/push/route.ts",
      "line": 206,
      "column": 92,
      "context": "const [startHour, startMin] = (prefs.quiet_hours_start || '22:00').split(':').map((x: any) => Number(x))",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/push/route.ts",
      "line": 207,
      "column": 86,
      "context": "const [endHour, endMin] = (prefs.quiet_hours_end || '08:00').split(':').map((x: any) => Number(x))",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/push/route.ts",
      "line": 227,
      "column": 62,
      "context": "const notificationPromises = eligibleUsers.map(async (user: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/push/route.ts",
      "line": 308,
      "column": 42,
      "context": "const successCount = results.filter((r: any) => r.status === 'fulfilled' && r.value.success).length",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/push/route.ts",
      "line": 331,
      "column": 47,
      "context": "function getNotificationUrl(type: string, data?: any): string {",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/process-scheduled/route.ts",
      "line": 53,
      "column": 52,
      "context": "scheduledNotifications.map(async (notification: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/process-scheduled/route.ts",
      "line": 104,
      "column": 56,
      "context": "const eligibleUsers = targetUsers.filter((user: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/process-scheduled/route.ts",
      "line": 130,
      "column": 98,
      "context": "const [startHour, startMin] = (prefs.quiet_hours_start || '22:00').split(':').map((x: any) => Number(x))",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/process-scheduled/route.ts",
      "line": 131,
      "column": 92,
      "context": "const [endHour, endMin] = (prefs.quiet_hours_end || '08:00').split(':').map((x: any) => Number(x))",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/process-scheduled/route.ts",
      "line": 151,
      "column": 60,
      "context": "const sendPromises = eligibleUsers.map(async (user: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/process-scheduled/route.ts",
      "line": 232,
      "column": 52,
      "context": "const successCount = sendResults.filter((r: any) => r.status === 'fulfilled' && r.value.success).length",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/process-scheduled/route.ts",
      "line": 274,
      "column": 40,
      "context": "const successful = results.filter((r: any) => r.status === 'fulfilled' && r.value.success).length",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/process-scheduled/route.ts",
      "line": 284,
      "column": 31,
      "context": "results: results.map((r: any) => r.status === 'fulfilled' ? r.value : { success: false, error: r.reason })",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/history/route.ts",
      "line": 59,
      "column": 49,
      "context": "const notificationIds = notifications?.map((n: any) => n.id) || []",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/history/route.ts",
      "line": 67,
      "column": 72,
      "context": "const notificationsWithEngagement = notifications?.map((notification: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/history/route.ts",
      "line": 75,
      "column": 44,
      "context": "lastEngagement: engagement.sort((a: any, b: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/history/route.ts",
      "line": 75,
      "column": 52,
      "context": "lastEngagement: engagement.sort((a: any, b: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/history/route.ts",
      "line": 119,
      "column": 17,
      "context": "const updates: any = {}",
      "type": "explicit"
    },
    {
      "file": "app/api/monitoring/metrics/route.ts",
      "line": 21,
      "column": 20,
      "context": "const response: any = {",
      "type": "explicit"
    },
    {
      "file": "app/api/markup-documents/[id]/route.ts",
      "line": 36,
      "column": 33,
      "context": ".from('markup_documents' as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/markup-documents/[id]/route.ts",
      "line": 53,
      "column": 27,
      "context": "...(legacyDocument as any),",
      "type": "assertion"
    },
    {
      "file": "app/api/markup-documents/[id]/route.ts",
      "line": 54,
      "column": 34,
      "context": "file_url: (legacyDocument as any).original_blueprint_url || (legacyDocument as any).file_url,",
      "type": "assertion"
    },
    {
      "file": "app/api/markup-documents/[id]/route.ts",
      "line": 54,
      "column": 84,
      "context": "file_url: (legacyDocument as any).original_blueprint_url || (legacyDocument as any).file_url,",
      "type": "assertion"
    },
    {
      "file": "app/api/markup-documents/[id]/route.ts",
      "line": 55,
      "column": 48,
      "context": "original_blueprint_url: (legacyDocument as any).original_blueprint_url,",
      "type": "assertion"
    },
    {
      "file": "app/api/markup-documents/[id]/route.ts",
      "line": 56,
      "column": 53,
      "context": "original_blueprint_filename: (legacyDocument as any).original_blueprint_filename",
      "type": "assertion"
    },
    {
      "file": "app/api/markup-documents/[id]/route.ts",
      "line": 111,
      "column": 8,
      "context": "} as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/markup-documents/[id]/route.ts",
      "line": 114,
      "column": 16,
      "context": ".single() as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/markup-documents/[id]/route.ts",
      "line": 179,
      "column": 8,
      "context": "} as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/markup-documents/[id]/route.ts",
      "line": 180,
      "column": 27,
      "context": ".eq('id', params.id) as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/health/env/route.ts",
      "line": 13,
      "column": 10,
      "context": "details?: any",
      "type": "explicit"
    },
    {
      "file": "app/api/health/env/route.ts",
      "line": 103,
      "column": 24,
      "context": "error: (error as any)?.message || 'Unknown error',",
      "type": "assertion"
    },
    {
      "file": "app/api/health/env/route.ts",
      "line": 104,
      "column": 34,
      "context": "details: { code: (error as any)?.status, name: (error as any)?.name }",
      "type": "assertion"
    },
    {
      "file": "app/api/health/env/route.ts",
      "line": 104,
      "column": 64,
      "context": "details: { code: (error as any)?.status, name: (error as any)?.name }",
      "type": "assertion"
    },
    {
      "file": "app/api/health/env/route.ts",
      "line": 135,
      "column": 24,
      "context": "error: (error as any)?.message || 'Unknown error',",
      "type": "assertion"
    },
    {
      "file": "app/api/health/env/route.ts",
      "line": 136,
      "column": 34,
      "context": "details: { code: (error as any)?.code, hint: (error as any)?.hint }",
      "type": "assertion"
    },
    {
      "file": "app/api/health/env/route.ts",
      "line": 136,
      "column": 62,
      "context": "details: { code: (error as any)?.code, hint: (error as any)?.hint }",
      "type": "assertion"
    },
    {
      "file": "app/api/health/env/route.ts",
      "line": 178,
      "column": 51,
      "context": "error: `Table check failed: ${(error as any)?.message || 'Unknown error'}`",
      "type": "assertion"
    },
    {
      "file": "app/api/equipment/maintenance/route.ts",
      "line": 116,
      "column": 61,
      "context": "const urgentNotifications = siteManagers.map((manager: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/documents/permissions/route.ts",
      "line": 52,
      "column": 50,
      "context": "const categoryRule = accessRules?.find((rule: any) => rule.category_type === document.category_type)",
      "type": "explicit"
    },
    {
      "file": "app/api/documents/permissions/route.ts",
      "line": 88,
      "column": 55,
      "context": "permissions_by_category: accessRules?.reduce((acc: any, rule: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/documents/permissions/route.ts",
      "line": 88,
      "column": 66,
      "context": "permissions_by_category: accessRules?.reduce((acc: any, rule: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/debug/storage/route.ts",
      "line": 16,
      "column": 19,
      "context": "const debugInfo: any = {",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/web-vitals/route.ts",
      "line": 73,
      "column": 33,
      "context": "webVitalsData?.forEach((row: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/web-vitals/route.ts",
      "line": 82,
      "column": 79,
      "context": "const webVitals: WebVitalData[] = Object.keys(THRESHOLDS).map((metricName: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/trends/route.ts",
      "line": 48,
      "column": 18,
      "context": ".map((date: any) => format(date, 'M/d'))",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/trends/route.ts",
      "line": 58,
      "column": 19,
      "context": "let trendData: any = {",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/trends/route.ts",
      "line": 75,
      "column": 51,
      "context": "const countsByDay = dateLabels.map((label: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/trends/route.ts",
      "line": 77,
      "column": 49,
      "context": "const dayReports = reports?.filter((r: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/trends/route.ts",
      "line": 90,
      "column": 39,
      "context": "dateLabels.map(async (label: any, index: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/trends/route.ts",
      "line": 90,
      "column": 51,
      "context": "dateLabels.map(async (label: any, index: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/trends/route.ts",
      "line": 104,
      "column": 62,
      "context": "const uniqueWorkers = new Set(dayReports?.map((r: any) => r.created_by) || [])",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/trends/route.ts",
      "line": 115,
      "column": 44,
      "context": "const mockData = dateLabels.map((_: any) => Math.floor(Math.random() * 20) + 70)",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/trends/route.ts",
      "line": 122,
      "column": 44,
      "context": "const mockData = dateLabels.map((_: any) => Math.floor(Math.random() * 25) + 65)",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/trends/route.ts",
      "line": 129,
      "column": 44,
      "context": "const mockData = dateLabels.map((_: any) => Math.floor(Math.random() * 30) + 70)",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/trends/route.ts",
      "line": 136,
      "column": 44,
      "context": "const mockData = dateLabels.map((_: any) => Math.floor(Math.random() * 20) + 75)",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/trends/route.ts",
      "line": 151,
      "column": 51,
      "context": "const countsByDay = dateLabels.map((label: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/trends/route.ts",
      "line": 152,
      "column": 53,
      "context": "const dayIncidents = incidents?.filter((i: any) =>",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/trends/route.ts",
      "line": 164,
      "column": 44,
      "context": "const mockData = dateLabels.map((_: any) => Math.floor(Math.random() * 15) + 85)",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/site-comparison/route.ts",
      "line": 66,
      "column": 39,
      "context": "const siteNames = sites.map((site: any) => site.name)",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/site-comparison/route.ts",
      "line": 67,
      "column": 37,
      "context": "const siteIds = sites.map((site: any) => site.id)",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/site-comparison/route.ts",
      "line": 70,
      "column": 59,
      "context": "const workerCountPromises = siteIds.map(async (siteId: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/site-comparison/route.ts",
      "line": 78,
      "column": 53,
      "context": "const uniqueWorkers = new Set(reports?.map((r: any) => r.created_by) || [])",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/site-comparison/route.ts",
      "line": 83,
      "column": 60,
      "context": "const dailyReportsPromises = siteIds.map(async (siteId: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/site-comparison/route.ts",
      "line": 101,
      "column": 42,
      "context": "const materialUsage = siteIds.map((_: any) => Math.floor(Math.random() * 30) + 70) // 70-100%",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/site-comparison/route.ts",
      "line": 102,
      "column": 41,
      "context": "const productivity = siteIds.map((_: any) => Math.floor(Math.random() * 20) + 80) // 80-100 points",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/session-data/route.ts",
      "line": 62,
      "column": 35,
      "context": "sessionEvents?.forEach((event: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/session-data/route.ts",
      "line": 91,
      "column": 16,
      "context": "(session: any) => new Date(session.lastUpdate) > thirtyMinutesAgo",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/session-data/route.ts",
      "line": 95,
      "column": 31,
      "context": "sessions.forEach((session: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/realtime/route.ts",
      "line": 5,
      "column": 35,
      "context": "async function tableExists(supabase: any, tableName: string): Promise<boolean> {",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/realtime/route.ts",
      "line": 249,
      "column": 23,
      "context": "code: (error as any).code,",
      "type": "assertion"
    },
    {
      "file": "app/api/analytics/realtime/route.ts",
      "line": 250,
      "column": 26,
      "context": "details: (error as any).details,",
      "type": "assertion"
    },
    {
      "file": "app/api/analytics/realtime/route.ts",
      "line": 251,
      "column": 23,
      "context": "hint: (error as any).hint",
      "type": "assertion"
    },
    {
      "file": "app/api/analytics/realtime/route.ts",
      "line": 319,
      "column": 8,
      "context": "} as any) as any).then(() => {",
      "type": "assertion"
    },
    {
      "file": "app/api/analytics/realtime/route.ts",
      "line": 319,
      "column": 16,
      "context": "} as any) as any).then(() => {",
      "type": "assertion"
    },
    {
      "file": "app/api/analytics/realtime/route.ts",
      "line": 321,
      "column": 19,
      "context": "}).catch((err: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/metrics/route.ts",
      "line": 5,
      "column": 35,
      "context": "async function tableExists(supabase: any, tableName: string): Promise<boolean> {",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/metrics/route.ts",
      "line": 132,
      "column": 46,
      "context": "const siteIds = assignedSites.map((s: any) => s.site_id)",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/metrics/route.ts",
      "line": 158,
      "column": 21,
      "context": "code: (error as any).code,",
      "type": "assertion"
    },
    {
      "file": "app/api/analytics/metrics/route.ts",
      "line": 159,
      "column": 24,
      "context": "details: (error as any).details",
      "type": "assertion"
    },
    {
      "file": "app/api/analytics/metrics/route.ts",
      "line": 195,
      "column": 64,
      "context": "const groupedMetrics = metricType ? data : data?.reduce((acc: any, metric: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/metrics/route.ts",
      "line": 195,
      "column": 77,
      "context": "const groupedMetrics = metricType ? data : data?.reduce((acc: any, metric: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/metrics/route.ts",
      "line": 201,
      "column": 28,
      "context": "}, {} as Record<string, any[]>)",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/metrics/route.ts",
      "line": 456,
      "column": 8,
      "context": "} as any) as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/analytics/metrics/route.ts",
      "line": 456,
      "column": 16,
      "context": "} as any) as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/analytics/metrics/route.ts",
      "line": 464,
      "column": 23,
      "context": "code: (error as any).code,",
      "type": "assertion"
    },
    {
      "file": "app/api/analytics/metrics/route.ts",
      "line": 465,
      "column": 23,
      "context": "hint: (error as any).hint",
      "type": "assertion"
    },
    {
      "file": "app/api/analytics/dashboard/route.ts",
      "line": 69,
      "column": 44,
      "context": "const siteIds = assignedSites.map((s: any) => s.site_id)",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/dashboard/route.ts",
      "line": 83,
      "column": 37,
      "context": "totalReports: data?.reduce((sum: any, d: any) => sum + d.total_reports, 0) || 0,",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/dashboard/route.ts",
      "line": 83,
      "column": 45,
      "context": "totalReports: data?.reduce((sum: any, d: any) => sum + d.total_reports, 0) || 0,",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/dashboard/route.ts",
      "line": 85,
      "column": 27,
      "context": "? (data.reduce((sum: any, d: any) => sum + d.report_completion_rate, 0) / data.length).toFixed(2)",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/dashboard/route.ts",
      "line": 85,
      "column": 35,
      "context": "? (data.reduce((sum: any, d: any) => sum + d.report_completion_rate, 0) / data.length).toFixed(2)",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/dashboard/route.ts",
      "line": 88,
      "column": 27,
      "context": "? (data.reduce((sum: any, d: any) => sum + d.attendance_rate, 0) / data.length).toFixed(2)",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/dashboard/route.ts",
      "line": 88,
      "column": 35,
      "context": "? (data.reduce((sum: any, d: any) => sum + d.attendance_rate, 0) / data.length).toFixed(2)",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/dashboard/route.ts",
      "line": 90,
      "column": 40,
      "context": "totalLaborHours: data?.reduce((sum: any, d: any) => sum + Number(d.total_labor_hours), 0).toFixed(2) || 0,",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/dashboard/route.ts",
      "line": 90,
      "column": 48,
      "context": "totalLaborHours: data?.reduce((sum: any, d: any) => sum + Number(d.total_labor_hours), 0).toFixed(2) || 0,",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/dashboard/route.ts",
      "line": 92,
      "column": 27,
      "context": "? (data.reduce((sum: any, d: any) => sum + d.productivity_score, 0) / data.length).toFixed(2)",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/dashboard/route.ts",
      "line": 92,
      "column": 35,
      "context": "? (data.reduce((sum: any, d: any) => sum + d.productivity_score, 0) / data.length).toFixed(2)",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/dashboard/route.ts",
      "line": 94,
      "column": 41,
      "context": "totalNPC1000Used: data?.reduce((sum: any, d: any) => sum + Number(d.npc1000_used), 0).toFixed(2) || 0,",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/dashboard/route.ts",
      "line": 94,
      "column": 49,
      "context": "totalNPC1000Used: data?.reduce((sum: any, d: any) => sum + Number(d.npc1000_used), 0).toFixed(2) || 0,",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/api-performance/route.ts",
      "line": 73,
      "column": 33,
      "context": "apiMetrics?.forEach((metric: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/api-performance/route.ts",
      "line": 95,
      "column": 34,
      "context": "errorMetrics?.forEach((event: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/business-metrics/route.ts",
      "line": 74,
      "column": 74,
      "context": "const activeWorkerIds = Array.from(new Set(activeWorkersData?.map((r: any) => r.created_by) || []))",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/business-metrics/route.ts",
      "line": 120,
      "column": 82,
      "context": "const prevActiveWorkerIds = Array.from(new Set(prevActiveWorkersData?.map((r: any) => r.created_by) || []))",
      "type": "explicit"
    },
    {
      "file": "app/api/analytics/aggregate/route.ts",
      "line": 36,
      "column": 6,
      "context": "} as any) as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/analytics/aggregate/route.ts",
      "line": 36,
      "column": 14,
      "context": "} as any) as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/analytics/aggregate/route.ts",
      "line": 106,
      "column": 48,
      "context": "const aggregatedSites = new Set(data?.map((d: any) => d.site_id) || [])",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/work-options/route.ts",
      "line": 171,
      "column": 20,
      "context": "const updateData: any = {}",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/required-document-types/route.ts",
      "line": 62,
      "column": 42,
      "context": "filteredData = data?.filter((docType: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/required-document-types/route.ts",
      "line": 65,
      "column": 20,
      "context": "(mapping: any) => mapping.role_type === roleType && mapping.is_required",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/required-document-types/route.ts",
      "line": 72,
      "column": 26,
      "context": "(customization: any) => customization.site_id === siteId && customization.is_required",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/required-document-types/route.ts",
      "line": 157,
      "column": 52,
      "context": "const roleInserts = role_mappings.map((mapping: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/required-document-types/route.ts",
      "line": 173,
      "column": 64,
      "context": "const siteInserts = site_customizations.map((customization: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/dashboard/daily-reports/[id]/edit/page.tsx",
      "line": 146,
      "column": 29,
      "context": "workers={workers as any || []}",
      "type": "assertion"
    },
    {
      "file": "app/dashboard/daily-reports/[id]/edit/page.tsx",
      "line": 163,
      "column": 31,
      "context": "workers={workers as any || []}",
      "type": "assertion"
    },
    {
      "file": "app/dashboard/admin/users/[id]/page.tsx",
      "line": 70,
      "column": 72,
      "context": "const totalWorkHours = attendanceData?.reduce((sum: number, record: any) => sum + (record.work_hours || 0), 0) || 0",
      "type": "explicit"
    },
    {
      "file": "app/dashboard/admin/users/[id]/page.tsx",
      "line": 95,
      "column": 42,
      "context": "const handleUpdateUser = async (formData: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/dashboard/admin/users/[id]/page.tsx",
      "line": 297,
      "column": 54,
      "context": "onClick={() => setActiveTab(tab.key as any)}",
      "type": "assertion"
    },
    {
      "file": "app/dashboard/admin/users/[id]/page.tsx",
      "line": 365,
      "column": 21,
      "context": "onSubmit: (formData: any) => void",
      "type": "explicit"
    },
    {
      "file": "app/dashboard/admin/sites/[id]/page.tsx",
      "line": 62,
      "column": 18,
      "context": "primary_customer: any",
      "type": "explicit"
    },
    {
      "file": "app/dashboard/admin/sites/[id]/page.tsx",
      "line": 64,
      "column": 40,
      "context": "documents_by_category: Record<string, any[]>",
      "type": "explicit"
    },
    {
      "file": "app/dashboard/admin/sites/[id]/page.tsx",
      "line": 65,
      "column": 12,
      "context": "statistics: any",
      "type": "explicit"
    },
    {
      "file": "app/dashboard/admin/sites/[id]/page.tsx",
      "line": 372,
      "column": 54,
      "context": "onClick={() => setActiveTab(tab.key as any)}",
      "type": "assertion"
    },
    {
      "file": "app/dashboard/admin/sites/[id]/page.tsx",
      "line": 807,
      "column": 28,
      "context": "const handlePreview = (doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/dashboard/admin/sites/[id]/page.tsx",
      "line": 990,
      "column": 21,
      "context": "onSubmit: (formData: any) => void",
      "type": "explicit"
    },
    {
      "file": "app/dashboard/admin/documents/required/page.tsx",
      "line": 27,
      "column": 48,
      "context": "if (!canAccessDocumentCategory(profile.role as any, 'required')) {",
      "type": "assertion"
    },
    {
      "file": "app/dashboard/admin/documents/photo-grid/page.tsx",
      "line": 27,
      "column": 48,
      "context": "if (!canAccessDocumentCategory(profile.role as any, 'photo_grid')) {",
      "type": "assertion"
    },
    {
      "file": "app/dashboard/admin/documents/markup/page.tsx",
      "line": 27,
      "column": 48,
      "context": "if (!canAccessDocumentCategory(profile.role as any, 'markup')) {",
      "type": "assertion"
    },
    {
      "file": "app/dashboard/admin/documents/invoice/page.tsx",
      "line": 27,
      "column": 48,
      "context": "if (!canAccessDocumentCategory(profile.role as any, 'invoice')) {",
      "type": "assertion"
    },
    {
      "file": "app/dashboard/admin/daily-reports/[id]/page.tsx",
      "line": 136,
      "column": 60,
      "context": "const handleFieldChange = (field: keyof DailyReport, value: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/unified-documents/v2/[id]/route.ts",
      "line": 240,
      "column": 17,
      "context": "const changes: any = {}",
      "type": "explicit"
    },
    {
      "file": "app/api/users/[id]/sites/route.ts",
      "line": 25,
      "column": 6,
      "context": "} as any);",
      "type": "assertion"
    },
    {
      "file": "app/api/users/[id]/sites/route.ts",
      "line": 155,
      "column": 20,
      "context": "const updateData: any = {};",
      "type": "explicit"
    },
    {
      "file": "app/api/sites/[id]/workers/route.ts",
      "line": 64,
      "column": 6,
      "context": "} as any);",
      "type": "assertion"
    },
    {
      "file": "app/api/sites/[id]/workers/route.ts",
      "line": 130,
      "column": 6,
      "context": "} as any);",
      "type": "assertion"
    },
    {
      "file": "app/api/sites/[id]/workers/route.ts",
      "line": 171,
      "column": 20,
      "context": "const updateData: any = {};",
      "type": "explicit"
    },
    {
      "file": "app/api/shared-documents/[id]/share/route.ts",
      "line": 25,
      "column": 6,
      "context": "} as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/shared-documents/[id]/share/route.ts",
      "line": 103,
      "column": 6,
      "context": "} as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/shared-documents/[id]/share/route.ts",
      "line": 133,
      "column": 52,
      "context": "const tokensWithUrls = (tokens || []).map((token: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/shared-documents/[id]/share/route.ts",
      "line": 164,
      "column": 6,
      "context": "} as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/shared-documents/[id]/permissions/route.ts",
      "line": 59,
      "column": 6,
      "context": "} as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/shared-documents/[id]/file/route.ts",
      "line": 17,
      "column": 16,
      "context": "let document: any = null",
      "type": "explicit"
    },
    {
      "file": "app/api/shared-documents/[id]/file/route.ts",
      "line": 63,
      "column": 8,
      "context": "} as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/photo-grids/[id]/download/route.ts",
      "line": 46,
      "column": 44,
      "context": "const beforeImages = images?.filter((img: any) => img.photo_type === 'before') || []",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grids/[id]/download/route.ts",
      "line": 47,
      "column": 43,
      "context": "const afterImages = images?.filter((img: any) => img.photo_type === 'after') || []",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grids/[id]/download/route.ts",
      "line": 54,
      "column": 46,
      "context": "const beforeImg = beforeImages.find((img: any) => img.photo_order === i)",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grids/[id]/download/route.ts",
      "line": 57,
      "column": 44,
      "context": "const afterImg = afterImages.find((img: any) => img.photo_order === i)",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grids/[id]/download/route.ts",
      "line": 286,
      "column": 37,
      "context": "${beforePhotos.map((photo: any, index: number) => `",
      "type": "explicit"
    },
    {
      "file": "app/api/photo-grids/[id]/download/route.ts",
      "line": 300,
      "column": 36,
      "context": "${afterPhotos.map((photo: any, index: number) => `",
      "type": "explicit"
    },
    {
      "file": "app/api/partner/labor/summary/route.ts",
      "line": 72,
      "column": 41,
      "context": "const siteIds = partnerSites?.map((sp: any) => sp.site_id) || []",
      "type": "explicit"
    },
    {
      "file": "app/api/partner/labor/summary/route.ts",
      "line": 74,
      "column": 48,
      "context": "const activeSites = partnerSites?.filter((sp: any) => sp.sites?.status === 'active').length || 0",
      "type": "explicit"
    },
    {
      "file": "app/api/partner/labor/summary/route.ts",
      "line": 101,
      "column": 65,
      "context": "const totalWorkHours = laborData?.reduce((sum: number, record: any) => sum + (Number(record.work_hours) || 0), 0) || 0",
      "type": "explicit"
    },
    {
      "file": "app/api/partner/labor/summary/route.ts",
      "line": 102,
      "column": 66,
      "context": "const totalLaborHours = laborData?.reduce((sum: number, record: any) => sum + (Number(record.labor_hours) || 0), 0) || 0",
      "type": "explicit"
    },
    {
      "file": "app/api/partner/labor/summary/route.ts",
      "line": 103,
      "column": 69,
      "context": "const totalOvertimeHours = laborData?.reduce((sum: number, record: any) => sum + (Number(record.overtime_hours) || 0), 0) || 0",
      "type": "explicit"
    },
    {
      "file": "app/api/partner/labor/summary/route.ts",
      "line": 106,
      "column": 54,
      "context": "const uniqueDates = new Set(laborData?.map((record: any) => record.work_date) || [])",
      "type": "explicit"
    },
    {
      "file": "app/api/partner/labor/by-site/route.ts",
      "line": 86,
      "column": 65,
      "context": "const siteLaborPromises = partnerSites.map(async (sitePartner: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/partner/labor/by-site/route.ts",
      "line": 105,
      "column": 67,
      "context": "const totalWorkHours = laborData?.reduce((sum: number, record: any) => sum + (Number(record.work_hours) || 0), 0) || 0",
      "type": "explicit"
    },
    {
      "file": "app/api/partner/labor/by-site/route.ts",
      "line": 106,
      "column": 68,
      "context": "const totalLaborHours = laborData?.reduce((sum: number, record: any) => sum + (Number(record.labor_hours) || 0), 0) || 0",
      "type": "explicit"
    },
    {
      "file": "app/api/partner/labor/by-site/route.ts",
      "line": 109,
      "column": 56,
      "context": "const uniqueDates = new Set(laborData?.map((record: any) => record.work_date) || [])",
      "type": "explicit"
    },
    {
      "file": "app/api/partner/labor/by-site/route.ts",
      "line": 136,
      "column": 49,
      "context": "const validSiteLabor = siteLabor.filter((site: any) => site !== null)",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/analytics/metrics/route.ts",
      "line": 58,
      "column": 39,
      "context": "const delivered = logs?.filter((log: any) => log.status === 'delivered').length || 0",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/analytics/metrics/route.ts",
      "line": 59,
      "column": 36,
      "context": "const failed = logs?.filter((log: any) => log.status === 'failed').length || 0",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/analytics/metrics/route.ts",
      "line": 60,
      "column": 37,
      "context": "const clicked = logs?.filter((log: any) => log.clicked_at).length || 0",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/analytics/metrics/route.ts",
      "line": 81,
      "column": 22,
      "context": "logs?.forEach((log: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/analytics/metrics/route.ts",
      "line": 116,
      "column": 39,
      "context": "const dayLogs = logs?.filter((log: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/analytics/metrics/route.ts",
      "line": 124,
      "column": 38,
      "context": "delivered: dayLogs.filter((log: any) => log.status === 'delivered').length,",
      "type": "explicit"
    },
    {
      "file": "app/api/notifications/analytics/metrics/route.ts",
      "line": 125,
      "column": 36,
      "context": "clicked: dayLogs.filter((log: any) => log.clicked_at).length",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/workers/available/route.ts",
      "line": 37,
      "column": 19,
      "context": "?.map((sw: any) => sw.profiles)",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/workers/available/route.ts",
      "line": 38,
      "column": 20,
      "context": ".filter((p: any) => p)",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/required-document-types/[id]/route.ts",
      "line": 101,
      "column": 20,
      "context": "const updateData: any = {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/required-document-types/[id]/route.ts",
      "line": 136,
      "column": 54,
      "context": "const roleInserts = role_mappings.map((mapping: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/required-document-types/[id]/route.ts",
      "line": 159,
      "column": 66,
      "context": "const siteInserts = site_customizations.map((customization: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/documents/required/route.ts",
      "line": 84,
      "column": 94,
      "context": "console.log('Required documents API - All document titles:', documentsWithProfiles?.map((d: any) => d.title))",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/documents/required/route.ts",
      "line": 87,
      "column": 64,
      "context": "const transformedDocuments = documentsWithProfiles?.map((doc: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/documents/integrated/route.ts",
      "line": 128,
      "column": 59,
      "context": "const statisticsByCategory = categoryStats?.reduce((acc: any, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/documents/integrated/route.ts",
      "line": 128,
      "column": 69,
      "context": "const statisticsByCategory = categoryStats?.reduce((acc: any, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/documents/integrated/route.ts",
      "line": 140,
      "column": 55,
      "context": "const statisticsByStatus = statusStats?.reduce((acc: any, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/documents/integrated/route.ts",
      "line": 140,
      "column": 65,
      "context": "const statisticsByStatus = statusStats?.reduce((acc: any, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/documents/integrated/route.ts",
      "line": 147,
      "column": 54,
      "context": "const documentsByCategory = documents?.reduce((acc: any, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/documents/integrated/route.ts",
      "line": 147,
      "column": 64,
      "context": "const documentsByCategory = documents?.reduce((acc: any, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/documents/integrated/route.ts",
      "line": 152,
      "column": 28,
      "context": "}, {} as Record<string, any[]>) || {}",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/assignment/partner-site-mappings/route.ts",
      "line": 66,
      "column": 41,
      "context": "(mappings || []).map(async (mapping: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/daily-reports/export/route.ts",
      "line": 246,
      "column": 10,
      "context": "} as any) as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/admin/daily-reports/export/route.ts",
      "line": 246,
      "column": 18,
      "context": "} as any) as any)",
      "type": "assertion"
    },
    {
      "file": "app/dashboard/admin/documents/required/[documentType]/page.tsx",
      "line": 31,
      "column": 48,
      "context": "if (!canAccessDocumentCategory(profile.role as any, 'required')) {",
      "type": "assertion"
    },
    {
      "file": "app/dashboard/admin/daily-reports/[id]/edit/page.tsx",
      "line": 107,
      "column": 49,
      "context": "receipts: dailyDocuments?.filter((doc: any) => doc.file_type === 'receipt'),",
      "type": "explicit"
    },
    {
      "file": "app/dashboard/admin/daily-reports/[id]/edit/page.tsx",
      "line": 108,
      "column": 58,
      "context": "additional_photos: dailyDocuments?.filter((doc: any) => doc.file_type === 'photo')",
      "type": "explicit"
    },
    {
      "file": "app/api/users/[id]/sites/available/route.ts",
      "line": 36,
      "column": 49,
      "context": "const assignedSiteIds = assignedSites?.map((a: any) => a.site_id) || [];",
      "type": "explicit"
    },
    {
      "file": "app/api/shared-documents/[id]/permissions/[permissionId]/route.ts",
      "line": 44,
      "column": 20,
      "context": "const updateData: any = {}",
      "type": "explicit"
    },
    {
      "file": "app/api/safety/alerts/[id]/acknowledge/route.ts",
      "line": 78,
      "column": 47,
      "context": "const acknowledgedUsers = allAcks?.map((a: any) => a.user_id) || []",
      "type": "explicit"
    },
    {
      "file": "app/api/partner/sites/[id]/documents/route.ts",
      "line": 96,
      "column": 59,
      "context": "const transformedDocuments = (documents || []).map((doc: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/partner/sites/[id]/documents/route.ts",
      "line": 113,
      "column": 58,
      "context": "const documentStats = transformedDocuments.reduce((acc: any, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/partner/sites/[id]/documents/route.ts",
      "line": 113,
      "column": 68,
      "context": "const documentStats = transformedDocuments.reduce((acc: any, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/users/[id]/documents/route.ts",
      "line": 65,
      "column": 36,
      "context": "const doc = documents?.find((d: any) => d.document_type === docType)",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/workers/route.ts",
      "line": 22,
      "column": 75,
      "context": "const authResult = await Promise.race([authPromise, timeoutPromise]) as any",
      "type": "assertion"
    },
    {
      "file": "app/api/admin/sites/[id]/workers/route.ts",
      "line": 102,
      "column": 41,
      "context": "const workerIds = assignments?.map((a: any) => a.user_id) || []",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/workers/route.ts",
      "line": 119,
      "column": 38,
      "context": "assignments?.forEach((assignment: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/workers/route.ts",
      "line": 120,
      "column": 41,
      "context": "const user = userDetails?.find((u: any) => u.id === assignment.user_id)",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/partners/route.ts",
      "line": 96,
      "column": 60,
      "context": "const documentsByPartner = invoiceDocuments?.reduce((acc: any, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/partners/route.ts",
      "line": 96,
      "column": 70,
      "context": "const documentsByPartner = invoiceDocuments?.reduce((acc: any, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/daily-reports/route.ts",
      "line": 86,
      "column": 45,
      "context": "submitted_reports: statsData?.filter((r: any) => r.status === 'submitted').length || 0,",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/daily-reports/route.ts",
      "line": 87,
      "column": 41,
      "context": "draft_reports: statsData?.filter((r: any) => r.status === 'draft').length || 0,",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/daily-reports/route.ts",
      "line": 88,
      "column": 43,
      "context": "total_workers: statsData?.reduce((sum: any, r: any) => sum + (r.total_workers || 0), 0) || 0",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/daily-reports/route.ts",
      "line": 88,
      "column": 51,
      "context": "total_workers: statsData?.reduce((sum: any, r: any) => sum + (r.total_workers || 0), 0) || 0",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/integrated/route.ts",
      "line": 89,
      "column": 60,
      "context": ".rpc('get_site_statistics', { site_id_param: siteId } as any) as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/admin/sites/[id]/integrated/route.ts",
      "line": 89,
      "column": 68,
      "context": ".rpc('get_site_statistics', { site_id_param: siteId } as any) as any)",
      "type": "assertion"
    },
    {
      "file": "app/api/admin/sites/[id]/integrated/route.ts",
      "line": 124,
      "column": 53,
      "context": "const uniqueWorkers = workersSummary?.reduce((acc: any, assignment: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/integrated/route.ts",
      "line": 124,
      "column": 70,
      "context": "const uniqueWorkers = workersSummary?.reduce((acc: any, assignment: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/integrated/route.ts",
      "line": 126,
      "column": 35,
      "context": "if (profileId && !acc.find((w: any) => w.id === profileId)) {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/integrated/route.ts",
      "line": 131,
      "column": 52,
      "context": "assignment_count: workersSummary.filter((w: any) => w.profiles?.id === profileId).length",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/integrated/route.ts",
      "line": 135,
      "column": 13,
      "context": "}, [] as any[]) || []",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/integrated/route.ts",
      "line": 138,
      "column": 54,
      "context": "const customers = siteData.customer_sites?.map((cs: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/integrated/route.ts",
      "line": 147,
      "column": 45,
      "context": "const primaryCustomer = customers.find((c: any) => c.is_primary_customer)",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/integrated/route.ts",
      "line": 150,
      "column": 71,
      "context": "const documentsByCategory = siteData.unified_documents?.reduce((acc: any, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/integrated/route.ts",
      "line": 150,
      "column": 81,
      "context": "const documentsByCategory = siteData.unified_documents?.reduce((acc: any, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/integrated/route.ts",
      "line": 155,
      "column": 28,
      "context": "}, {} as Record<string, any[]>) || {}",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/integrated/route.ts",
      "line": 158,
      "column": 67,
      "context": "const documentsByType = siteData.unified_documents?.reduce((acc: any, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/integrated/route.ts",
      "line": 158,
      "column": 77,
      "context": "const documentsByType = siteData.unified_documents?.reduce((acc: any, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/integrated/route.ts",
      "line": 163,
      "column": 28,
      "context": "}, {} as Record<string, any[]>) || {}",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/integrated/route.ts",
      "line": 189,
      "column": 29,
      "context": "acc[type] = (docs as any[]).length",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/integrated/route.ts",
      "line": 193,
      "column": 33,
      "context": "acc[category] = (docs as any[]).length",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/documents/route.ts",
      "line": 93,
      "column": 37,
      "context": "by_type: statsData?.reduce((acc: any, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/documents/route.ts",
      "line": 93,
      "column": 47,
      "context": "by_type: statsData?.reduce((acc: any, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/documents/required/[documentType]/route.ts",
      "line": 84,
      "column": 52,
      "context": "const filteredDocuments = documents?.filter((doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/documents/required/[documentType]/route.ts",
      "line": 93,
      "column": 59,
      "context": "const transformedDocuments = filteredDocuments.map((doc: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/assignment/dashboard/stats/route.ts",
      "line": 38,
      "column": 61,
      "context": "const assignedUserIds = new Set(assignedUsersData?.map((a: any) => a.user_id) || [])",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/assignment/dashboard/activity/route.ts",
      "line": 66,
      "column": 68,
      "context": "const assignmentActivities = (assignments || []).map((assignment: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/assignment/dashboard/activity/route.ts",
      "line": 78,
      "column": 59,
      "context": "const mappingActivities = (mappings || []).map((mapping: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/assignment/user-assignments/[id]/route.ts",
      "line": 127,
      "column": 20,
      "context": "const updateData: any = {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/daily-reports/[id]/integrated/route.ts",
      "line": 116,
      "column": 68,
      "context": "const workerStats = reportData.worker_assignments?.reduce((stats: any, assignment: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/daily-reports/[id]/integrated/route.ts",
      "line": 116,
      "column": 85,
      "context": "const workerStats = reportData.worker_assignments?.reduce((stats: any, assignment: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/daily-reports/[id]/integrated/route.ts",
      "line": 151,
      "column": 69,
      "context": "const documentsByType = reportData.unified_documents?.reduce((acc: any, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/daily-reports/[id]/integrated/route.ts",
      "line": 151,
      "column": 79,
      "context": "const documentsByType = reportData.unified_documents?.reduce((acc: any, doc: any) => {",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/daily-reports/[id]/integrated/route.ts",
      "line": 156,
      "column": 28,
      "context": "}, {} as Record<string, any[]>) || {}",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/daily-reports/[id]/integrated/route.ts",
      "line": 159,
      "column": 70,
      "context": "const primaryCustomer = reportData.sites?.customer_sites?.find((cs: any) => cs.is_primary_customer)",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/daily-reports/[id]/integrated/route.ts",
      "line": 179,
      "column": 62,
      "context": "all_customers: reportData.sites?.customer_sites?.map((cs: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/daily-reports/[id]/integrated/route.ts",
      "line": 188,
      "column": 29,
      "context": "acc[type] = (docs as any[]).length",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/workers/available/route.ts",
      "line": 40,
      "column": 51,
      "context": "const assignedUserIds = assignedWorkers?.map((w: any) => w.user_id) || []",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/workers/available/route.ts",
      "line": 63,
      "column": 56,
      "context": "const formattedWorkers = profileWorkers?.map((worker: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/workers/assign/route.ts",
      "line": 64,
      "column": 51,
      "context": "const workerProfile = workerProfiles?.find((p: any) => p.id === workerId)",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/partners/available/route.ts",
      "line": 58,
      "column": 53,
      "context": "const partnersWithStatus = partners?.map((partner: any) => ({",
      "type": "explicit"
    },
    {
      "file": "app/api/admin/sites/[id]/partners/available/route.ts",
      "line": 60,
      "column": 50,
      "context": "is_assigned: partner.site_partners?.some((sp: any) => sp.site_id === siteId && sp.partner_company_id === partner.id) || false",
      "type": "explicit"
    }
  ]
}